crate,downloads,recent_downloads,updated_at,created_at,max_version,description,repository
syn,824725204,121521400,2025-03-09T21:23:48.900018Z,2016-09-07T15:22:40.491981Z,2.0.100,Parser for Rust source code,https://github.com/dtolnay/syn
hashbrown,602890466,115729705,2024-11-25T00:36:20.789854Z,2018-10-29T14:28:15.767024Z,0.15.2,A Rust port of Google's SwissTable hash map,https://github.com/rust-lang/hashbrown
bitflags,601327631,92936307,2025-03-01T10:07:07.056260Z,2015-01-15T08:35:24.901276Z,2.9.0,"A macro to generate structures which behave like bitflags.
",https://github.com/bitflags/bitflags
proc-macro2,574783193,77940427,2025-03-03T05:14:34.171809Z,2017-07-06T01:01:58.064887Z,1.0.94,A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.,https://github.com/dtolnay/proc-macro2
quote,562396095,76934026,2025-03-11T23:56:24.338648Z,2016-09-03T05:42:05.484129Z,1.0.40,Quasi-quoting macro quote!(...),https://github.com/dtolnay/quote
libc,556030430,74958501,2025-04-03T07:19:23.284954Z,2015-01-15T20:22:13.100871Z,1.0.0-alpha.1,Raw FFI bindings to platform libraries like libc.,https://github.com/rust-lang/libc
base64,546636809,90946714,2024-04-30T23:16:40.343739Z,2015-12-04T01:07:31.173829Z,0.22.1,encodes and decodes base64 as bytes or utf8,https://github.com/marshallpierce/rust-base64
regex-syntax,525403327,83526114,2024-09-29T13:26:58.258288Z,2015-05-27T23:19:16.839117Z,0.8.5,A regular expression parser.,https://github.com/rust-lang/regex/tree/master/regex-syntax
rand_core,505940004,74723811,2025-03-01T14:01:08.459817Z,2017-09-14T12:02:18.709038Z,0.9.3,"Core random number generator traits and tools for implementation.
",https://github.com/rust-random/rand
serde,499787576,67559046,2025-03-09T19:13:49.968038Z,2014-12-05T20:20:39.487502Z,1.0.219,A generic serialization/deserialization framework,https://github.com/serde-rs/serde
cfg-if,496973974,62489450,2020-10-06T18:44:12.678620Z,2015-07-08T01:11:24.485040Z,1.0.0,"A macro to ergonomically define an item depending on a large number of #[cfg]
parameters. Structured like an if-else chain, the first matching branch is the
item that gets emitted.
",https://github.com/alexcrichton/cfg-if
rand,496474357,70588867,2025-01-27T13:38:34.935106Z,2015-02-03T06:17:14.147783Z,0.9.0,"Random number generators and other randomness functionality.
",https://github.com/rust-random/rand
indexmap,466406909,82296805,2025-04-04T23:17:05.300032Z,2018-01-30T17:59:48.053105Z,2.9.0,A hash table with consistent order and fast iteration.,https://github.com/indexmap-rs/indexmap
getrandom,462786325,81326717,2025-03-17T21:51:47.455402Z,2019-01-19T12:56:49.379182Z,0.3.2,A small cross-platform library for retrieving random data from system source,https://github.com/rust-random/getrandom
serde_derive,457927512,63364017,2025-03-09T19:13:28.347565Z,2016-08-29T05:22:31.552019Z,1.0.219,"Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",https://github.com/serde-rs/serde
autocfg,455149953,62842150,2024-09-27T01:05:28.096978Z,2018-05-30T18:21:35.379916Z,1.4.0,Automatic cfg for Rust compiler features,https://github.com/cuviper/autocfg
itoa,452670998,61497069,2025-03-03T23:42:45.916886Z,2016-06-25T21:50:33.832Z,1.0.15,Fast integer primitive to string conversion,https://github.com/dtolnay/itoa
memchr,443687477,60636207,2024-06-14T00:17:06.888625Z,2015-06-11T23:00:13.079973Z,2.7.4,"Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for
1, 2 or 3 byte search and single substring search.
",https://github.com/BurntSushi/memchr
itertools,443613374,97358474,2024-12-31T12:32:06.925445Z,2014-11-21T19:56:41.399795Z,0.14.0,"Extra iterator adaptors, iterator methods, free functions, and macros.",https://github.com/rust-itertools/itertools
serde_json,436301986,60754536,2025-03-03T09:04:21.796751Z,2015-08-07T19:04:18.632088Z,1.0.140,A JSON serialization file format,https://github.com/serde-rs/json
log,424411329,58808896,2025-03-24T09:21:53.062280Z,2014-12-13T22:10:19.944550Z,0.4.27,"A lightweight logging facade for Rust
",https://github.com/rust-lang/log
once_cell,422957054,64786292,2025-03-28T17:15:56.184274Z,2018-08-02T00:12:48.969947Z,1.21.3,Single assignment cells and lazy values.,https://github.com/matklad/once_cell
regex,418192310,54531840,2024-10-24T14:17:06.057437Z,2014-12-13T22:10:11.303311Z,1.11.1,"An implementation of regular expressions for Rust. This implementation uses
finite automata and guarantees linear time matching on all inputs.
",https://github.com/rust-lang/regex
rand_chacha,411106060,63556100,2025-01-27T13:38:26.609781Z,2018-10-17T10:08:22.907614Z,0.9.0,"ChaCha random number generator
",https://github.com/rust-random/rand
aho-corasick,410133572,54217126,2024-03-20T00:06:10.886998Z,2015-06-12T01:15:54.846782Z,1.1.3,Fast multiple substring searching.,https://github.com/BurntSushi/aho-corasick
heck,407762443,72727083,2024-03-12T22:42:23.303234Z,2017-03-27T11:22:23.067190Z,0.5.0,heck is a case conversion library.,https://github.com/withoutboats/heck
ryu,403319300,58324404,2025-03-04T00:13:50.644407Z,2018-07-28T17:12:43.329564Z,1.0.20,Fast floating point to string conversion,https://github.com/dtolnay/ryu
cc,401814035,57423172,2025-04-04T14:18:00.518911Z,2014-12-16T05:26:51.306505Z,1.2.18,"A build-time dependency for Cargo build scripts to assist in invoking the native
C compiler to compile native C code into a static archive to be linked into Rust
code.
",https://github.com/rust-lang/cc-rs
parking_lot_core,400399715,53508871,2024-04-25T23:03:36.701497Z,2016-08-26T23:12:30.588575Z,0.9.10,An advanced API for creating custom synchronization primitives.,https://github.com/Amanieu/parking_lot
unicode-ident,399466834,72274452,2025-03-04T00:23:40.461695Z,2021-10-02T05:15:24.656394Z,1.0.18,Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31,https://github.com/dtolnay/unicode-ident
regex-automata,397469236,78838211,2024-11-11T15:16:26.004200Z,2019-01-02T22:11:41.647566Z,0.4.9,Automata construction and matching using regular expressions.,https://github.com/rust-lang/regex/tree/master/regex-automata
clap,393937927,59017979,2025-04-01T16:51:59.815379Z,2015-03-01T01:17:24.903018Z,4.5.35,"A simple to use, efficient, and full-featured Command Line Argument Parser",https://github.com/clap-rs/clap
smallvec,390437971,53227749,2025-04-05T00:46:59.289860Z,2015-04-06T06:21:18.472333Z,2.0.0-alpha.11,'Small vector' optimization: store up to a small number of items on the stack,https://github.com/servo/rust-smallvec
lazy_static,385130066,48747683,2024-06-21T22:48:42.440092Z,2014-11-23T01:18:10.993977Z,1.5.0,A macro for declaring lazily evaluated statics in Rust.,https://github.com/rust-lang-nursery/lazy-static.rs
thiserror-impl,384990193,77217942,2025-03-03T04:24:17.423843Z,2019-10-09T18:05:26.708915Z,2.0.12,Implementation detail of the `thiserror` crate,https://github.com/dtolnay/thiserror
thiserror,384970272,77219084,2025-03-03T04:24:30.902254Z,2019-10-09T18:05:40.346377Z,2.0.12,derive(Error),https://github.com/dtolnay/thiserror
parking_lot,384522817,52847389,2024-05-24T22:26:24.893817Z,2016-05-13T15:57:59.130349Z,0.12.3,More compact and efficient implementations of the standard synchronization primitives.,https://github.com/Amanieu/parking_lot
strsim,376552833,57583855,2024-04-02T22:18:09.406790Z,2015-02-10T02:10:46.832583Z,0.11.1,"Implementations of string similarity metrics. Includes Hamming, Levenshtein,
OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and SÃ¸rensen-Dice.
",https://github.com/rapidfuzz/strsim-rs
num-traits,372521868,48472484,2024-05-03T21:27:39.856244Z,2016-04-14T07:22:34.568594Z,0.2.19,Numeric traits for generic mathematics,https://github.com/rust-num/num-traits
time,354974444,40666658,2025-03-23T21:44:54.684907Z,2014-11-13T06:52:51.369245Z,0.3.41,Date and time library. Fully interoperable with the standard library. Mostly compatible with #![no_std].,https://github.com/time-rs/time
semver,354374260,50896728,2025-03-04T00:15:02.937867Z,2014-11-11T05:37:08.485853Z,1.0.26,Parser and evaluator for Cargo's flavor of Semantic Versioning,https://github.com/dtolnay/semver
version_check,349750216,46923264,2024-07-25T23:38:14.142737Z,2017-01-15T08:53:43.890697Z,0.9.5,Tiny crate to check the version of the installed/running rustc.,https://github.com/SergioBenitez/version_check
either,348376231,51176697,2025-03-05T21:36:27.950711Z,2015-09-14T22:12:31.900654Z,1.15.0,"The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.
",https://github.com/rayon-rs/either
idna,346895890,50579555,2024-11-04T09:47:25.663512Z,2016-03-27T08:55:20.657552Z,1.0.3,IDNA (Internationalizing Domain Names in Applications) and Punycode.,https://github.com/servo/rust-url/
lock_api,339769690,43739449,2024-04-25T23:01:49.287895Z,2018-06-08T00:16:14.822518Z,0.4.12,Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.,https://github.com/Amanieu/parking_lot
digest,339209486,46954202,2025-02-22T18:58:56.313335Z,2016-10-06T14:10:33.763490Z,0.11.0-pre.10,Traits for cryptographic hash functions and message authentication codes,https://github.com/RustCrypto/traits
scopeguard,336542305,43192380,2023-07-17T13:47:53.232324Z,2015-04-30T12:04:48.236552Z,1.2.0,"A RAII scope guard that will run a given closure when it goes out of scope,
even if the code between panics (assuming unwinding panic).

Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as
shorthands for guards with one of the implemented strategies.
",https://github.com/bluss/scopeguard
bytes,336377734,48336517,2025-03-05T12:12:14.708277Z,2015-01-30T08:04:59.453916Z,1.10.1,Types and traits for working with bytes,https://github.com/tokio-rs/bytes
socket2,332868063,48350067,2025-03-30T13:12:13.054152Z,2017-06-07T18:05:03.996775Z,0.5.9,"Utilities for handling networking sockets with a maximal amount of configuration
possible intended.
",https://github.com/rust-lang/socket2
block-buffer,329005746,45626543,2025-02-22T16:06:21.726189Z,2017-06-12T01:07:55.617813Z,0.11.0-rc.4,Buffer type for block processing of data,https://github.com/RustCrypto/utils
crossbeam-utils,325351725,44125101,2024-12-15T15:26:01.019842Z,2017-08-28T12:20:45.154206Z,0.8.21,Utilities for concurrent programming,https://github.com/crossbeam-rs/crossbeam
pin-project-lite,322054025,46433124,2025-01-06T12:20:51.767173Z,2019-10-22T15:30:45.981586Z,0.2.16,"A lightweight version of pin-project written with declarative macros.
",https://github.com/taiki-e/pin-project-lite
memoffset,314740851,40487724,2024-03-26T19:58:31.849513Z,2017-10-17T06:16:56.082296Z,0.9.1,offset_of functionality for Rust structs.,https://github.com/Gilnaa/memoffset
miniz_oxide,313728104,52682590,2025-04-08T16:57:39.964326Z,2017-10-10T19:08:01.549072Z,0.8.8,DEFLATE compression and decompression library rewritten in Rust based on miniz,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide
anyhow,313597560,47549637,2025-03-03T05:09:21.291587Z,2019-10-05T19:52:26.646502Z,1.0.97,Flexible concrete Error type built on std::error::Error,https://github.com/dtolnay/anyhow
mio,312525084,47045915,2024-11-29T16:55:05.717773Z,2014-11-11T23:52:39.666778Z,1.0.3,Lightweight non-blocking I/O.,https://github.com/tokio-rs/mio
ppv-lite86,305420995,44396930,2025-03-09T20:01:40.419162Z,2019-02-01T22:36:06.869586Z,0.2.21,Cross-platform cryptography-oriented low-level SIMD library.,https://github.com/cryptocorrosion/cryptocorrosion
rustix,302977493,57391392,2025-04-01T13:55:31.940128Z,2021-10-29T10:44:45.767768Z,1.0.5,Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls,https://github.com/bytecodealliance/rustix
percent-encoding,302036557,41195250,2023-11-22T19:07:35.463515Z,2017-06-13T17:02:11.044209Z,2.3.1,Percent encoding and decoding,https://github.com/servo/rust-url/
byteorder,302014824,43309461,2023-10-06T00:45:57.877036Z,2015-02-03T23:28:57.422130Z,1.5.0,Library for reading/writing numbers in big-endian and little-endian.,https://github.com/BurntSushi/byteorder
tokio,301676098,42735973,2025-04-08T07:48:44.833815Z,2016-07-01T20:39:07.497766Z,1.44.2,"An event-driven, non-blocking I/O platform for writing asynchronous I/O
backed applications.
",https://github.com/tokio-rs/tokio
url,298513154,41958385,2024-11-22T19:49:19.984539Z,2014-11-14T18:37:08.658193Z,2.5.4,"URL library for Rust, based on the WHATWG URL Standard",https://github.com/servo/rust-url
generic-array,296833347,39526372,2025-01-12T17:58:19.615534Z,2015-09-27T14:13:44.174465Z,1.2.0,Generic types implementing functionality of arrays,https://github.com/fizyk20/generic-array.git
windows-sys,292147105,66634429,2024-07-30T15:26:17.224105Z,2021-10-18T14:47:07.495906Z,0.59.0,Rust for Windows,https://github.com/microsoft/windows-rs
http,291958891,52969826,2025-03-11T20:19:56.370499Z,2014-11-20T23:30:38.809367Z,1.3.1,"A set of types for representing HTTP requests and responses.
",https://github.com/hyperium/http
fastrand,290899069,51528781,2024-12-08T16:27:29.613896Z,2020-05-27T16:21:53.648642Z,2.3.0,A simple and fast random number generator,https://github.com/smol-rs/fastrand
toml,288605145,43599742,2025-02-05T15:17:28.453820Z,2014-11-11T05:37:45.901317Z,0.8.20,"A native Rust encoder and decoder of TOML-formatted files and streams. Provides
implementations of the standard Serialize/Deserialize traits for TOML data to
facilitate deserializing and serializing Rust structures.
",https://github.com/toml-rs/toml
hyper,286387013,49523783,2025-01-28T13:52:17.475823Z,2014-11-22T04:05:30.459510Z,1.6.0,A protective and efficient HTTP library for all.,https://github.com/hyperium/hyper
slab,283309199,38729459,2023-08-22T13:40:02.247474Z,2015-06-15T20:47:25.571674Z,0.4.9,Pre-allocated storage for a uniform data type,https://github.com/tokio-rs/slab
ahash,283278721,42441162,2024-03-03T17:28:36.057306Z,2019-02-28T06:58:45.540196Z,0.8.11,A non-cryptographic hash function using AES-NI for high performance,https://github.com/tkaitchuck/ahash
futures-core,282506655,40593261,2024-10-05T07:06:47.233193Z,2018-03-05T22:32:59.053938Z,0.3.31,"The core traits and types in for the `futures` library.
",https://github.com/rust-lang/futures-rs
windows_x86_64_msvc,278007021,52614932,2025-01-07T15:43:03.422486Z,2021-10-27T15:17:55.755278Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
num_cpus,277986809,28346405,2023-06-29T12:57:59.066610Z,2015-03-16T18:43:53.862639Z,1.16.0,Get the number of CPUs on a machine.,https://github.com/seanmonstar/num_cpus
sha2,276586096,42158886,2025-03-05T21:18:11.496292Z,2016-05-06T20:20:25.502104Z,0.11.0-pre.5,"Pure Rust implementation of the SHA-2 hash function family
including SHA-224, SHA-256, SHA-384, and SHA-512.
",https://github.com/RustCrypto/hashes
futures-util,276231092,40066330,2024-10-05T07:07:27.303135Z,2018-03-05T22:42:24.332661Z,0.3.31,"Common utilities and extension traits for the futures-rs library.
",https://github.com/rust-lang/futures-rs
linux-raw-sys,276015622,53038049,2025-04-09T12:02:50.479299Z,2021-06-12T14:38:40.005650Z,0.9.4,Generated bindings for Linux's userspace API,https://github.com/sunfishcode/linux-raw-sys
futures-task,275699792,40040835,2024-10-05T07:07:01.495599Z,2019-07-29T02:21:47.224744Z,0.3.31,"Tools for working with tasks.
",https://github.com/rust-lang/futures-rs
chrono,275237689,39923953,2025-02-26T08:32:17.218741Z,2014-11-20T04:21:11.545166Z,0.4.40,Date and time library for Rust,https://github.com/chronotope/chrono
fnv,272085899,40272754,2020-05-14T16:06:29.223002Z,2015-04-06T18:59:35.782519Z,1.0.7,FowlerâNollâVo hash function,https://github.com/servo/rust-fnv
futures-sink,271971616,39398477,2024-10-05T07:06:58.039843Z,2018-03-05T22:41:47.740444Z,0.3.31,"The asynchronous `Sink` trait for the futures-rs library.
",https://github.com/rust-lang/futures-rs
futures-channel,270606142,39023673,2024-10-05T07:07:06.660085Z,2018-03-05T22:36:02.312563Z,0.3.31,"Channels for asynchronous communication using futures-rs.
",https://github.com/rust-lang/futures-rs
typenum,269894600,39890673,2025-02-18T07:41:11.193331Z,2015-09-26T03:09:06.865219Z,1.18.0,"Typenum is a Rust library for type-level numbers evaluated at
    compile time. It currently supports bits, unsigned integers, and signed
    integers. It also provides a type-level array of type-level numbers, but its
    implementation is incomplete.",https://github.com/paholg/typenum
unicode-normalization,267456973,27995639,2024-09-17T15:27:12.950740Z,2015-04-15T01:55:51.148249Z,0.1.24,"This crate provides functions for normalization of
Unicode strings, including Canonical and Compatible
Decomposition and Recomposition, as described in
Unicode Standard Annex #15.
",https://github.com/unicode-rs/unicode-normalization
tracing,267353450,40774189,2024-11-27T17:13:14.607037Z,2017-11-27T18:43:02.901436Z,0.1.41,"Application-level tracing for Rust.
",https://github.com/tokio-rs/tracing
tracing-core,267119237,40714355,2024-11-25T22:10:20.575707Z,2019-06-20T17:36:00.464363Z,0.1.33,"Core primitives for application-level tracing.
",https://github.com/tokio-rs/tracing
rustls,265909891,51653834,2025-04-10T10:38:18.865647Z,2016-08-27T06:58:30.801463Z,0.23.26,Rustls is a modern TLS library written in Rust.,https://github.com/rustls/rustls
spin,265663048,40291745,2025-03-26T19:10:27.894178Z,2015-01-27T15:50:37.555349Z,0.10.0,Spin-based synchronization primitives,https://github.com/mvdnes/spin-rs.git
futures,264880745,35900060,2024-10-05T07:07:45.246157Z,2016-07-31T20:58:03.676528Z,0.3.31,"An implementation of futures and streams featuring zero allocations,
composability, and iterator-like interfaces.
",https://github.com/rust-lang/futures-rs
num-integer,264198851,33356037,2024-02-08T01:42:29.084925Z,2016-04-14T07:26:07.694449Z,0.1.46,Integer traits and functions,https://github.com/rust-num/num-integer
windows_x86_64_gnu,263073792,50696175,2025-01-07T15:42:54.444046Z,2021-10-28T19:27:32.276769Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
tokio-util,262733722,37874150,2025-03-13T10:24:36.801368Z,2018-02-01T03:25:03.010037Z,0.7.14,"Additional utilities for working with Tokio.
",https://github.com/tokio-rs/tokio
tempfile,261423706,41720868,2025-03-19T17:30:21.939513Z,2015-04-14T18:26:06.249019Z,3.19.1,A library for managing temporary files and directories.,https://github.com/Stebalien/tempfile
tinyvec,261379388,34671355,2025-03-03T04:38:33.236288Z,2020-01-07T02:30:11.536811Z,1.9.0,`tinyvec` provides 100% safe vec-like data structures.,https://github.com/Lokathor/tinyvec
pkg-config,260722952,37998418,2025-03-03T10:04:55.062213Z,2014-11-11T06:37:31.276162Z,0.3.32,"A library to run the pkg-config system tool at build time in order to be used in
Cargo build scripts.
",https://github.com/rust-lang/pkg-config-rs
windows_i686_msvc,260533800,50178632,2025-01-07T15:42:50.460248Z,2021-10-27T15:17:41.977374Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
unicode-xid,260524591,27479649,2024-09-19T15:55:24.420864Z,2015-04-27T01:12:08.811826Z,0.2.6,"Determine whether characters have the XID_Start
or XID_Continue properties according to
Unicode Standard Annex #31.
",https://github.com/unicode-rs/unicode-xid
windows_aarch64_msvc,260086542,50189471,2025-01-07T15:42:38.305221Z,2021-11-05T19:17:58.112695Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
rustc_version,259952695,38622329,2024-08-28T09:21:22.033328Z,2015-08-24T00:54:04.579390Z,0.4.1,A library for querying the version of a installed rustc compiler,https://github.com/djc/rustc-version-rs
http-body,259844236,46779295,2024-07-12T15:49:01.533452Z,2019-04-04T18:06:00.061574Z,1.0.1,"Trait representing an asynchronous, streaming, HTTP request or response body.
",https://github.com/hyperium/http-body
windows_i686_gnu,259623858,50087376,2025-01-07T15:42:42.282152Z,2021-10-28T19:27:12.591562Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
futures-io,259549444,37746013,2024-10-05T07:06:53.156320Z,2016-07-31T20:58:50.213004Z,0.3.31,"The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library.
",https://github.com/rust-lang/futures-rs
pin-utils,259378184,38385849,2020-04-22T16:13:27.095776Z,2018-08-06T15:00:31.609789Z,0.1.0,"Utilities for pinning
",https://github.com/rust-lang-nursery/pin-utils
uuid,257956611,40562702,2025-03-14T04:14:24.373430Z,2014-11-11T05:37:37.261193Z,1.16.0,A library to generate and parse UUIDs.,https://github.com/uuid-rs/uuid
h2,257381386,44214271,2025-02-18T19:14:15.226465Z,2017-03-09T22:02:00.510015Z,0.4.8,An HTTP/2 client and server,https://github.com/hyperium/h2
unicode-width,255264279,40868577,2024-09-19T21:00:00.648797Z,2015-04-14T19:29:07.865266Z,0.2.0,"Determine displayed width of `char` and `str` types
according to Unicode Standard Annex #11 rules.
",https://github.com/unicode-rs/unicode-width
unicode-bidi,251546831,22460974,2024-12-16T23:09:47.459625Z,2015-06-11T18:06:04.414255Z,0.3.18,Implementation of the Unicode Bidirectional Algorithm,https://github.com/servo/unicode-bidi
form_urlencoded,249023622,38356500,2023-11-22T19:09:03.881753Z,2020-06-19T22:23:03.447945Z,1.2.1,"Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.",https://github.com/servo/rust-url
nom,248025322,34973935,2025-01-26T16:03:28.068915Z,2015-01-17T17:47:52.413792Z,8.0.0,"A byte-oriented, zero-copy, parser combinators library",https://github.com/rust-bakery/nom
clap_lex,245954530,46575957,2024-12-05T21:15:27.308154Z,2022-04-15T19:08:14.988760Z,0.7.4,"Minimal, flexible command line parser",https://github.com/clap-rs/clap
nix,245881568,38262239,2024-05-24T12:23:09.842537Z,2014-11-11T22:15:48.567559Z,0.29.0,Rust friendly bindings to *nix APIs,https://github.com/nix-rust/nix
tinyvec_macros,242211188,31569811,2023-02-02T23:03:04.651564Z,2020-08-09T16:30:41.144543Z,0.1.1,Some macros for tiny containers,https://github.com/Soveu/tinyvec_macros
cpufeatures,242139349,40286692,2025-01-25T01:35:46.131569Z,2021-04-26T17:07:17.776831Z,0.2.17,"Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets, 
with no_std support and support for mobile targets including Android and iOS
",https://github.com/RustCrypto/utils
windows-targets,238538778,50768966,2025-01-07T15:43:41.583963Z,2022-09-09T14:29:19.927693Z,0.53.0,Import libs for Windows,https://github.com/microsoft/windows-rs
futures-macro,237492895,35255044,2024-10-05T07:07:15.104978Z,2019-11-06T18:21:14.020889Z,0.3.31,"The futures-rs procedural macro implementations.
",https://github.com/rust-lang/futures-rs
env_logger,235440387,33052062,2025-04-01T19:37:14.047276Z,2015-01-27T15:33:08.586936Z,0.11.8,"A logging implementation for `log` which is configured via an environment
variable.
",https://github.com/rust-cli/env_logger
crossbeam-epoch,235103166,32720811,2024-01-08T12:56:47.048640Z,2017-11-26T17:32:53.106278Z,0.9.18,Epoch-based garbage collection,https://github.com/crossbeam-rs/crossbeam
httparse,232708788,36369792,2025-03-03T14:44:09.975762Z,2015-02-20T18:34:43.448730Z,1.10.1,"A tiny, safe, speedy, zero-copy HTTP/1.x parser.",https://github.com/seanmonstar/httparse
termcolor,231670083,26755064,2024-01-10T12:40:32.427230Z,2016-11-20T20:45:01.476057Z,1.4.1,"A simple cross platform library for writing colored text to a terminal.
",https://github.com/BurntSushi/termcolor
crc32fast,230597895,33950608,2024-05-20T15:47:13.301655Z,2018-11-13T12:53:18.900720Z,1.4.2,"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation",https://github.com/srijs/rust-crc32fast
futures-executor,229598278,33943375,2024-10-05T07:07:34.937861Z,2018-03-05T22:43:02.959105Z,0.3.31,"Executors for asynchronous tasks based on the futures-rs library.
",https://github.com/rust-lang/futures-rs
thread_local,229395716,31711609,2024-02-20T21:13:16.752Z,2016-04-08T07:42:40.999679Z,1.1.8,Per-object thread-local storage,https://github.com/Amanieu/thread_local-rs
windows_aarch64_gnullvm,229322343,48241841,2025-01-07T15:42:32.178766Z,2022-09-01T20:55:47.169004Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
windows_x86_64_gnullvm,229315603,48247460,2025-01-07T15:42:58.357250Z,2022-09-01T21:01:36.169638Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
tokio-macros,227076581,36006876,2025-01-08T15:57:13.993235Z,2019-04-24T03:12:38.961545Z,2.5.0,"Tokio's proc macros.
",https://github.com/tokio-rs/tokio
redox_syscall,225086628,38418244,2025-04-05T15:14:48.090021Z,2016-11-03T01:32:41.787114Z,0.5.11,A Rust library to access raw Redox system calls,https://gitlab.redox-os.org/redox-os/syscall
ring,224898001,43346538,2025-03-11T19:42:03.889273Z,2016-08-15T22:39:18.912891Z,0.17.14,An experiment.,https://github.com/briansmith/ring
untrusted,224116293,42274966,2021-07-13T22:13:26.650010Z,2016-06-05T23:47:03.228558Z,0.9.0,"Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.",https://github.com/briansmith/untrusted
flate2,223035648,34053339,2025-04-02T00:59:51.994945Z,2014-11-11T06:37:58.925398Z,1.1.1,"DEFLATE compression and decompression exposed as Read/BufRead/Write streams.
Supports miniz_oxide and multiple zlib implementations. Supports zlib, gzip,
and raw deflate streams.
",https://github.com/rust-lang/flate2-rs
async-trait,222509664,34941092,2025-03-15T01:00:14.583735Z,2019-07-23T16:10:00.020678Z,0.1.88,Type erasure for async trait methods,https://github.com/dtolnay/async-trait
crossbeam-channel,221890086,27719445,2025-04-08T21:27:41.106342Z,2017-11-26T19:20:24.266475Z,0.5.15,Multi-producer multi-consumer channels for message passing,https://github.com/crossbeam-rs/crossbeam
crossbeam-deque,221263712,33071580,2024-12-15T15:29:28.168345Z,2017-11-26T18:02:02.212875Z,0.8.6,Concurrent work-stealing deque,https://github.com/crossbeam-rs/crossbeam
tracing-attributes,220140919,36085712,2024-11-26T22:23:02.732936Z,2019-08-08T22:42:06.221385Z,0.1.28,"Procedural macro attributes for automatically instrumenting functions.
",https://github.com/tokio-rs/tracing
textwrap,219820577,20196101,2025-03-03T17:01:53.984799Z,2016-12-17T01:34:45.436054Z,0.16.2,"Library for word wrapping, indenting, and dedenting strings. Has optional support for Unicode and emojis as well as machine hyphenation.",https://github.com/mgeisler/textwrap
hex,217440067,33019321,2021-03-03T10:48:58.682837Z,2015-10-23T05:46:39.823534Z,0.4.3,Encoding and decoding data into/from hexadecimal representation.,https://github.com/KokaKiwi/rust-hex
wasi,215542026,42615380,2025-02-28T17:50:49.661785Z,2019-03-27T16:47:22.126268Z,0.14.2+wasi-0.2.4,WASI API bindings for Rust,https://github.com/bytecodealliance/wasi-rs
toml_edit,214796434,49638617,2025-02-10T20:54:41.632313Z,2017-12-17T22:25:35.748546Z,0.22.24,Yet another format-preserving TOML parser.,https://github.com/toml-rs/toml
mime,214510865,32836254,2023-03-20T15:05:04.272177Z,2014-11-20T08:33:46.224820Z,0.3.17,Strongly Typed Mimes,https://github.com/hyperium/mime
object,214491219,33412990,2024-12-21T12:45:17.244555Z,2016-08-19T20:44:53.178735Z,0.36.7,A unified interface for reading and writing object file formats.,https://github.com/gimli-rs/object
tokio-rustls,213763717,44374274,2025-03-01T14:02:35.644698Z,2017-02-22T05:32:09.546440Z,0.26.2,Asynchronous TLS/SSL streams for Tokio using Rustls.,https://github.com/rustls/tokio-rustls
pin-project,210502925,30601532,2025-03-03T16:49:30.727281Z,2019-01-08T15:11:01.560092Z,1.1.10,"A crate for safe and ergonomic pin-projection.
",https://github.com/taiki-e/pin-project
pin-project-internal,210403549,30596643,2025-03-03T16:48:37.574097Z,2019-08-11T15:42:07.442573Z,1.1.10,"Implementation detail of the `pin-project` crate.
",https://github.com/taiki-e/pin-project
want,210312212,31736951,2023-06-14T21:50:52.862160Z,2018-03-15T19:26:09.951353Z,0.3.1,Detect when another Future wants a result.,https://github.com/seanmonstar/want
try-lock,208007891,31985010,2023-12-07T16:13:16.960779Z,2018-03-15T19:23:44.274814Z,0.2.5,A lightweight atomic lock.,https://github.com/seanmonstar/try-lock
gimli,207786226,32982132,2024-10-04T08:32:55.705085Z,2016-06-15T02:48:38.339028Z,0.31.1,A library for reading and writing the DWARF debugging format.,https://github.com/gimli-rs/gimli
subtle,207707332,35716779,2024-06-24T17:25:24.458503Z,2017-05-31T04:19:18.671882Z,2.6.1,Pure-Rust traits and utilities for constant-time cryptographic implementations.,https://github.com/dalek-cryptography/subtle
time-macros,207579035,35042524,2025-03-23T21:44:47.804411Z,2019-12-02T06:06:16.262989Z,0.2.22,"    Procedural macros for the time crate.
    This crate is an implementation detail and should not be relied upon directly.
",https://github.com/time-rs/time
errno,206505327,43333353,2025-04-04T11:12:25.745222Z,2015-03-19T21:26:09.647306Z,0.3.11,Cross-platform interface to the `errno` variable.,https://github.com/lambda-fairy/rust-errno
clap_derive,205810704,38782826,2025-03-10T20:46:30.053858Z,2020-05-03T07:51:45.713663Z,4.5.32,"Parse command line argument by defining a struct, derive crate.",https://github.com/clap-rs/clap
arrayvec,205692967,32242138,2024-08-17T12:14:16.953307Z,2015-05-19T15:27:57.651929Z,0.7.6,"A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.",https://github.com/bluss/arrayvec
walkdir,204727102,31530331,2024-03-01T17:55:09.221032Z,2015-09-27T05:01:40.286066Z,2.5.0,Recursively walk a directory.,https://github.com/BurntSushi/walkdir
adler,204496125,16516869,2021-02-26T12:12:02.566Z,2020-06-25T22:07:19.741753Z,1.0.2,A simple clean-room implementation of the Adler-32 checksum,https://github.com/jonas-schievink/adler.git
crypto-common,204494662,35645451,2025-02-22T18:52:29.741408Z,2021-02-10T22:26:47.773408Z,0.2.0-rc.2,Common cryptographic traits,https://github.com/RustCrypto/traits
tower-service,204253962,32373566,2024-08-13T16:23:33.548845Z,2018-02-19T17:50:18.964360Z,0.3.3,"Trait representing an asynchronous, request / response based, client or server.
",https://github.com/tower-rs/tower
httpdate,204140035,29732742,2023-08-13T10:55:54.391658Z,2016-10-15T10:48:40.752919Z,1.0.3,HTTP date parsing and formatting,https://github.com/pyfisch/httpdate
rustc-demangle,203658723,30394494,2024-05-07T12:12:25.371782Z,2016-05-13T20:00:42.138724Z,0.1.24,"Rust compiler symbol demangling.
",https://github.com/rust-lang/rustc-demangle
signal-hook-registry,203530043,31771652,2024-04-21T10:08:11.191480Z,2019-04-28T14:02:25.476340Z,1.4.2,Backend crate for signal-hook,https://github.com/vorner/signal-hook
glob,202349163,33189888,2024-12-29T00:12:04.334018Z,2014-11-11T05:37:15.865977Z,0.3.2,"Support for matching file paths against Unix shell style patterns.
",https://github.com/rust-lang/glob
hermit-abi,201851320,36599254,2025-03-05T13:22:10.717387Z,2019-10-20T07:34:22.550962Z,0.5.0,Hermit system calls definitions.,https://github.com/hermit-os/hermit-rs
reqwest,200887444,37263681,2025-03-18T16:48:20.397620Z,2016-10-16T17:29:41.599749Z,0.12.15,higher level HTTP client library,https://github.com/seanmonstar/reqwest
winapi,199090537,24303978,2020-06-26T11:34:33.480855Z,2014-11-29T13:35:24.366255Z,0.3.9,Raw FFI bindings for all of Windows API.,https://github.com/retep998/winapi-rs
rustls-pemfile,198491340,42896797,2024-09-30T16:29:22.598843Z,2020-12-28T14:24:30.384877Z,2.2.0,Basic .pem file parser for keys and certificates,https://github.com/rustls/pemfile
humantime,196993276,27810357,2025-03-12T22:26:08.298966Z,2016-05-20T21:32:51.043935Z,2.2.0,"A parser and formatter for std::time::{Duration, SystemTime}",https://github.com/chronotope/humantime
num-bigint,196768817,30685522,2025-01-25T00:26:55.294210Z,2016-04-14T07:41:44.715174Z,0.4.6,Big integer implementation for Rust,https://github.com/rust-num/num-bigint
backtrace,196648926,28807953,2024-09-08T22:58:38.768906Z,2015-06-10T08:23:39.379972Z,0.3.74,"A library to acquire a stack trace (backtrace) at runtime in a Rust program.
",https://github.com/rust-lang/backtrace-rs
atty,194859434,13308962,2020-01-05T22:19:33.123499Z,2015-07-10T00:25:05.224059Z,0.2.14,A simple interface for querying atty,https://github.com/softprops/atty
darling_core,193941480,35156884,2025-03-28T20:05:00.260571Z,2017-05-15T19:25:03.051442Z,0.20.11,"Helper crate for proc-macro library for reading attributes into structs when
implementing custom derives. Use https://crates.io/crates/darling in your code.
",https://github.com/TedDriggs/darling
darling_macro,193916178,35146256,2025-03-28T20:05:07.944299Z,2017-05-15T19:25:34.841634Z,0.20.11,"Internal support for a proc-macro library for reading attributes into structs when
implementing custom derives. Use https://crates.io/crates/darling in your code.
",https://github.com/TedDriggs/darling
darling,193911589,35148991,2025-03-28T20:05:16.077464Z,2017-05-15T19:26:00.393283Z,0.20.11,"A proc-macro library for reading attributes into structs when
implementing custom derives.
",https://github.com/TedDriggs/darling
same-file,193432307,30501513,2020-01-11T17:02:30.960838Z,2017-01-08T23:00:41.755668Z,1.0.6,"A simple crate for determining whether two file paths point to the same file.
",https://github.com/BurntSushi/same-file
addr2line,192765649,30672375,2024-10-04T09:02:01.134792Z,2016-12-03T21:33:01.794743Z,0.24.2,"A cross-platform symbolication library written in Rust, using `gimli`",https://github.com/gimli-rs/addr2line
paste,192578083,31288522,2024-05-07T01:50:22.784771Z,2018-11-01T02:52:18.319383Z,1.0.15,Macros for all your token pasting needs,https://github.com/dtolnay/paste
hmac,192068115,27809171,2025-03-07T13:57:48.652087Z,2016-10-06T21:23:44.676009Z,0.13.0-pre.5,Generic implementation of Hash-based Message Authentication Code (HMAC),https://github.com/RustCrypto/MACs
iana-time-zone,191829848,36357696,2025-03-31T15:30:18.770020Z,2020-06-27T11:01:58.126511Z,0.1.63,get the IANA time zone for the current system,https://github.com/strawlab/iana-time-zone
encoding_rs,190528253,29373492,2024-10-24T09:22:44.123986Z,2016-07-09T12:27:23.194308Z,0.8.35,A Gecko-oriented implementation of the Encoding Standard,https://github.com/hsivonen/encoding_rs
serde_urlencoded,189640322,29591936,2022-01-17T11:26:21.628923Z,2016-09-11T11:46:40.652101Z,0.7.1,`x-www-form-urlencoded` meets Serde,https://github.com/nox/serde_urlencoded
rayon,188500400,28320163,2024-03-24T05:24:47.903463Z,2015-12-10T22:38:20.637638Z,1.10.0,Simple work-stealing parallelism for Rust,https://github.com/rayon-rs/rayon
unicode-segmentation,187594878,23927701,2024-09-13T17:05:55.908935Z,2015-04-14T23:28:47.673940Z,1.12.0,"This crate provides Grapheme Cluster, Word and Sentence boundaries
according to Unicode Standard Annex #29 rules.
",https://github.com/unicode-rs/unicode-segmentation
rustversion,187065645,36290644,2025-03-04T00:13:12.711336Z,2019-07-08T03:49:21.699801Z,1.0.20,Conditional compilation according to rustc compiler version,https://github.com/dtolnay/rustversion
strum_macros,186281820,35782481,2025-02-17T00:25:43.464824Z,2017-02-12T07:05:29.029980Z,0.27.1,Helpful macros for working with enums and strings,https://github.com/Peternator7/strum
winnow,185838849,51075570,2025-04-07T20:58:33.532043Z,2023-02-22T17:01:25.112233Z,0.7.6,"A byte-oriented, zero-copy, parser combinators library",https://github.com/winnow-rs/winnow
rayon-core,185645448,28003723,2024-01-17T17:56:12.833437Z,2017-03-11T20:11:25.040031Z,1.12.1,Core APIs for Rayon,https://github.com/rayon-rs/rayon
rustc-hash,184905904,43282222,2025-02-05T18:34:34.388524Z,2018-05-24T13:05:52.176874Z,2.1.1,"A speedy, non-cryptographic hashing algorithm used by rustc",https://github.com/rust-lang/rustc-hash
minimal-lexical,183678087,31364099,2021-10-04T10:53:11.629475Z,2021-04-27T23:04:12.608012Z,0.2.1,Fast float parsing conversion routines.,https://github.com/Alexhuszagh/minimal-lexical
webpki-roots,182545775,34406478,2025-01-31T00:34:47.084757Z,2016-08-28T13:40:20.874613Z,0.26.8,Mozilla's CA root certificates for use with webpki,https://github.com/rustls/webpki-roots
ipnet,178580638,30522205,2025-01-20T00:33:10.616110Z,2017-08-14T20:09:09.629621Z,2.11.0,"Provides types and useful methods for working with IPv4 and IPv6 network addresses, commonly called IP prefixes. The new `IpNet`, `Ipv4Net`, and `Ipv6Net` types build on the existing `IpAddr`, `Ipv4Addr`, and `Ipv6Addr` types already provided in Rust's standard library and align to their design to stay consistent. The module also provides useful traits that extend `Ipv4Addr` and `Ipv6Addr` with methods for `Add`, `Sub`, `BitAnd`, and `BitOr` operations. The module only uses stable feature so it is guaranteed to compile using the stable toolchain.",https://github.com/krisprice/ipnet
strum,178566147,35131801,2025-02-17T00:25:58.032415Z,2017-02-12T07:07:10.075292Z,0.27.1,Helpful macros for working with enums and strings,https://github.com/Peternator7/strum
zeroize,177857256,34318431,2024-05-25T19:10:18.831246Z,2018-10-03T09:33:21.998452Z,1.8.1,"Securely clear secrets from memory with a simple trait built on
stable Rust primitives which guarantee memory is zeroed using an
operation will not be 'optimized away' by the compiler.
Uses a portable pure Rust implementation that works everywhere,
even WASM!
",https://github.com/RustCrypto/utils/tree/master/zeroize
libloading,177799079,27372807,2024-11-29T16:49:13.965316Z,2015-11-08T12:22:07.864268Z,0.8.6,Bindings around the platform's dynamic library loading primitives with greatly improved memory safety.,https://github.com/nagisa/rust_libloading/
openssl-sys,176437547,26228394,2025-04-04T12:52:26.443899Z,2014-11-11T06:38:37.917011Z,0.9.107,FFI bindings to OpenSSL,https://github.com/sfackler/rust-openssl
tracing-subscriber,176168517,30250642,2024-11-29T16:29:24.377071Z,2019-06-27T22:06:39.700601Z,0.3.19,"Utilities for implementing and composing `tracing` subscribers.
",https://github.com/tokio-rs/tracing
equivalent,175290687,46796073,2025-02-14T22:14:18.212755Z,2023-02-05T22:54:27.715050Z,1.0.2,Traits for key comparison in maps.,https://github.com/indexmap-rs/equivalent
openssl-probe,174444827,28560945,2025-01-23T16:14:49.108354Z,2016-11-06T05:25:41.005024Z,0.1.6,"Tool for helping to find SSL certificate locations on the system for OpenSSL
",https://github.com/alexcrichton/openssl-probe
instant,172417476,20353317,2024-05-17T19:56:13.760985Z,2019-04-09T08:42:23.290642Z,0.1.13,"Unmaintained, consider using web-time instead - A partial replacement for std::time::Instant that works on WASM to.",https://github.com/sebcrozet/instant
event-listener,171576757,37349582,2025-01-08T02:19:54.075080Z,2020-05-16T17:53:08.377375Z,5.4.0,Notify async tasks or threads,https://github.com/smol-rs/event-listener
static_assertions,171096947,26298492,2019-11-03T17:02:11.618786Z,2017-08-13T00:07:30.041787Z,1.1.0,Compile-time assertions to ensure that invariants are met.,https://github.com/nvzqz/static-assertions-rs
shlex,168055728,42348822,2024-01-22T05:15:15.585884Z,2015-06-22T23:35:40.217184Z,1.3.0,"Split a string into shell words, like Python's shlex.",https://github.com/comex/rust-shlex
tracing-log,167361793,29185805,2023-10-25T17:01:37.024993Z,2019-06-27T22:04:20.989322Z,0.2.0,"Provides compatibility between `tracing` and the `log` crate.
",https://github.com/tokio-rs/tracing
rustls-webpki,167342988,44295122,2025-03-25T14:53:20.448220Z,2023-01-09T16:48:34.685301Z,0.103.1,Web PKI X.509 Certificate Verification.,https://github.com/rustls/webpki
hyper-rustls,166762446,36891133,2024-12-20T15:20:05.608181Z,2016-10-08T09:37:41.910219Z,0.27.5,Rustls+hyper integration for pure rust HTTPS,https://github.com/rustls/hyper-rustls
which,166463847,21256351,2025-04-08T19:30:45.055302Z,2015-10-06T11:33:07.444737Z,7.0.3,"A Rust equivalent of Unix command ""which"". Locate installed executable in cross platforms.",https://github.com/harryfei/which-rs.git
clap_builder,166259558,40845150,2025-04-01T16:51:55.678682Z,2023-03-28T00:41:44.344826Z,4.5.35,"A simple to use, efficient, and full-featured Command Line Argument Parser",https://github.com/clap-rs/clap
proc-macro-error,166039764,19523503,2020-07-31T18:08:20.096247Z,2019-07-11T07:51:11.667268Z,1.0.4,Almost drop-in replacement to panics in proc-macros,https://gitlab.com/CreepySkeleton/proc-macro-error
prost,165617033,36738083,2025-02-12T06:59:20.501505Z,2017-06-25T07:39:15.991516Z,0.13.5,A Protocol Buffers implementation for the Rust Language.,https://github.com/tokio-rs/prost
prost-derive,165461286,36670444,2025-02-12T06:59:07.397388Z,2017-06-25T07:38:48.366541Z,0.13.5,Generate encoding and decoding implementations for Prost annotated types.,https://github.com/tokio-rs/prost
proc-macro-error-attr,164872044,19479460,2020-07-31T18:06:37.966375Z,2019-10-06T06:40:18.626517Z,1.0.4,Attribute macro for proc-macro-error crate,https://gitlab.com/CreepySkeleton/proc-macro-error
anstyle,163315057,39076478,2024-11-01T13:59:38.779125Z,2022-05-18T20:59:53.360865Z,1.0.10,ANSI text styling,https://github.com/rust-cli/anstyle.git
proc-macro-crate,162896489,28618242,2025-03-06T12:32:01.383701Z,2019-02-11T10:38:10.168331Z,3.3.0,"Replacement for crate (macro_rules keyword) in proc-macros
",https://github.com/bkchr/proc-macro-crate
time-core,162573791,33623976,2025-03-18T06:52:34.086824Z,2020-12-17T01:08:57.508248Z,0.1.4,This crate is an implementation detail and should not be relied upon directly.,https://github.com/time-rs/time
bumpalo,162137697,28181400,2025-01-28T17:37:33.332880Z,2018-11-24T06:21:56.420457Z,3.17.0,A fast bump allocation arena for Rust.,https://github.com/fitzgen/bumpalo
phf_shared,160446395,29137603,2025-01-06T20:29:20.816261Z,2014-11-22T22:27:31.946226Z,0.11.3,Support code shared by PHF libraries,https://github.com/rust-phf/rust-phf
sharded-slab,160218837,27952143,2023-10-04T19:37:55.401239Z,2019-10-02T23:38:13.973505Z,0.1.7,"A lock-free concurrent slab.
",https://github.com/hawkw/sharded-slab
jobserver,159495829,27360049,2025-04-01T17:06:18.381864Z,2017-05-28T20:12:06.126106Z,0.1.33,"An implementation of the GNU Make jobserver for Rust.
",https://github.com/rust-lang/jobserver-rs
openssl,159158530,24129901,2025-04-04T12:52:48.999808Z,2014-11-21T06:54:00.684701Z,0.10.72,OpenSSL bindings,https://github.com/sfackler/rust-openssl
foreign-types,158910299,25460454,2019-10-13T19:24:15.900127Z,2017-01-31T04:36:40.076916Z,0.5.0,A framework for Rust wrappers over C APIs,https://github.com/sfackler/foreign-types
foreign-types-shared,158345801,25463443,2022-03-21T22:06:37.413498Z,2017-11-26T23:56:57.865334Z,0.3.1,An internal crate used by foreign-types,https://github.com/sfackler/foreign-types
zerocopy,157325070,54726678,2025-04-08T17:46:10.005019Z,2018-08-15T05:46:29.013597Z,0.9.0-alpha.0,"Zerocopy makes zero-cost memory manipulation effortless. We write ""unsafe"" so you don't have to.",https://github.com/google/zerocopy
opaque-debug,156328548,16265541,2024-03-01T12:08:32.543535Z,2017-11-26T15:55:55.619753Z,0.3.1,Macro for opaque Debug trait implementation,https://github.com/RustCrypto/utils
sync_wrapper,153286168,40639921,2024-11-20T16:29:59.416129Z,2020-05-16T18:10:10.458779Z,1.0.2,A tool for enlisting the compiler's help in proving the absence of concurrency,https://github.com/Actyx/sync_wrapper
wasm-bindgen,153100028,25494133,2025-01-12T23:18:04.182224Z,2018-03-06T04:24:26.947567Z,0.2.100,"Easy support for interacting between JS and Rust.
",https://github.com/rustwasm/wasm-bindgen
utf8parse,153029817,35284295,2024-06-08T07:07:41.813419Z,2016-09-18T00:27:10.771511Z,0.2.2,Table-driven UTF-8 parser,https://github.com/alacritty/vte
wasm-bindgen-backend,152921400,25461910,2025-01-12T23:13:08.274393Z,2018-04-03T21:02:46.090931Z,0.2.100,"Backend code generation of the wasm-bindgen tool
",https://github.com/rustwasm/wasm-bindgen/tree/master/crates/backend
wasm-bindgen-macro,152837569,25437600,2025-01-12T23:17:11.755452Z,2018-03-06T04:21:14.486723Z,0.2.100,"Definition of the `#[wasm_bindgen]` attribute, an internal dependency
",https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro
wasm-bindgen-macro-support,152775967,25441040,2025-01-12T23:13:11.492596Z,2018-08-13T21:31:57.296968Z,0.2.100,"The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate
",https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro-support
wasm-bindgen-shared,152650432,25387952,2025-01-12T23:13:03.383484Z,2018-03-06T04:18:13.413080Z,0.2.100,"Shared support between wasm-bindgen and wasm-bindgen cli, an internal
dependency.
",https://github.com/rustwasm/wasm-bindgen/tree/master/crates/shared
siphasher,151552164,28556641,2024-03-17T21:59:01.698376Z,2016-10-04T10:23:48.249538Z,1.0.1,"SipHash-2-4, SipHash-1-3 and 128-bit variants in pure Rust",https://github.com/jedisct1/rust-siphash
winapi-x86_64-pc-windows-gnu,151448914,21688492,2018-01-18T00:55:12.008307Z,2016-11-23T19:48:47.829720Z,0.4.0,"Import libraries for the x86_64-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.",https://github.com/retep998/winapi-rs
bstr,151342404,24391310,2025-04-08T16:37:00.152093Z,2018-10-09T22:14:04.467612Z,1.12.0,A string type that is not required to be valid UTF-8.,https://github.com/BurntSushi/bstr
sha1,150325046,26270378,2025-03-05T21:17:46.043315Z,2014-11-21T12:56:35.586016Z,0.11.0-pre.5,SHA-1 hash function,https://github.com/RustCrypto/hashes
winapi-i686-pc-windows-gnu,150324346,21593882,2018-01-18T00:55:38.910834Z,2016-11-23T19:48:14.544324Z,0.4.0,"Import libraries for the i686-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.",https://github.com/retep998/winapi-rs
petgraph,150253726,26566193,2025-04-07T09:58:12.070960Z,2015-01-11T20:07:47.311473Z,0.8.1,Graph data structure library. Provides graph types and graph algorithms.,https://github.com/petgraph/petgraph
tower,149708381,41523466,2024-12-11T13:26:44.329531Z,2016-12-23T17:20:31.319203Z,0.5.2,"Tower is a library of modular and reusable components for building robust
clients and servers.
",https://github.com/tower-rs/tower
fixedbitset,149532981,26765030,2024-04-14T23:53:05.918820Z,2015-04-03T11:26:51.825003Z,0.5.7,FixedBitSet is a simple bitset collection,https://github.com/petgraph/fixedbitset
anstream,149225193,36404183,2024-11-04T18:02:39.562359Z,2023-03-16T14:54:31.795594Z,0.6.18,A simple cross platform library for writing colored text to a terminal.,https://github.com/rust-cli/anstyle.git
sct,148488741,16180596,2023-10-24T14:57:55.376462Z,2017-07-09T19:54:37.366366Z,0.7.1,Certificate transparency SCT verification library,https://github.com/rustls/sct.rs
toml_datetime,148096133,34304714,2024-07-30T13:56:51.275733Z,2022-10-21T16:38:58.820519Z,0.6.8,A TOML-compatible datetime type,https://github.com/toml-rs/toml
anstyle-parse,146816315,35992856,2024-10-24T20:00:25.445841Z,2023-03-08T21:17:13.852775Z,0.2.6,Parse ANSI Style Escapes,https://github.com/rust-cli/anstyle.git
tokio-stream,145627699,25210479,2024-12-06T10:20:07.445232Z,2020-12-03T23:05:27.160680Z,0.1.17,"Utilities to work with `Stream` and `tokio`.
",https://github.com/tokio-rs/tokio
vcpkg,144942215,27119791,2021-06-19T16:35:46.573605Z,2017-04-20T21:35:56.630487Z,0.2.15,"A library to find native dependencies in a vcpkg tree at build
time in order to be used in Cargo build scripts.
",https://github.com/mcgoo/vcpkg-rs
convert_case,144600778,27372939,2025-02-26T21:04:43.219122Z,2020-04-17T00:48:33.267470Z,0.8.0,Convert strings into any case,https://github.com/rutrum/convert-case
anstyle-query,141762331,35891000,2024-10-24T20:00:29.222156Z,2023-04-13T14:40:53.104785Z,1.1.2,Look up colored console capabilities,https://github.com/rust-cli/anstyle.git
js-sys,141171027,23966272,2025-01-12T23:18:16.405956Z,2018-07-19T19:42:36.874339Z,0.3.77,"Bindings for all JS global objects and functions in all JS environments like
Node.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate.
",https://github.com/rustwasm/wasm-bindgen/tree/master/crates/js-sys
ident_case,139612722,26802953,2019-03-18T20:07:20.426691Z,2017-05-10T19:51:31.395527Z,1.0.1,Utility for applying case rules to Rust identifiers.,https://github.com/TedDriggs/ident_case
colorchoice,139070717,35763072,2024-10-24T20:00:36.947622Z,2023-04-13T14:41:28.859123Z,1.0.3,Global override of color control,https://github.com/rust-cli/anstyle.git
quick-error,138482620,22870183,2021-05-07T12:10:10.154641Z,2015-09-09T22:47:44.666353Z,2.0.1,"    A macro which makes error types pleasant to write.
",http://github.com/tailhook/quick-error
phf,138374234,25672072,2025-01-06T20:32:46.521816Z,2014-11-22T22:27:53.644783Z,0.11.3,Runtime support for perfect hash function data structures,https://github.com/rust-phf/rust-phf
half,138237614,29752869,2025-04-08T04:50:59.620770Z,2016-03-18T05:04:29.255020Z,2.6.0,Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard binary16 and bfloat16 types.,https://github.com/VoidStarKat/half-rs
ansi_term,138164274,9086781,2019-09-02T10:16:04.908577Z,2014-11-26T00:50:42.101172Z,0.12.1,"Library for ANSI terminal colours and styles (bold, underline)",https://github.com/ogham/rust-ansi-term
matchers,137936190,25393739,2024-07-01T22:20:07.033866Z,2019-08-02T20:31:26.476346Z,0.2.0,"Regex matching on character and byte streams.
",https://github.com/hawkw/matchers
unicase,136387976,20551268,2024-12-24T15:31:12.424515Z,2015-01-09T20:05:24.122027Z,2.8.1,A case-insensitive wrapper around strings.,https://github.com/seanmonstar/unicase
num-rational,135243282,22853337,2025-01-25T00:45:16.565243Z,2016-04-14T07:42:39.085844Z,0.4.2,Rational numbers implementation for Rust,https://github.com/rust-num/num-rational
prost-types,134671173,28891235,2025-02-12T06:59:33.702587Z,2017-09-10T19:19:37.407643Z,0.13.5,Prost definitions of Protocol Buffers well known types.,https://github.com/tokio-rs/prost
native-tls,134194671,20532970,2025-02-19T19:24:27.427135Z,2016-11-09T21:07:37.761548Z,0.2.14,A wrapper over a platform's native TLS implementation,https://github.com/sfackler/rust-native-tls
synstructure,133278133,35757523,2024-01-30T23:45:23.197015Z,2016-10-09T17:25:06.828782Z,0.13.1,Helper methods and macros for custom derives,https://github.com/mystor/synstructure
hyper-tls,131817627,22403808,2023-11-27T19:18:29.702911Z,2017-01-04T22:41:13.366514Z,0.6.0,Default TLS implementation for use with hyper,https://github.com/hyperium/hyper-tls
phf_generator,130891139,24546326,2025-01-06T20:30:28.955489Z,2015-02-22T20:48:14.120861Z,0.11.3,PHF generation logic,https://github.com/rust-phf/rust-phf
nu-ansi-term,130515587,28907245,2024-07-23T22:20:55.095113Z,2021-03-09T18:58:03.243547Z,0.50.1,"Library for ANSI terminal colors and styles (bold, underline)",https://github.com/nushell/nu-ansi-term
rustls-native-certs,129159268,28393929,2024-11-21T15:42:54.624993Z,2019-11-04T21:10:51.429223Z,0.8.1,rustls-native-certs allows rustls to use the platform native certificate store,https://github.com/rustls/rustls-native-certs
tower-layer,129132773,26699542,2024-08-13T16:53:54.096608Z,2019-04-27T05:09:34.746381Z,0.3.3,"Decorates a `Service` to allow easy composition between `Service`s.
",https://github.com/tower-rs/tower
winapi-util,129076915,20136908,2024-08-02T21:18:26.472826Z,2018-08-25T02:49:16.521473Z,0.1.9,A dumping ground for high level safe wrappers over windows-sys.,https://github.com/BurntSushi/winapi-util
is-terminal,128661374,24524342,2025-03-07T04:26:17.164605Z,2022-01-22T02:08:49.649286Z,0.4.16,Test whether a given stream is a terminal,https://github.com/sunfishcode/is-terminal
bindgen,127430886,24306433,2024-12-09T15:28:33.905852Z,2014-11-21T10:14:40.304798Z,0.71.1,Automatically generates Rust FFI bindings to C and C++ libraries.,https://github.com/rust-lang/rust-bindgen
libm,126854812,25690257,2024-10-28T23:34:17.848955Z,2018-07-14T00:41:38.320191Z,0.2.11,libm in pure Rust,https://github.com/rust-lang/libm
stable_deref_trait,126842179,32211404,2020-07-13T00:17:49.061392Z,2017-03-09T00:11:41.776380Z,1.2.0,"An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.
",https://github.com/storyyeller/stable_deref_trait
ordered-float,126747029,22479408,2025-02-17T23:54:22.687988Z,2014-11-11T06:37:25.077211Z,5.0.0,Wrappers for total ordering on floats,https://github.com/reem/rust-ordered-float
zstd-safe,126016891,23059406,2025-03-20T14:47:49.625660Z,2017-06-05T01:23:34.324227Z,7.2.4,Safe low-level bindings for the zstd compression library.,https://github.com/gyscos/zstd-rs
linked-hash-map,125893900,14511312,2022-06-25T19:52:40.173594Z,2015-03-18T18:42:16.535145Z,0.5.6,A HashMap wrapper that holds key-value pairs in insertion order,https://github.com/contain-rs/linked-hash-map
core-foundation-sys,124991850,21146589,2024-08-11T00:48:27.870880Z,2015-10-17T23:55:36.632904Z,0.8.7,Bindings to Core Foundation for macOS,https://github.com/servo/core-foundation-rs
zstd,124820554,22888750,2025-02-20T21:43:13.047065Z,2016-02-22T19:09:34.558501Z,0.13.3,Binding for the zstd compression library.,https://github.com/gyscos/zstd-rs
deranged,123436890,32702021,2025-03-23T20:25:41.702180Z,2020-12-10T09:24:35.476288Z,0.4.0,Ranged integers,https://github.com/jhpratt/deranged
derive_more,122315431,25123291,2025-02-03T20:18:01.121847Z,2016-03-28T22:50:21.567980Z,2.0.1,Adds #[derive(x)] macros for more traits,https://github.com/JelteF/derive_more
filetime,121936538,18406765,2024-08-27T20:41:13.398704Z,2015-05-04T23:11:08.402484Z,0.2.25,"Platform-agnostic accessors of timestamps in File metadata
",https://github.com/alexcrichton/filetime
prettyplease,121910219,27284342,2025-04-04T22:32:28.491214Z,2022-01-04T17:24:55.368876Z,0.2.32,A minimal `syn` syntax tree pretty-printer,https://github.com/dtolnay/prettyplease
num-iter,121179618,21526724,2024-05-04T00:23:07.912201Z,2016-04-14T07:38:23.772296Z,0.1.45,External iterators for generic mathematics,https://github.com/rust-num/num-iter
num-complex,120956774,21289694,2025-01-25T00:38:03.406755Z,2016-04-14T07:30:01.269978Z,0.4.6,Complex numbers implementation for Rust,https://github.com/rust-num/num-complex
web-sys,119072372,19960565,2025-01-12T23:18:43.343315Z,2018-07-19T19:42:48.824097Z,0.3.77,"Bindings for all Web APIs, a procedurally generated crate from WebIDL
",https://github.com/rustwasm/wasm-bindgen/tree/master/crates/web-sys
matches,118910675,6893411,2023-01-21T21:21:50.529117Z,2014-12-04T18:37:50.953491Z,0.1.10,"A macro to evaluate, as a boolean, whether an expression matches a pattern.",https://github.com/SimonSapin/rust-std-candidates
overload,118166285,25926153,2019-08-10T16:25:33.244486Z,2019-08-06T16:31:47.418402Z,0.1.1,Provides a macro to simplify operator overloading.,https://github.com/danaugrs/overload
home,116405221,23793049,2024-12-16T15:41:39.426215Z,2017-07-18T23:38:10.759249Z,0.5.11,Shared definitions of home directories.,https://github.com/rust-lang/cargo
cipher,115838842,17446137,2025-02-22T19:04:35.531995Z,2015-06-25T05:47:45.505637Z,0.5.0-pre.8,Traits for describing block ciphers and stream ciphers,https://github.com/RustCrypto/traits
pest,114439305,19671711,2025-03-25T06:55:01.914074Z,2016-04-24T09:55:32.814830Z,2.8.0,The Elegant Parser,https://github.com/pest-parser/pest
serde_yaml,114399949,21575420,2024-03-25T00:50:19.759577Z,2016-02-27T06:46:34.205590Z,0.9.34+deprecated,YAML data format for Serde,https://github.com/dtolnay/serde-yaml
bit-vec,114216124,25075525,2024-07-16T17:14:52.246887Z,2015-06-03T00:24:01.452515Z,0.8.0,A vector of bits,https://github.com/contain-rs/bit-vec
axum,113540165,27404855,2025-03-28T16:28:21.427925Z,2021-07-22T13:52:05.710239Z,0.8.3,Web framework that focuses on ergonomics and modularity,https://github.com/tokio-rs/axum
prost-build,113268374,21404772,2025-02-12T06:59:48.725436Z,2017-06-25T07:40:34.848805Z,0.13.5,Generate Prost annotated Rust types from Protocol Buffers files.,https://github.com/tokio-rs/prost
zstd-sys,112137215,20894702,2025-03-20T14:47:34.266906Z,2017-03-24T19:18:12.206468Z,2.0.15+zstd.1.5.7,Low-level bindings for the zstd compression library.,https://github.com/gyscos/zstd-rs
axum-core,111945504,27304460,2025-03-28T16:28:00.340262Z,2021-08-21T16:52:01.594341Z,0.5.2,Core types and traits for axum,https://github.com/tokio-rs/axum
der,111714077,28419375,2024-08-18T19:37:31.061995Z,2020-12-17T19:20:36.976898Z,0.8.0-rc.1,"Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules
(DER) for Abstract Syntax Notation One (ASN.1) as described in ITU X.690 with
full support for heapless no_std targets
",https://github.com/RustCrypto/formats
lazycell,111610481,15960010,2020-08-12T01:11:24.894126Z,2016-03-16T03:02:26.011690Z,1.3.0,A library providing a lazily filled Cell struct,https://github.com/indiv0/lazycell
signature,111485189,23619662,2025-02-20T09:23:30.867051Z,2018-10-30T23:56:33.764106Z,2.3.0-pre.6,"Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)",https://github.com/RustCrypto/traits
dashmap,111454005,19887027,2025-03-05T17:04:26.384140Z,2019-08-25T18:22:12.397782Z,7.0.0-rc2,Blazing fast concurrent HashMap for Rust.,https://github.com/xacrimon/dashmap
crossbeam-queue,110913438,14905650,2024-12-15T15:26:54.563210Z,2018-09-08T19:05:07.396126Z,0.3.12,Concurrent queues,https://github.com/crossbeam-rs/crossbeam
openssl-macros,109977175,22277672,2023-04-01T13:58:02.902200Z,2022-05-03T01:02:41.264300Z,0.1.1,Internal macros used by the openssl crate.,
tokio-native-tls,109769504,18567398,2023-02-07T17:08:45.567482Z,2020-04-03T14:28:46.429426Z,0.3.1,"An implementation of TLS/SSL streams for Tokio using native-tls giving an implementation of TLS
for nonblocking I/O streams.
",https://github.com/tokio-rs/tls
async-channel,109665309,24567045,2024-05-16T01:34:44.810872Z,2019-05-06T13:07:43.086764Z,2.3.1,Async multi-producer multi-consumer channel,https://github.com/smol-rs/async-channel
semver-parser,109647423,9427104,2024-11-18T23:14:40.706078Z,2016-05-12T00:45:58.800365Z,0.10.3,"Parsing of the semver spec.
",https://github.com/steveklabnik/semver-parser
futures-lite,109276959,23348398,2025-01-12T02:31:27.608134Z,2020-05-31T09:53:26.285174Z,2.6.0,"Futures, streams, and async I/O combinators",https://github.com/smol-rs/futures-lite
zerocopy-derive,109258302,40348255,2025-04-08T17:46:04.208548Z,2019-02-28T01:15:28.169767Z,0.9.0-alpha.0,Custom derive for traits from the zerocopy crate,https://github.com/google/zerocopy
tonic,108923592,21773263,2025-03-25T19:14:06.433343Z,2018-07-18T06:55:22.955614Z,0.13.0,"A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility.
",https://github.com/hyperium/tonic
async-stream,108912852,20797854,2024-10-01T19:36:32.827442Z,2019-06-07T03:31:34.275797Z,0.3.6,Asynchronous streams using async & await notation,https://github.com/tokio-rs/async-stream
data-encoding,108884703,21996239,2025-02-09T10:55:07.032768Z,2015-12-05T14:17:01.338342Z,2.8.0,"Efficient and customizable data-encoding functions like base64, base32, and hex",https://github.com/ia0/data-encoding
serde_spanned,108826182,28447455,2024-09-25T19:07:21.220911Z,2023-01-20T21:28:32.749591Z,0.6.8,Serde-compatible spanned Value,https://github.com/toml-rs/toml
async-stream-impl,108747286,20772254,2024-10-01T19:35:11.626317Z,2019-08-13T21:33:30.729487Z,0.3.6,proc macros for async-stream crate,https://github.com/tokio-rs/async-stream
bincode,108701174,16749786,2025-03-10T18:28:08.334006Z,2014-11-20T20:03:47.604153Z,2.0.1,A binary serialization / deserialization strategy for transforming structs into bytes and vice versa!,https://github.com/bincode-org/bincode
ucd-trie,106559022,19022535,2024-09-29T12:17:30.563304Z,2018-03-06T02:30:39.993421Z,0.1.7,"A trie for storing Unicode codepoint sets and maps.
",https://github.com/BurntSushi/ucd-generate
dirs,106435265,13702474,2025-01-12T17:19:23.581020Z,2015-11-24T00:11:15.764867Z,6.0.0,"A tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.",https://github.com/soc/dirs-rs
crunchy,106419143,23070618,2025-01-22T11:30:05.799441Z,2017-07-18T13:28:08.599993Z,0.2.3,Crunchy unroller: deterministically unroll constant loops,https://github.com/eira-fransham/crunchy
io-lifetimes,106103564,9108300,2024-12-04T01:31:02.426034Z,2021-06-12T18:57:46.951916Z,2.0.4,A low-level I/O ownership and borrowing library,https://github.com/sunfishcode/io-lifetimes
spki,106095382,27739256,2024-10-08T03:34:48.376711Z,2020-12-03T00:57:56.316288Z,0.8.0-rc.1,"X.509 Subject Public Key Info (RFC5280) describing public keys as well as their
associated AlgorithmIdentifiers (i.e. OIDs)
",https://github.com/RustCrypto/formats
powerfmt,106022409,31429660,2023-10-13T22:04:23.598335Z,2023-10-08T08:18:17.681438Z,0.2.0,"    `powerfmt` is a library that provides utilities for formatting values. This crate makes it
    significantly easier to support filling to a minimum width with alignment, avoid heap
    allocation, and avoid repetitive calculations.
",https://github.com/jhpratt/powerfmt
os_str_bytes,105883818,10096998,2025-02-21T03:57:36.408573Z,2019-11-28T22:56:27.497950Z,7.1.0,"Lossless functionality for platform-native strings
",https://github.com/dylni/os_str_bytes
memmap2,105725470,19477119,2024-09-13T16:09:38.606497Z,2020-01-18T14:19:42.096696Z,0.9.5,Cross-platform Rust API for memory-mapped file IO,https://github.com/RazrFalcon/memmap2-rs
vec_map,105132651,8574907,2020-05-06T13:38:10.140555Z,2015-05-04T02:11:35.894139Z,0.8.2,A simple map based on a vector for small integer keys,https://github.com/contain-rs/vec-map
clang-sys,104957403,18426318,2024-09-25T01:20:28.678885Z,2015-12-22T20:19:27.074026Z,1.8.1,Rust bindings for libclang.,https://github.com/KyleMayes/clang-sys
dirs-sys,104947384,15204003,2025-01-11T22:10:02.119353Z,2019-05-12T20:19:45.913839Z,0.5.0,System-level helper functions for the dirs and directories crates.,https://github.com/dirs-dev/dirs-sys-rs
serde_with,104874120,23270913,2024-12-25T22:01:32.382863Z,2017-08-17T21:50:27.312670Z,3.12.0,Custom de/serialization functions for Rust's serde,https://github.com/jonasbb/serde_with/
matchit,104754010,26492374,2025-01-02T22:51:10.969517Z,2020-12-21T17:41:53.171988Z,0.8.6,"A high performance, zero-copy URL router.",https://github.com/ibraheemdev/matchit
allocator-api2,104311203,28177793,2024-12-01T14:49:16.555989Z,2023-02-27T08:40:54.775171Z,0.2.21,Mirror of Rust's allocator API,https://github.com/zakarumych/allocator-api2
bit-set,103027887,23879906,2024-07-16T17:18:45.390925Z,2015-06-03T01:12:47.369506Z,0.8.0,A set of bits,https://github.com/contain-rs/bit-set
serde_with_macros,102948281,22898833,2024-12-25T22:01:20.600105Z,2019-04-02T19:59:37.282350Z,3.12.0,proc-macro library for serde_with,https://github.com/jonasbb/serde_with/
constant_time_eq,102745665,17970782,2025-03-15T17:03:47.885264Z,2015-05-22T02:07:15.678036Z,0.4.2,Compares two equal-sized byte strings in constant time.,https://github.com/cesarb/constant_time_eq
aes,102743020,15212110,2025-03-07T14:27:54.630837Z,2016-10-06T21:22:19.164040Z,0.9.0-pre.3,Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael),https://github.com/RustCrypto/block-ciphers
pkcs8,102317015,27078086,2025-02-15T00:33:11.105691Z,2020-06-12T14:01:14.160533Z,0.11.0-rc.2,"Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8:
Private-Key Information Syntax Specification (RFC 5208), with additional
support for PKCS#8v2 asymmetric key packages (RFC 5958)
",https://github.com/RustCrypto/formats
proc-macro-hack,102227765,6041530,2022-12-19T18:23:34.874100Z,2016-12-30T22:31:38.178246Z,0.5.20+deprecated,Procedural macros in expression position,https://github.com/dtolnay/proc-macro-hack
indoc,101928215,20663331,2025-03-03T23:32:31.175928Z,2016-03-19T07:03:31.602187Z,2.0.6,Indented document literals,https://github.com/dtolnay/indoc
md-5,101786640,16329655,2025-03-05T21:16:47.724779Z,2017-04-06T15:22:37.614943Z,0.11.0-pre.5,MD5 hash function,https://github.com/RustCrypto/hashes
concurrent-queue,101782705,20997732,2024-04-26T14:26:18.816602Z,2020-05-17T16:08:47.117572Z,2.5.0,Concurrent multi-producer multi-consumer queue,https://github.com/smol-rs/concurrent-queue
core-foundation,101770122,20635588,2024-08-11T05:37:53.580329Z,2015-02-12T10:50:45.593830Z,0.10.0,Bindings to Core Foundation for macOS,https://github.com/servo/core-foundation-rs
cexpr,100548089,18063601,2021-10-11T09:31:52.220209Z,2016-07-13T05:40:52.032296Z,0.6.0,A C expression parser and evaluator,https://github.com/jethrogb/rust-cexpr
libz-sys,100313352,15601083,2025-03-15T04:10:36.389218Z,2014-11-11T06:38:26.586055Z,1.1.22,Low-level bindings to the system libz library (also known as zlib).,https://github.com/rust-lang/libz-sys
target-lexicon,100139491,22092449,2025-02-07T20:46:40.742202Z,2018-05-24T19:59:42.278674Z,0.13.2,LLVM target triple types,https://github.com/bytecodealliance/target-lexicon
mime_guess,100016483,15936353,2024-06-29T07:32:21.605352Z,2015-07-04T21:29:52.384284Z,2.0.5,A simple crate for detection of a file's MIME type by its extension.,https://github.com/abonander/mime_guess
bytemuck,99993154,21116350,2025-03-03T04:19:56.729821Z,2019-09-22T19:07:58.696010Z,1.22.0,A crate for mucking around with piles of bytes.,https://github.com/Lokathor/bytemuck
sha-1,99958978,7310856,2022-11-28T15:23:38.331317Z,2017-04-06T15:22:59.179268Z,0.10.1,SHA-1 hash function. This crate is deprecated! Use the sha1 crate instead.,https://github.com/RustCrypto/hashes
multimap,99943151,18491116,2024-01-15T22:44:06.801518Z,2015-04-24T16:19:20.896573Z,0.10.0,A multimap implementation.,https://github.com/havarnov/multimap
async-lock,98963417,19702879,2024-06-01T14:37:52.663679Z,2019-05-22T20:50:55.568552Z,3.4.0,Async synchronization primitives,https://github.com/smol-rs/async-lock
wasm-bindgen-futures,97806107,17642837,2025-01-12T23:18:55.037907Z,2018-08-13T21:35:58.500192Z,0.4.50,Bridging the gap between Rust Futures and JavaScript Promises,https://github.com/rustwasm/wasm-bindgen/tree/master/crates/futures
arc-swap,96709988,17477794,2024-03-23T10:40:35.441856Z,2018-04-16T07:00:39.250384Z,1.7.1,Atomically swappable Arc,https://github.com/vorner/arc-swap
const-oid,95958723,22357126,2025-04-08T12:32:00.586593Z,2020-08-04T15:51:24.822805Z,0.10.1,"Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard
as defined in ITU X.660, with support for BER/DER encoding/decoding as well as
heapless no_std (i.e. embedded) support
",https://github.com/RustCrypto/formats
remove_dir_all,95871322,5110793,2024-11-22T13:28:04.656448Z,2017-03-29T00:02:22.651612Z,1.0.0,"A safe, reliable implementation of remove_dir_all for Windows",https://github.com/XAMPPRocky/remove_dir_all.git
base64ct,94824807,21192098,2025-03-13T18:56:37.952384Z,2021-01-21T19:26:20.080406Z,1.7.3,"Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of
data-dependent branches/LUTs and thereby provides portable ""best effort""
constant-time operation and embedded-friendly no_std support
",https://github.com/RustCrypto/formats
pem,94727364,21272910,2025-02-21T14:37:03.781063Z,2016-02-27T18:57:14.248270Z,3.0.5,Parse and encode PEM-encoded data.,https://github.com/jcreekmore/pem-rs.git
quick-xml,94699954,24748010,2025-04-01T08:34:49.856839Z,2016-02-01T05:38:26.023287Z,0.37.4,High performance xml reader and writer,https://github.com/tafia/quick-xml
num,94482463,15509736,2025-01-25T00:57:47.642450Z,2014-11-11T05:37:31.772551Z,0.4.3,"A collection of numeric types and traits for Rust, including bigint,
complex, rational, range iterators, generic integers, and more!
",https://github.com/rust-num/num
webpki,94265915,4316026,2023-10-09T00:31:09.299041Z,2016-08-16T01:33:53.951242Z,0.22.4,Web PKI X.509 Certificate Verification.,https://github.com/briansmith/webpki
lru,94214483,16630779,2025-01-28T00:30:45.494308Z,2016-12-31T13:49:16.056740Z,0.13.0,A LRU cache implementation,https://github.com/jeromefroe/lru-rs.git
parking,93727983,20529185,2024-09-07T17:39:03.956479Z,2020-05-16T14:40:51.599742Z,2.2.1,Thread parking and unparking,https://github.com/smol-rs/parking
pest_derive,93648854,17961407,2025-03-25T06:57:22.971024Z,2017-08-15T16:12:13.196790Z,2.8.0,pest's derive macro,https://github.com/pest-parser/pest
csv,92666914,12996689,2024-11-09T12:51:17.632722Z,2014-11-21T00:11:41.885162Z,1.3.1,Fast CSV parsing with support for serde.,https://github.com/BurntSushi/rust-csv
pest_meta,92566538,17915917,2025-03-25T06:55:35.824827Z,2018-09-30T03:32:45.102540Z,2.8.0,pest meta language parser and validator,https://github.com/pest-parser/pest
pest_generator,92458387,17885327,2025-03-25T06:56:46.588851Z,2018-10-01T05:22:47.236630Z,2.8.0,pest code generator,https://github.com/pest-parser/pest
bitvec,92373067,18101901,2022-07-10T03:51:17.388090Z,2018-06-28T06:28:54.134674Z,1.0.1,"Addresses memory by bits, for packed collections and bitfields",https://github.com/bitvecto-rs/bitvec
atomic-waker,91929770,25381613,2023-09-25T17:45:09.388277Z,2020-05-29T09:54:53.291330Z,1.1.2,A synchronization primitive for task wakeup,https://github.com/smol-rs/atomic-waker
console,91545109,15825295,2025-03-01T22:18:16.714733Z,2017-05-09T11:53:13.825478Z,0.15.11,A terminal and console abstraction for Rust,https://github.com/console-rs/console
csv-core,90894124,12951693,2025-02-12T16:08:33.328351Z,2017-05-23T01:28:33.952564Z,0.1.12,Bare bones CSV parsing with no_std support.,https://github.com/BurntSushi/rust-csv
radium,90571642,18041569,2023-11-26T18:58:47.251586Z,2019-05-26T22:33:54.460244Z,1.1.0,Portable interfaces for maybe-atomic types,https://github.com/ferrilab/ferrilab
hyper-timeout,90315796,22117101,2024-11-03T19:44:30.127358Z,2017-07-15T01:32:03.275740Z,0.5.2,"A connect, read and write timeout aware connector to be used with hyper Client.",https://github.com/hjr3/hyper-timeout
rand_hc,90187285,8650284,2025-01-27T14:40:07.647563Z,2018-10-30T09:53:01.939542Z,0.4.0,"HC128 random number generator
",https://github.com/rust-random/rngs
phf_codegen,90126173,15652834,2025-01-06T20:33:52.154793Z,2015-02-22T20:49:07.396790Z,0.11.3,Codegen library for PHF types,https://github.com/rust-phf/rust-phf
num-conv,89690256,30852709,2023-12-23T08:52:41.119523Z,2023-12-23T08:52:41.119523Z,0.1.0,"`num_conv` is a crate to convert between integer types without using `as` casts. This provides
better certainty when refactoring, makes the exact behavior of code more explicit, and allows using
turbofish syntax.
",https://github.com/jhpratt/num-conv
polling,89218773,17679564,2024-11-07T15:28:40.971957Z,2020-08-06T13:17:41.554742Z,3.7.4,"Portable interface to epoll, kqueue, event ports, and IOCP",https://github.com/smol-rs/polling
security-framework,88031087,17990361,2025-01-07T16:04:15.335636Z,2015-11-27T22:17:03.528149Z,3.2.0,Security.framework bindings for macOS and iOS,https://github.com/kornelski/rust-security-framework
criterion,87871942,17944421,2023-05-26T08:59:50.811468Z,2017-12-02T23:43:19.376458Z,0.5.1,Statistics-driven micro-benchmarking library,https://github.com/bheisler/criterion.rs
derivative,87864388,12349945,2021-01-23T17:05:39.339355Z,2016-10-07T23:35:58.354746Z,2.2.0,A set of alternative `derive` attributes for Rust,https://github.com/mcarton/rust-derivative
winreg,87769577,11207363,2025-01-12T22:15:39.272222Z,2015-04-17T22:26:16.702190Z,0.55.0,Rust bindings to MS Windows Registry API,https://github.com/gentoo90/winreg-rs
tap,87083500,18209403,2021-02-13T02:43:25.525644Z,2017-06-24T22:48:02.471590Z,1.0.1,Generic extensions for tapping values in Rust,https://github.com/myrrlyn/tap
funty,86427823,17922076,2023-01-29T04:40:16.975264Z,2020-02-24T03:26:45.809913Z,3.0.0-rc2,Trait generalization over the primitive types,https://github.com/ferrilab/ferrilab
wyz,86002242,17957069,2022-11-16T04:54:37.181940Z,2019-09-22T02:52:16.932380Z,0.6.1,myrrlynâs utility collection,https://github.com/myrrlyn/wyz
security-framework-sys,85089213,15960901,2025-01-07T16:00:44.965072Z,2015-11-27T22:16:51.749519Z,2.14.0,Apple `Security.framework` low-level FFI bindings,https://github.com/kornelski/rust-security-framework
arrayref,84863227,13739686,2024-09-14T12:24:40.788186Z,2015-08-24T18:49:31.735963Z,0.3.9,Macros to take array references of slices,https://github.com/droundy/arrayref
tungstenite,84437637,14460820,2025-02-18T10:51:41.206384Z,2017-03-17T16:50:05.505222Z,0.26.2,Lightweight stream-based WebSocket implementation,https://github.com/snapview/tungstenite-rs
schannel,84371583,15489844,2024-11-19T08:42:19.178581Z,2015-10-19T14:53:41.310471Z,0.1.27,"Schannel bindings for rust, allowing SSL/TLS (e.g. https) without openssl",https://github.com/steffengy/schannel-rs
block-padding,84351899,8270290,2025-02-22T16:13:02.376076Z,2018-02-20T13:54:53.959408Z,0.4.0-rc.3,Padding and unpadding of messages divided into blocks.,https://github.com/RustCrypto/utils
combine,84316307,15540147,2024-04-10T09:56:27.206101Z,2015-07-17T14:19:14.002384Z,4.6.7,Fast parser combinators on arbitrary streams with zero-copy support.,https://github.com/Marwes/combine
crypto-mac,84234992,5488542,2021-07-20T13:10:34.870407Z,2016-10-14T15:22:47.584215Z,0.11.1,Trait for Message Authentication Code (MAC) algorithms,https://github.com/RustCrypto/traits
num_enum,83301487,16292392,2024-07-29T12:49:42.149865Z,2018-11-12T00:11:02.762349Z,0.7.3,Procedural macros to make inter-operation between primitives and enums easier.,https://github.com/illicitonion/num_enum
num_enum_derive,83172641,16288539,2024-07-29T12:45:05.316346Z,2019-08-09T22:18:28.695283Z,0.7.3,Internal implementation details for ::num_enum (Procedural macros to make inter-operation between primitives and enums easier),https://github.com/illicitonion/num_enum
windows,82841968,20143010,2025-03-18T19:11:29.737188Z,2019-01-15T00:13:05.848555Z,0.61.1,Rust for Windows,https://github.com/microsoft/windows-rs
cast,82706237,16071553,2021-09-04T11:07:33.449935Z,2016-02-07T20:43:08.957175Z,0.3.0,"Ergonomic, checked cast functions for primitive types",https://github.com/japaric/cast.rs
async-io,81987229,15286887,2024-11-07T20:45:52.919545Z,2019-05-18T10:59:20.102722Z,2.4.0,Async I/O and timers,https://github.com/smol-rs/async-io
rand_xorshift,81886408,14967805,2025-01-27T14:40:36.244226Z,2018-10-04T09:45:08.645922Z,0.4.0,"Xorshift random number generator
",https://github.com/rust-random/rngs
pbkdf2,81761589,12531006,2024-07-27T20:54:58.055110Z,2017-02-28T15:23:53.287798Z,0.13.0-pre.1,Generic implementation of PBKDF2,https://github.com/RustCrypto/password-hashes
scoped-tls,81201351,12500152,2022-10-31T15:01:56.394137Z,2016-03-23T16:35:10.496904Z,1.0.1,"Library implementation of the standard library's old `scoped_thread_local!`
macro for providing scoped access to thread local storage (TLS) so any type can
be stored into TLS.
",https://github.com/alexcrichton/scoped-tls
android_system_properties,80268653,17309771,2022-08-30T10:42:28.363547Z,2022-06-27T18:37:55.464346Z,0.1.5,Minimal Android system properties wrapper,https://github.com/nical/android_system_properties
num_threads,80248397,12435535,2024-02-15T02:51:38.770784Z,2021-11-15T05:19:12.536893Z,0.1.7,A minimal library that determines the number of running threads for the current process.,https://github.com/jhpratt/num_threads
displaydoc,79500332,31189370,2024-06-20T21:51:42.769781Z,2019-10-10T02:29:31.389536Z,0.2.5,"A derive macro for implementing the display Trait via a doc comment and string interpolation
",https://github.com/yaahc/displaydoc
tinytemplate,79013847,15609050,2021-03-04T00:05:08.069396Z,2019-01-19T16:42:26.192003Z,1.2.1,"Simple, lightweight template engine",https://github.com/bheisler/TinyTemplate
criterion-plot,78911814,15684616,2022-09-10T17:48:08.968537Z,2016-02-26T23:04:18.130991Z,0.5.0,Criterion's plotting library,https://github.com/bheisler/criterion.rs
oorandom,78861115,16149670,2025-03-07T13:10:16.263607Z,2019-07-15T22:52:00.911246Z,11.1.5,"A tiny, robust PRNG implementation.",https://hg.sr.ht/~icefox/oorandom
tonic-build,78773234,15188102,2025-03-25T19:14:13.608442Z,2019-09-10T15:56:35.568394Z,0.13.0,"Codegen module of `tonic` gRPC implementation.
",https://github.com/hyperium/tonic
globset,78640885,12011825,2025-02-27T17:47:05.577701Z,2016-10-11T00:07:33.117536Z,0.4.16,"Cross platform single glob and glob set matching. Glob set matching is the
process of matching one or more glob patterns against a single candidate path
simultaneously, and returning all of the globs that matched.
",https://github.com/BurntSushi/ripgrep/tree/master/crates/globset
urlencoding,78466749,15358406,2023-07-21T15:12:17.534094Z,2016-09-15T10:44:56.997351Z,2.1.3,A Rust library for doing URL percentage encoding.,https://github.com/kornelski/rust_urlencoding
portable-atomic,78453742,24349032,2025-02-24T13:31:07.731833Z,2022-02-24T03:15:21.449241Z,1.11.0,"Portable atomic types including support for 128-bit atomics, atomic float, etc.
",https://github.com/taiki-e/portable-atomic
dyn-clone,78402798,16612037,2025-03-03T23:26:49.073259Z,2019-12-23T06:48:24.186057Z,1.0.19,Clone trait that is dyn-compatible,https://github.com/dtolnay/dyn-clone
unindent,78235809,16546712,2025-03-03T23:32:26.449483Z,2016-07-17T21:11:22.557375Z,0.2.4,Remove a column of leading whitespace from a string,https://github.com/dtolnay/indoc
hostname,78023729,11406850,2025-04-08T08:10:29.607795Z,2016-12-13T12:47:54.090323Z,0.4.1,Cross-platform system's host name functions,https://github.com/svartalf/hostname
cargo_metadata,77858147,12352662,2025-03-02T16:12:24.044104Z,2017-01-24T10:16:04.030507Z,0.19.2,structured access to the output of `cargo metadata`,https://github.com/oli-obk/cargo_metadata
opentelemetry,77746820,17313954,2025-04-02T14:47:58.715578Z,2019-11-08T20:41:11.251122Z,0.29.1,OpenTelemetry API for Rust,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry
fallible-iterator,77618210,12694192,2023-05-22T23:12:37.497125Z,2016-05-06T16:53:35.239726Z,0.3.0,Fallible iterator traits,https://github.com/sfackler/rust-fallible-iterator
rustls-pki-types,77546088,29523752,2025-01-27T14:17:48.613462Z,2023-08-31T09:09:47.215663Z,1.11.0,Shared types for the rustls PKI ecosystem,https://github.com/rustls/pki-types
tower-http,77356482,18450203,2024-11-18T19:30:58.685083Z,2017-03-10T04:36:50.296787Z,0.6.2,Tower middleware and utilities for HTTP clients and servers,https://github.com/tower-rs/tower-http
utf-8,77207027,12610678,2021-04-16T14:55:34.691346Z,2015-10-29T16:30:25.738814Z,0.7.6,"Incremental, zero-copy UTF-8 decoding with error handling",https://github.com/SimonSapin/rust-utf8
zeroize_derive,76812969,13993791,2023-03-31T02:07:19.386562Z,2019-03-23T21:12:27.537530Z,1.4.2,Custom derive support for zeroize,https://github.com/RustCrypto/utils/tree/master/zeroize/derive
peeking_take_while,76581911,7976659,2021-09-03T17:58:50.443671Z,2017-05-17T00:42:53.962618Z,1.0.0,"Like `Iterator::take_while`, but calls the predicate on a peeked value. This allows you to use `Iterator::by_ref` and `Iterator::take_while` together, and still get the first value for which the `take_while` predicate returned false after dropping the `by_ref`.",https://github.com/fitzgen/peeking_take_while
predicates,76499523,12846682,2024-12-19T18:53:32.360850Z,2017-06-02T17:07:01.532559Z,3.1.3,An implementation of boolean-valued predicate functions.,https://github.com/assert-rs/predicates-rs
tracing-serde,76425769,18355528,2024-11-27T21:24:29.884640Z,2019-06-27T22:08:23.362922Z,0.2.0,"A compatibility layer for serializing trace data with `serde`
",https://github.com/tokio-rs/tracing
serde_bytes,75488946,13439119,2025-03-09T20:51:20.832664Z,2017-04-08T05:15:16.364612Z,0.11.17,Optimized handling of `&[u8]` and `Vec<u8>` for Serde,https://github.com/serde-rs/bytes
dirs-sys-next,75406028,9867637,2021-01-09T05:59:36.540586Z,2020-05-06T15:47:35.608863Z,0.1.2,system-level helper functions for the dirs and directories crates,https://github.com/xdg-rs/dirs/tree/master/dirs-sys
yaml-rust,75087384,5576867,2021-01-03T19:58:30.295058Z,2015-06-04T08:32:01.133062Z,0.4.5,The missing YAML 1.2 parser for rust,https://github.com/chyh1990/yaml-rust
pyo3-build-config,74912527,21984974,2025-03-31T21:05:40.181849Z,2021-05-25T06:25:05.705827Z,0.24.1,Build configuration for the PyO3 ecosystem,https://github.com/pyo3/pyo3
tiny-keccak,74818447,16535351,2020-04-01T14:34:13.119797Z,2015-11-27T10:24:04.913465Z,2.0.2,An implementation of Keccak derived functions.,
crypto-bigint,74741864,16585402,2025-02-18T22:37:41.950300Z,2021-04-30T19:41:39.805312Z,0.7.0-pre.0,"Pure Rust implementation of a big integer library which has been designed from
the ground-up for use in cryptographic applications. Provides constant-time,
no_std-friendly implementations of modern formulas using const generics.
",https://github.com/RustCrypto/crypto-bigint
is_terminal_polyfill,74486131,29315516,2024-07-25T13:51:50.036695Z,2024-05-02T17:55:24.459203Z,1.70.1,Polyfill for `is_terminal` stdlib feature for use with older MSRVs,https://github.com/polyfill-rs/is_terminal_polyfill
tracing-futures,74409976,7248426,2021-02-16T21:17:03.683426Z,2019-06-27T22:04:57.142995Z,0.2.5,"Utilities for instrumenting `futures` with `tracing`.
",https://github.com/tokio-rs/tracing
cfg_aliases,74003301,25046066,2024-05-10T16:29:14.741823Z,2020-04-05T15:56:29.360016Z,0.2.1,A tiny utility to help save you a lot of effort with long winded `#[cfg()]` checks.,https://github.com/katharostech/cfg_aliases
signal-hook,73941262,9274132,2023-07-18T15:21:46.884143Z,2018-06-22T17:38:56.065914Z,0.3.17,Unix signal handling,https://github.com/vorner/signal-hook
pem-rfc7468,73767751,21607554,2024-10-15T20:03:30.229881Z,2021-02-16T16:40:33.169667Z,1.0.0-rc.2,"PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a
strict subset of the original Privacy-Enhanced Mail encoding intended
specifically for use with cryptographic keys, certificates, and other messages.
Provides a no_std-friendly, constant-time implementation suitable for use with
cryptographic private keys.
",https://github.com/RustCrypto/formats
iana-time-zone-haiku,73762474,16664765,2023-05-12T08:43:45.406909Z,2022-10-08T17:07:12.928972Z,0.1.2,iana-time-zone support crate for Haiku OS,https://github.com/strawlab/iana-time-zone
rand_pcg,73481673,6449843,2025-01-27T13:38:15.140218Z,2018-10-04T09:46:15.905354Z,0.9.0,"Selected PCG random number generators
",https://github.com/rust-random/rand
waker-fn,73348335,11184566,2024-05-13T00:24:30.171231Z,2020-05-16T17:22:12.647555Z,1.2.0,Convert closures into wakers,https://github.com/smol-rs/waker-fn
tokio-tungstenite,73224789,12919400,2025-02-18T10:55:41.699176Z,2017-03-17T17:27:49.033103Z,0.26.2,"Tokio binding for Tungstenite, the Lightweight stream-based WebSocket implementation",https://github.com/snapview/tokio-tungstenite
cookie,73191348,10636929,2024-03-25T09:39:10.390155Z,2014-11-22T04:01:16.924470Z,0.18.1,"HTTP cookie parsing and cookie jar management. Supports signed and private
(encrypted, authenticated) jars.
",https://github.com/SergioBenitez/cookie-rs
plotters,73165553,15006611,2024-09-08T14:48:03.071447Z,2019-04-24T17:22:34.929046Z,0.3.7,A Rust drawing library focus on data plotting for both WASM and native applications,https://github.com/plotters-rs/plotters
terminal_size,73065272,11920709,2025-03-08T22:01:52.317858Z,2015-08-26T19:10:31.722938Z,0.4.2,Gets the size of your Linux or Windows terminal,https://github.com/eminence/terminal-size
xattr,72999246,12626223,2025-03-06T18:59:23.062689Z,2015-07-10T16:09:41.699659Z,1.5.0,unix extended filesystem attributes,https://github.com/Stebalien/xattr
hkdf,72876377,14653017,2025-03-07T14:52:42.159269Z,2015-01-03T00:12:58.334169Z,0.13.0-pre.5,HMAC-based Extract-and-Expand Key Derivation Function (HKDF),https://github.com/RustCrypto/KDFs/
diff,72774901,10856234,2022-06-29T01:52:10.836270Z,2015-04-30T08:47:27.336024Z,0.1.13,An LCS based slice and string diffing implementation.,https://github.com/utkarshkukreti/diff.rs
pyo3,72572341,16844407,2025-03-31T21:06:18.192069Z,2017-07-23T18:28:44.917432Z,0.24.1,Bindings to Python interpreter,https://github.com/pyo3/pyo3
tar,72429704,12003222,2025-02-22T00:59:08.196026Z,2014-11-11T00:22:07.358495Z,0.4.44,"A Rust implementation of a TAR file reader and writer. This library does not
currently handle compression, but it is abstract over all I/O readers and
writers. Additionally, great lengths are taken to ensure that the entire
contents are never required to be entirely resident in memory all at once.
",https://github.com/alexcrichton/tar-rs
camino,72351187,12734613,2024-08-18T02:02:51.692216Z,2021-02-23T18:20:23.469325Z,1.1.9,UTF-8 paths,https://github.com/camino-rs/camino
curve25519-dalek,72323344,12556104,2024-06-18T19:20:35.007627Z,2016-12-08T05:13:57.620503Z,4.1.3,A pure-Rust implementation of group operations on ristretto255 and Curve25519,https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek
hashlink,72256615,17248652,2024-12-09T11:48:51.357012Z,2019-07-06T10:17:21.361009Z,0.10.0,HashMap-like containers that hold their key-value pairs in a user controllable order,https://github.com/kyren/hashlink
valuable,72175323,16412693,2025-01-17T00:46:34.256238Z,2021-03-09T18:32:03.666997Z,0.1.1,"Object-safe value inspection, used to pass un-typed structured data across trait-object boundaries.
",https://github.com/tokio-rs/valuable
yansi,71674170,13666222,2024-03-13T07:48:07.624195Z,2017-06-02T04:14:59.893274Z,1.0.1,A dead simple ANSI terminal color painting library.,https://github.com/SergioBenitez/yansi
pyo3-macros-backend,70626264,16721071,2025-03-31T21:05:50.218808Z,2020-12-20T10:04:57.813482Z,0.24.1,Code generation for PyO3 package,https://github.com/pyo3/pyo3
pyo3-macros,70624564,16719257,2025-03-31T21:05:59.752717Z,2020-12-20T10:05:29.097307Z,0.24.1,Proc macros for PyO3 package,https://github.com/pyo3/pyo3
plotters-backend,70100203,14958484,2024-09-08T14:46:47.868379Z,2020-01-28T19:52:26.933094Z,0.3.7,Plotters Backend API,https://github.com/plotters-rs/plotters
crc,69783200,13211331,2024-04-08T16:05:50.419393Z,2015-03-15T19:05:37.390081Z,3.2.1,Rust implementation of CRC with support of various standards,https://github.com/mrhooray/crc-rs.git
plotters-svg,69637007,14889632,2024-09-08T14:47:23.833784Z,2020-01-28T19:57:33.837634Z,0.3.7,Plotters SVG backend,https://github.com/plotters-rs/plotters.git
http-body-util,69277448,26586137,2025-03-11T16:49:40.971587Z,2022-10-25T20:37:59.773380Z,0.1.3,"Combinators and adapters for HTTP request or response bodies.
",https://github.com/hyperium/http-body
brotli,69266287,15777773,2024-10-02T07:06:27.834692Z,2015-11-30T16:41:44.747454Z,7.0.0,A brotli compressor and decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib's allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. All included code is safe.,https://github.com/dropbox/rust-brotli
brotli-decompressor,68838744,13966835,2025-01-21T07:30:59.117035Z,2017-04-25T08:09:43.737166Z,4.0.2,"A brotli decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib's allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. Alternatively, --features=unsafe turns off array bounds checks and memory initialization but provides a safe interface for the caller.  Without adding the --features=unsafe argument, all included code is safe. For compression in addition to this library, download https://github.com/dropbox/rust-brotli ",https://github.com/dropbox/rust-brotli-decompressor
async-task,68819447,12654913,2024-04-27T23:06:20.560257Z,2019-05-07T14:56:54.628954Z,4.7.1,Task abstraction for building executors,https://github.com/smol-rs/async-task
twox-hash,68541345,17399785,2024-12-09T15:57:24.908629Z,2015-05-09T03:04:03.255761Z,2.1.0,A Rust implementation of the XXHash and XXH3 algorithms,https://github.com/shepmaster/twox-hash
hyper-util,68507687,26751337,2025-03-31T18:17:04.308964Z,2022-01-15T00:20:07.067925Z,0.1.11,hyper utilities,https://github.com/hyperium/hyper-util
inout,68142323,14851996,2025-02-22T16:18:09.964996Z,2021-08-13T16:42:36.965539Z,0.2.0-rc.4,Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.,https://github.com/RustCrypto/utils
ctor,68126870,7482818,2025-03-09T02:27:45.463248Z,2018-12-06T05:31:29.960460Z,0.4.1,__attribute__((constructor)) for Rust,https://github.com/mmastrac/rust-ctor
pretty_assertions,67929223,10285870,2024-09-15T13:11:03.148906Z,2017-03-26T23:33:43.680768Z,1.4.1,"Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.",https://github.com/rust-pretty-assertions/rust-pretty-assertions
dirs-next,67852487,8751005,2020-10-22T03:34:04.786339Z,2020-05-06T15:46:40.488452Z,2.0.0,"A tiny low-level library that provides platform-specific standard locations
of directories for config, cache and other data on Linux, Windows, macOS
and Redox by leveraging the mechanisms defined by the XDG base/user
directory specifications on Linux, the Known Folder API on Windows,
and the Standard Directory guidelines on macOS.
",https://github.com/xdg-rs/dirs
colored,67821483,14603455,2025-01-07T14:10:54.236785Z,2016-03-13T17:27:11.931945Z,3.0.0,The most simple way to add colors in your terminal,https://github.com/mackwic/colored
windows-core,67651249,25138248,2025-03-18T14:26:00.415140Z,2021-11-15T18:04:53.482359Z,0.61.0,Core type support for COM and Windows,https://github.com/microsoft/windows-rs
tokio-io-timeout,67462690,8901057,2021-12-31T19:12:23.371189Z,2017-06-17T03:30:29.009870Z,1.2.0,Tokio wrappers which apply timeouts to IO operations,https://github.com/sfackler/tokio-io-timeout
num-derive,67181134,12125110,2024-02-06T21:00:45.637968Z,2016-09-30T06:43:39.517757Z,0.4.2,Numeric syntax extensions,https://github.com/rust-num/num-derive
predicates-core,67169129,11127975,2024-12-19T18:53:29.925148Z,2018-07-30T23:24:52.223852Z,1.0.9,An API for boolean-valued predicate functions.,https://github.com/assert-rs/predicates-rs/tree/master/crates/core
predicates-tree,67033214,11110053,2024-12-19T18:53:32.667750Z,2018-07-30T23:25:09.954627Z,1.0.12,Render boolean-valued predicate functions results as a tree.,https://github.com/assert-rs/predicates-rs/tree/master/crates/tree
cmake,66806133,11763678,2025-02-10T00:36:35.625126Z,2015-07-31T23:01:59.165496Z,0.1.54,"A build dependency for running `cmake` to build a native library
",https://github.com/rust-lang/cmake-rs
unsafe-libyaml,66356189,17988383,2024-03-17T05:44:18.590756Z,2022-07-03T16:43:10.793887Z,0.2.11,libyaml transpiled to rust by c2rust,https://github.com/dtolnay/unsafe-libyaml
windows_i686_gnullvm,66316516,25379162,2025-01-07T15:42:46.222318Z,2024-04-02T12:16:37.468429Z,0.53.0,Import lib for Windows,https://github.com/microsoft/windows-rs
cargo-platform,66286040,11525220,2025-02-20T17:09:55.006249Z,2019-09-27T17:38:56.154489Z,0.2.0,Cargo's representation of a target platform.,https://github.com/rust-lang/cargo
anstyle-wincon,65998920,18636447,2025-01-13T16:17:45.355448Z,2023-03-08T21:17:38.191878Z,3.0.7,Styling legacy Windows terminals,https://github.com/rust-cli/anstyle.git
float-cmp,65273208,9130361,2024-09-20T00:55:12.009814Z,2015-01-19T02:27:00.565634Z,0.10.0,Floating point approximate comparison traits,https://github.com/mikedilger/float-cmp
doc-comment,65229074,10924932,2020-07-01T19:18:24.882328Z,2018-03-29T08:35:21.939899Z,0.3.3,Macro to generate doc comments,https://github.com/GuillaumeGomez/doc-comment
alloc-no-stdlib,65112558,12760123,2022-09-12T05:29:48.261627Z,2016-05-24T07:56:32.764714Z,2.0.4,"A dynamic allocator that may be used with or without the stdlib. This allows a package with nostd to allocate memory dynamically and be used either with a custom allocator, items on the stack, or by a package that wishes to simply use Box<>. It also provides options to use calloc or a mutable global variable for pre-zeroed memory",https://github.com/dropbox/rust-alloc-no-stdlib
match_cfg,65109011,7294757,2019-04-02T10:50:59.802728Z,2019-04-02T10:50:59.802728Z,0.1.0,"A convenience macro to ergonomically define an item depending on a large number
of `#[cfg]` parameters. Structured like match statement, the first matching
branch is the item that gets emitted.
",https://github.com/gnzlbg/match_cfg
void,64948201,6983894,2016-04-18T07:21:21.674123Z,2015-02-10T08:54:09.482359Z,1.0.2,The uninhabited void type for use in statically impossible cases.,https://github.com/reem/rust-void.git
alloc-stdlib,64873172,12740709,2022-09-12T05:30:14.880111Z,2018-10-28T17:33:28.248102Z,0.2.2,A dynamic allocator example that may be used with the stdlib,https://github.com/dropbox/rust-alloc-no-stdlib
zip,64844739,14212560,2025-04-04T21:03:36.067591Z,2014-11-21T08:59:07.181279Z,2.6.1,"Library to support the reading and writing of zip files.
",https://github.com/zip-rs/zip2.git
aead,64836720,8593883,2024-07-26T19:54:28.901747Z,2016-10-06T21:19:33.744879Z,0.6.0-rc.0,"Traits for Authenticated Encryption with Associated Data (AEAD) algorithms,
such as AES-GCM as ChaCha20Poly1305, which provide a high-level API
",https://github.com/RustCrypto/traits
futures-timer,64644926,11358811,2024-02-22T14:10:54.981743Z,2017-09-27T17:15:24.946049Z,3.0.3,"Timeouts for futures.
",https://github.com/async-rs/futures-timer
flume,63324151,14091912,2024-10-19T13:54:21.390653Z,2019-07-31T00:18:26.586068Z,0.11.1,A blazingly fast multi-producer channel,https://github.com/zesterer/flume
lexical-core,62494267,8447615,2024-12-08T21:01:01.113747Z,2018-12-15T19:37:50.282051Z,1.0.5,"Lexical, to- and from-string conversion routines.",https://github.com/Alexhuszagh/rust-lexical
android-tzdata,62207497,16541174,2023-03-05T09:25:18.541477Z,2023-03-04T18:26:25.068003Z,0.1.1,Parser for the Android-specific tzdata file,https://github.com/RumovZ/android-tzdata
blocking,62109812,12197861,2024-05-26T01:47:26.714172Z,2019-06-15T23:09:34.273937Z,1.6.1,A thread pool for isolating blocking I/O in async programs,https://github.com/smol-rs/blocking
serde_repr,61990160,10576543,2025-03-04T00:16:18.920627Z,2019-01-13T01:32:16.572279Z,0.1.20,Derive Serialize and Deserialize that delegates to the underlying repr of a C-like enum.,https://github.com/dtolnay/serde-repr
xml-rs,61962031,8435517,2025-04-09T12:40:19.074499Z,2014-12-08T20:29:58.424754Z,0.8.26,An XML library in pure Rust,https://github.com/kornelski/xml-rs
termtree,61832333,10998172,2024-07-25T14:42:40.978498Z,2021-10-07T18:21:36.306218Z,0.5.1,Visualize tree-like data on the command-line,https://github.com/rust-cli/termtree
ciborium-io,61410884,15813838,2024-01-24T03:02:36.662214Z,2021-11-21T19:32:55.708129Z,0.2.2,Simplified Read/Write traits for no_std usage,https://github.com/enarx/ciborium
rsa,61392328,19511980,2025-03-12T17:11:19.673474Z,2018-07-24T08:31:14.033066Z,0.10.0-pre.4,Pure Rust RSA implementation,https://github.com/RustCrypto/RSA
ciborium,61380250,15808974,2024-01-24T03:04:25.973012Z,2020-12-03T22:33:28.171774Z,0.2.2,serde implementation of CBOR using ciborium-basic,https://github.com/enarx/ciborium
ciborium-ll,61377710,15806795,2024-01-24T03:03:42.992548Z,2021-11-21T19:33:03.017685Z,0.2.2,Low-level CBOR codec primitives,https://github.com/enarx/ciborium
ctr,61371444,8409996,2024-08-14T16:41:38.330263Z,2018-07-30T10:37:27.652417Z,0.10.0-pre.2,CTR block modes of operation,https://github.com/RustCrypto/block-modes
serde_path_to_error,61342883,15876133,2025-03-03T04:51:06.825049Z,2019-01-07T00:04:58.762298Z,0.1.17,Path to the element that failed to deserialize,https://github.com/dtolnay/path-to-error
maplit,61272397,9168575,2019-08-24T17:23:26.045525Z,2015-05-16T22:16:50.961537Z,1.0.2,"Collection âliteralâ macros for HashMap, HashSet, BTreeMap, and BTreeSet.",https://github.com/bluss/maplit
pyo3-ffi,61066624,16444585,2025-03-31T21:06:05.179927Z,2022-02-27T23:20:55.736914Z,0.24.1,Python-API bindings for the PyO3 ecosystem,https://github.com/pyo3/pyo3
tracing-opentelemetry,60502562,13757598,2025-03-23T17:06:30.448755Z,2019-11-20T19:44:36.014947Z,0.30.0,OpenTelemetry integration for tracing,https://github.com/tokio-rs/tracing-opentelemetry
universal-hash,60494887,8471454,2024-07-26T19:10:14.703321Z,2019-08-30T00:52:43.192602Z,0.6.0-rc.0,Traits which describe the functionality of universal hash functions (UHFs),https://github.com/RustCrypto/traits
ff,60456034,12694164,2025-03-09T22:16:54.081723Z,2017-06-26T05:13:25.406384Z,0.13.1,Library for building and interfacing with finite fields,https://github.com/zkcrypto/ff
event-listener-strategy,60449763,19967669,2025-03-27T17:31:33.741698Z,2023-09-11T15:35:13.879946Z,0.5.4,Block or poll on event_listener easily,https://github.com/smol-rs/event-listener-strategy
dtoa,60401276,5416672,2025-03-03T23:20:59.932998Z,2016-06-27T09:44:32.587067Z,1.0.10,Fast floating point primitive to string conversion,https://github.com/dtolnay/dtoa
redox_users,60258129,8316777,2025-01-02T18:06:03.914019Z,2018-03-28T18:15:46.838444Z,0.5.0,A Rust library to access Redox users and groups functionality,https://gitlab.redox-os.org/redox-os/users
sha3,60207329,9035373,2025-03-05T21:18:49.529277Z,2016-10-06T19:27:19.095615Z,0.11.0-pre.5,"Pure Rust implementation of SHA-3, a family of Keccak-based hash functions
including the SHAKE family of eXtendable-Output Functions (XOFs), as well as
the accelerated variant TurboSHAKE
",https://github.com/RustCrypto/hashes
bzip2-sys,60204377,13373046,2025-02-28T13:56:25.581313Z,2014-11-13T06:35:17.703582Z,0.1.13+1.0.8,"Bindings to libbzip2 for bzip2 compression and decompression exposed as
Reader/Writer streams.
",https://github.com/alexcrichton/bzip2-rs
group,59827427,12426598,2022-12-06T02:02:57.906653Z,2018-07-02T14:00:15.955345Z,0.13.0,Elliptic curve group traits and utilities,https://github.com/zkcrypto/group
wait-timeout,59533687,14508986,2025-02-03T12:22:33.904538Z,2015-09-08T00:53:20.231605Z,0.2.1,"A crate to wait on a child process with a timeout specified across Unix and
Windows platforms.
",https://github.com/alexcrichton/wait-timeout
fxhash,58783247,7320016,2017-07-29T19:02:18.664479Z,2017-06-26T18:31:21.553871Z,0.2.1,"A fast, non-secure, hashing algorithm derived from an internal hasher used in FireFox and Rustc.",https://github.com/cbreeden/fxhash
async-compression,58339940,11937938,2025-03-25T14:15:52.331970Z,2019-05-14T17:10:23.835669Z,0.4.22,"Adaptors between compression crates and Rust's modern asynchronous IO types.
",https://github.com/Nullus157/async-compression
phf_macros,58156221,14515795,2025-01-06T20:31:38.326712Z,2015-01-25T04:01:23.567340Z,0.11.3,Macros to generate types in the phf crate,https://github.com/rust-phf/rust-phf
elliptic-curve,58109986,12145911,2024-09-20T18:52:03.560922Z,2019-12-05T17:07:27.394753Z,0.14.0-rc.1,"General purpose Elliptic Curve Cryptography (ECC) support, including types
and traits for representing various elliptic curve forms, scalars, points,
and public/secret keys composed thereof.
",https://github.com/RustCrypto/traits
structopt,57738920,4933614,2022-01-18T12:08:44.235039Z,2017-02-03T00:18:05.356834Z,0.3.26,Parse command line argument by defining a struct.,https://github.com/TeXitoi/structopt
libsqlite3-sys,57716627,10758385,2025-03-05T17:34:52.957060Z,2015-02-24T02:54:21.216860Z,0.32.0,Native bindings to the libsqlite3 library,https://github.com/rusqlite/rusqlite
pkcs1,57658756,19088373,2024-09-06T15:03:57.450860Z,2020-06-12T14:01:05.920956Z,0.8.0-rc.1,"Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #1:
RSA Cryptography Specifications Version 2.2 (RFC 8017)
",https://github.com/RustCrypto/formats
ecdsa,57445841,12047027,2024-09-20T19:17:46.480332Z,2018-10-30T23:40:45.698779Z,0.17.0-pre.9,"Pure Rust implementation of the Elliptic Curve Digital Signature Algorithm
(ECDSA) as specified in FIPS 186-4 (Digital Signature Standard), providing
RFC6979 deterministic signatures as well as support for added entropy
",https://github.com/RustCrypto/signatures
encode_unicode,57376065,10253309,2022-08-07T14:19:49.238999Z,2016-04-07T00:11:28.007160Z,1.0.0,"UTF-8 and UTF-16 character types, iterators and related methods for char, u8 and u16.
",https://github.com/tormol/encode_unicode
structopt-derive,57311366,4920284,2021-10-18T07:06:20.504665Z,2017-02-03T00:17:35.613888Z,0.4.18,"Parse command line argument by defining a struct, derive crate.",https://github.com/TeXitoi/structopt
headers,56956704,10103130,2023-11-24T19:15:22.169731Z,2016-08-09T22:30:40.796094Z,0.4.0,typed HTTP headers,https://github.com/hyperium/headers
pathdiff,56676976,12735917,2024-11-25T18:15:15.304010Z,2017-09-20T00:06:24.615980Z,0.2.3,Library for diffing paths to obtain relative paths,https://github.com/Manishearth/pathdiff
term,56435604,5937903,2024-12-14T17:33:27.842816Z,2014-12-28T18:17:56.750054Z,1.0.1,"A terminal formatting library
",https://github.com/Stebalien/term
async-executor,56352264,9342728,2024-09-07T17:39:50.918512Z,2019-07-01T08:25:50.986690Z,1.13.1,Async executor,https://github.com/smol-rs/async-executor
base16ct,56073540,12998168,2023-02-26T17:06:02.943914Z,2022-01-11T22:12:56.812454Z,0.2.0,"Pure Rust implementation of Base16 a.k.a hexadecimal (RFC 4648) which avoids
any usages of data-dependent branches/LUTs and thereby provides portable
""best effort"" constant-time operation and embedded-friendly no_std support
",https://github.com/RustCrypto/formats/tree/master/base16ct
mockall,55997676,10557315,2024-11-17T22:35:09.861614Z,2019-07-03T04:42:57.658170Z,0.13.1,"A powerful mock object library for Rust.
",https://github.com/asomers/mockall
png,55884435,11737150,2025-03-03T06:13:33.219893Z,2015-05-26T08:26:52.565506Z,0.18.0-rc,PNG decoding and encoding library in pure Rust,https://github.com/image-rs/image-png
mockall_derive,55862843,10539103,2024-11-17T22:34:57.747894Z,2019-07-03T04:38:31.751085Z,0.13.1,"Procedural macros for Mockall
",https://github.com/asomers/mockall
anes,55835476,14549767,2023-11-27T12:11:51.194575Z,2019-10-25T14:54:21.963121Z,0.2.0,ANSI Escape Sequences provider & parser,https://github.com/qwandor/anes-rs
threadpool,55695107,7013046,2020-05-11T15:44:07.541079Z,2015-02-24T22:22:54.530788Z,1.8.1,"A thread pool for running a number of jobs on a fixed set of worker threads.
",https://github.com/rust-threadpool/rust-threadpool
headers-core,55627257,10011160,2023-11-24T19:13:05.687876Z,2018-08-30T22:31:26.562535Z,0.3.0,typed HTTP headers core trait,https://github.com/hyperium/headers
polyval,55369026,7512099,2024-07-26T21:05:43.315869Z,2019-08-13T22:32:41.629643Z,0.7.0-rc.0,"POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing
a Message Authentication Code (MAC)
",https://github.com/RustCrypto/universal-hashes
ignore,55330517,9081695,2024-09-09T02:06:06.387704Z,2016-10-30T02:14:00.069900Z,0.4.23,"A fast library for efficiently matching ignore files such as `.gitignore`
against file paths.
",https://github.com/BurntSushi/ripgrep/tree/master/crates/ignore
enum-as-inner,55186856,7968578,2024-09-09T16:32:17.899384Z,2018-12-08T08:25:33.595709Z,0.6.1,"A proc-macro for deriving inner field accessor functions on enums.
",https://github.com/bluejekyll/enum-as-inner
fancy-regex,54848793,13924161,2024-10-24T08:52:30.141793Z,2017-02-05T15:58:07.799444Z,0.14.0,"An implementation of regexes, supporting a relatively rich set of features, including backreferences and look-around.",https://github.com/fancy-regex/fancy-regex
ed25519,54629013,11023030,2024-07-28T16:17:45.089962Z,2016-10-06T21:33:33.887375Z,2.3.0-pre.0,"Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032)
support library providing signature type definitions and PKCS#8 private key
decoding/encoding support
",https://github.com/RustCrypto/signatures
crc-catalog,54516379,12393947,2023-11-04T18:43:50.473545Z,2019-12-14T08:16:01.779921Z,2.4.0,Catalog of CRC algorithms (generated from http://reveng.sourceforge.net/crc-catalogue) expressed as simple Rust structs.,https://github.com/akhilles/crc-catalog.git
sec1,54488835,12053920,2025-02-23T07:07:46.360515Z,2020-08-26T16:48:41.171083Z,0.8.0-rc.4,"Pure Rust implementation of SEC1: Elliptic Curve Cryptography encoding formats
including ASN.1 DER-serialized private keys as well as the
Elliptic-Curve-Point-to-Octet-String encoding
",https://github.com/RustCrypto/formats
image,54223486,12156506,2025-03-25T04:25:02.221510Z,2014-11-20T20:03:29.764042Z,0.25.6,Imaging library. Provides basic image processing and encoders/decoders for common image formats.,https://github.com/image-rs/image
fs_extra,54075370,10572117,2023-02-03T17:59:27.093041Z,2017-02-08T09:23:29.605076Z,1.3.0,Expanding std::fs and std::io. Recursively copy folders with information about process and much more.,https://github.com/webdesus/fs_extra
erased-serde,53809104,11339280,2025-03-03T23:29:16.752903Z,2016-08-21T19:27:33.182632Z,0.4.6,Type-erased Serialize and Serializer traits,https://github.com/dtolnay/erased-serde
new_debug_unreachable,53785078,9919681,2024-03-15T17:26:05.782555Z,2018-06-01T22:17:30.262654Z,1.0.6,"panic in debug, intrinsics::unreachable() in release (fork of debug_unreachable)",https://github.com/mbrubeck/rust-debug-unreachable
stringprep,53627052,10326747,2024-05-25T13:22:49.993689Z,2017-05-21T03:53:10.107537Z,0.1.5,An implementation of the stringprep algorithm,https://github.com/sfackler/rust-stringprep
Inflector,53557114,6643388,2019-01-20T20:55:29.171696Z,2015-10-10T15:26:24.472017Z,0.11.4,"Adds String based inflections for Rust. Snake, kebab, camel, sentence, class, title and table cases as well as ordinalize, deordinalize, demodulize, foreign key, and pluralize/singularize are supported as both traits and pure functions acting on String types.
",https://github.com/whatisinternet/inflector
indicatif,53315999,9925406,2025-01-28T15:54:20.473459Z,2017-04-26T12:41:07.759613Z,0.17.11,A progress bar and cli reporting library for Rust,https://github.com/console-rs/indicatif
difflib,52933563,8711321,2018-07-22T12:47:54.378558Z,2016-03-01T20:11:02.811921Z,0.4.0,Port of Python's difflib library to Rust.,https://github.com/DimaKudosh/difflib
number_prefix,52820093,9648012,2020-04-07T01:48:04.585296Z,2014-12-15T09:54:40.253590Z,0.4.0,"Library for numeric prefixes (kilo, giga, kibi).",https://github.com/ogham/rust-number-prefix
opentelemetry_sdk,52598945,15855668,2025-03-22T00:13:49.244330Z,2019-06-27T23:25:54.841142Z,0.29.0,The SDK for the OpenTelemetry metrics collection and distributed tracing framework,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-sdk
md5,52479186,7486421,2019-11-01T19:48:57.309232Z,2015-06-21T10:26:13.324147Z,0.7.0,The package provides the MD5 hash function.,https://github.com/stainless-steel/md5
num-bigint-dig,52307006,13894000,2023-07-10T08:03:30.470100Z,2018-11-24T11:05:02.696017Z,0.8.4,Big integer implementation for Rust,https://github.com/dignifiedquire/num-bigint
rfc6979,52118941,11949796,2024-07-27T01:06:47.043571Z,2021-02-09T13:22:36.030060Z,0.5.0-pre.4,"Pure Rust implementation of RFC6979: Deterministic Usage of the
Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA)
",https://github.com/RustCrypto/signatures
keccak,51869577,8185378,2024-01-16T19:13:50.279129Z,2018-03-19T15:38:15.485407Z,0.2.0-pre.0,"Pure Rust implementation of the Keccak sponge function including the keccak-f
and keccak-p variants
",https://github.com/RustCrypto/sponges/tree/master/keccak
crossbeam,51698644,5692260,2024-01-08T12:58:18.537533Z,2015-08-27T18:36:48.638047Z,0.8.4,Tools for concurrent programming,https://github.com/crossbeam-rs/crossbeam
protobuf,51696222,7025924,2025-03-10T14:07:03.378871Z,2014-11-21T00:30:41.855088Z,4.31.0-beta1,"Rust implementation of Google protocol buffers
",https://github.com/stepancheg/rust-protobuf/
fragile,51174287,8740919,2025-03-25T12:01:07.715153Z,2018-06-20T23:57:55.033266Z,2.0.1,Provides wrapper types for sending non-send values to other threads.,https://github.com/mitsuhiko/fragile
serial_test,50972551,11683917,2024-11-08T19:28:07.728609Z,2018-12-30T23:25:35.760393Z,3.2.0,Allows for the creation of serialised Rust tests,https://github.com/palfrey/serial_test/
const-random,50658388,13257442,2024-03-03T23:32:56.450219Z,2019-03-03T00:37:42.180069Z,0.1.18,Provides compile time random number generation.,https://github.com/tkaitchuck/constrandom
http-range-header,50476097,6961838,2024-11-28T12:38:42.267978Z,2021-11-25T09:12:33.415128Z,0.4.2,No-dep range header parser,https://github.com/MarcusGrass/parse-range-headers
serde_derive_internals,50443979,11152173,2024-05-15T07:36:03.615748Z,2017-04-20T15:12:02.135733Z,0.29.1,AST representation used by Serde derive macros. Unstable.,https://github.com/serde-rs/serde
whoami,50441602,10855469,2025-03-23T23:24:02.375649Z,2017-08-04T05:29:47.173641Z,2.0.0-pre.2,Retrieve the current user and environment.,https://github.com/ardaku/whoami
serial_test_derive,50388801,11588587,2024-11-08T19:27:36.248996Z,2018-12-30T23:26:03.428449Z,3.2.0,Helper crate for serial_test,https://github.com/palfrey/serial_test/
const-random-macro,50342502,13190336,2023-10-23T19:07:26.855710Z,2019-03-03T00:35:20.621290Z,0.1.16,Provides the procedural macro used by const-random,https://github.com/tkaitchuck/constrandom
ghash,50056185,6453776,2024-07-26T21:06:04.751991Z,2016-10-06T21:35:47.726226Z,0.6.0-rc.0,"Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC),
as in the AES-GCM authenticated encryption cipher.
",https://github.com/RustCrypto/universal-hashes
aes-gcm,49959675,6326880,2024-10-07T19:25:32.759618Z,2019-08-16T22:34:48.520552Z,0.11.0-pre.2,"Pure Rust implementation of the AES-GCM (Galois/Counter Mode)
Authenticated Encryption with Associated Data (AEAD) Cipher
with optional architecture-specific hardware acceleration
",https://github.com/RustCrypto/AEADs
lru-cache,49749581,6491018,2019-03-21T01:04:02.527231Z,2015-03-18T18:49:05.615330Z,0.1.2,A cache that holds a limited number of key-value pairs,https://github.com/contain-rs/lru-cache
adler2,49627603,28362747,2024-08-04T20:25:28.045801Z,2024-08-04T20:25:28.045801Z,2.0.0,A simple clean-room implementation of the Adler-32 checksum,https://github.com/oyvindln/adler2
downcast,49481578,8550530,2021-11-09T09:57:28.963027Z,2015-10-24T11:18:26.683306Z,0.11.0,Trait for downcasting trait objects back to their original types.,https://github.com/fkoep/downcast-rs
async-recursion,49266476,10343423,2024-04-25T16:06:43.164603Z,2019-10-04T00:56:26.118378Z,1.1.1,Recursion for async functions,https://github.com/dcchut/async-recursion
simple_asn1,49240329,12180418,2025-01-12T22:01:48.935117Z,2017-12-27T02:17:02.072468Z,0.6.3,A simple DER/ASN.1 encoding/decoding library.,https://github.com/acw/simple_asn1
blake2,49170045,7998762,2025-03-05T21:16:13.296906Z,2016-10-06T21:27:29.446062Z,0.11.0-pre.5,BLAKE2 hash functions,https://github.com/RustCrypto/hashes
codespan-reporting,49060351,8076643,2025-03-22T16:54:28.749166Z,2018-04-16T03:43:01.202472Z,0.12.0,Beautiful diagnostic reporting for text-based programming languages,https://github.com/brendanzab/codespan
jsonwebtoken,48833117,12409882,2025-02-06T20:04:48.907046Z,2015-11-02T23:29:26.499058Z,9.3.1,Create and decode JWTs in a strongly typed way.,https://github.com/Keats/jsonwebtoken
blake3,48826578,8852138,2025-04-03T06:19:17.684975Z,2019-09-17T19:59:37.308360Z,1.8.1,the BLAKE3 hash function,https://github.com/BLAKE3-team/BLAKE3
string_cache,48549902,7309359,2025-03-28T03:15:08.070013Z,2015-04-29T21:22:05.812623Z,0.8.9,"A string interning library for Rust, developed as part of the Servo project.",https://github.com/servo/string-cache
approx,48484761,8419577,2022-01-23T10:15:35.118590Z,2015-11-15T13:11:40.322680Z,0.5.1,Approximate floating point equality comparisons and assertions.,https://github.com/brendanzab/approx
downcast-rs,48317740,8910757,2025-01-07T04:20:42.769689Z,2015-12-16T03:50:40.714078Z,2.0.1,"Trait object downcasting support using only safe Rust. It supports type
parameters, associated types, and type constraints.
",https://github.com/marcianx/downcast-rs
tinystr,48227626,28403325,2025-02-26T18:22:16.205167Z,2019-08-10T03:37:58.905996Z,0.8.1,A small ASCII-only bounded length string representation.,https://github.com/unicode-org/icu4x
raw-cpuid,47621445,10361039,2025-03-04T19:48:51.996701Z,2015-03-24T19:38:22.010720Z,11.5.0,"A library to parse the x86 CPUID instruction, written in rust with no external dependencies. The implementation closely resembles the Intel CPUID manual description. The library does only depend on libcore.",https://github.com/gz/rust-cpuid
net2,47340130,1765177,2023-06-14T18:02:31.313490Z,2015-06-19T01:25:57.653522Z,0.2.39,"Extensions to the standard library's networking types as proposed in RFC 1158.
",https://github.com/deprecrated/net2-rs
precomputed-hash,47254878,6988168,2017-09-29T20:25:54.097804Z,2017-03-21T18:06:00.731309Z,0.1.1,A library intending to be a base dependency to expose a precomputed hash,https://github.com/emilio/precomputed-hash
sha1_smol,47251751,10136913,2024-07-21T20:34:38.814832Z,2022-01-16T08:38:28.018739Z,1.0.1,Minimal dependency-free implementation of SHA1 for Rust.,https://github.com/mitsuhiko/sha1-smol
simd-adler32,47236098,15125065,2023-07-24T18:54:48.756556Z,2021-04-09T02:14:04.400491Z,0.3.7,A SIMD-accelerated Adler-32 hash algorithm implementation.,https://github.com/mcountryman/simd-adler32
bzip2,47225798,9701474,2025-02-28T13:56:50.032083Z,2014-11-13T06:35:38.538844Z,0.5.2,"Bindings to libbzip2 for bzip2 compression and decompression exposed as
Reader/Writer streams.
",https://github.com/trifectatechfoundation/bzip2-rs
ed25519-dalek,47222868,9997820,2024-02-07T01:14:29.540135Z,2016-12-09T01:24:53.342073Z,2.1.1,"Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.",https://github.com/dalek-cryptography/curve25519-dalek/tree/main/ed25519-dalek
value-bag,47100336,7761843,2025-03-26T05:08:41.098428Z,2020-08-18T03:58:58.918633Z,1.11.1,Anonymous structured values,https://github.com/sval-rs/value-bag
iovec,47034217,1833349,2019-10-09T18:09:56.560010Z,2017-03-15T06:25:56.348864Z,0.1.4,"Portable buffer type for scatter/gather I/O operations
",https://github.com/carllerche/iovec
similar,46812007,12384261,2025-01-19T14:39:11.514512Z,2021-01-24T01:33:24.060980Z,2.7.0,A diff library for Rust,https://github.com/mitsuhiko/similar
git2,46623434,6370737,2025-03-17T22:43:50.208464Z,2014-11-14T23:37:32.510389Z,0.20.1,"Bindings to libgit2 for interoperating with git repositories. This library is
both threadsafe and memory safe and allows both reading and writing git
repositories.
",https://github.com/rust-lang/git2-rs
quanta,46482156,9755604,2025-01-01T23:06:24.932309Z,2019-01-14T12:28:55.369353Z,0.12.5,high-speed timing library,https://github.com/metrics-rs/quanta
cbindgen,46431462,8507142,2025-01-15T13:24:43.505472Z,2017-04-12T15:57:46.007350Z,0.28.0,A tool for generating C bindings to Rust code.,https://github.com/mozilla/cbindgen
libgit2-sys,46369945,6338026,2025-03-17T22:43:43.518059Z,2014-11-13T06:35:27.096084Z,0.18.1+1.9.0,Native bindings to the libgit2 library,https://github.com/rust-lang/git2-rs
adler32,46344744,5862039,2020-07-30T19:05:16.808788Z,2015-08-24T21:44:20.189544Z,1.2.0,Minimal Adler32 implementation for Rust.,https://github.com/remram44/adler32-rs
derive_builder,46325090,9984899,2024-10-08T16:55:17.031148Z,2016-08-07T20:28:43.953501Z,0.20.2,Rust macro to automatically implement the builder pattern for arbitrary structs.,https://github.com/colin-kiegel/rust-derive-builder
derive_builder_core,46317542,9981898,2024-10-08T16:54:04.753323Z,2017-03-25T20:27:23.686275Z,0.20.2,Internal helper library for the derive_builder crate.,https://github.com/colin-kiegel/rust-derive-builder
normalize-line-endings,46213158,5941335,2018-12-16T15:17:15.641063Z,2016-05-14T19:00:20.135508Z,0.3.0,"Takes an iterator over chars and returns a new iterator with all line endings (\r, \n, or \r\n) as \n",https://github.com/derekdreery/normalize-line-endings
ctrlc,46176689,8050257,2025-04-04T11:59:44.731671Z,2015-07-16T08:49:02.855449Z,3.4.6,Easy Ctrl-C handler for Rust projects,https://github.com/Detegr/rust-ctrlc.git
sysinfo,46128244,9569190,2025-04-01T21:54:10.796216Z,2015-07-25T20:38:16.491593Z,0.34.2,"Library to get system information such as processes, CPUs, disks, components and networks",https://github.com/GuillaumeGomez/sysinfo
ureq,46093736,11602100,2025-03-17T18:10:04.485233Z,2018-06-22T08:25:15.267842Z,3.0.10,"Simple, safe HTTP client",https://github.com/algesten/ureq
chrono-tz,45960688,9095536,2025-03-24T09:44:13.409151Z,2016-10-08T19:42:47.877742Z,0.10.3,TimeZone implementations for chrono from the IANA database,https://github.com/chronotope/chrono-tz
debugid,45638662,10253854,2022-04-26T11:03:07.242788Z,2018-03-28T22:17:03.942655Z,0.8.0,Common reusable types for implementing the sentry.io protocol.,https://github.com/getsentry/rust-debugid
owo-colors,45623297,10209070,2025-02-23T02:37:03.251910Z,2020-08-25T06:21:49.001141Z,4.2.0,Zero-allocation terminal colors that'll make people go owo,https://github.com/owo-colors/owo-colors
inotify,45113073,7276538,2024-08-19T11:38:14.906501Z,2014-12-22T12:54:21.610996Z,0.11.0,Idiomatic wrapper for inotify,https://github.com/hannobraun/inotify
dunce,44677083,12097322,2024-08-04T01:36:46.487482Z,2017-11-22T13:49:37.027184Z,1.0.5,"Normalize Windows paths to the most compatible format, avoiding UNC where possible",https://gitlab.com/kornelski/dunce
proptest,44539449,12319605,2024-12-16T01:48:18.208426Z,2017-06-18T17:47:46.015744Z,1.6.0,"Hypothesis-like property-based testing and shrinking.
",https://github.com/proptest-rs/proptest
resolv-conf,44405830,6356598,2025-03-13T09:55:16.824019Z,2016-01-21T11:52:22.053281Z,0.7.1,The resolv.conf file parser,https://github.com/hickory-dns/resolv-conf
zerofrom,44399366,28914822,2025-02-26T18:22:02.789601Z,2022-04-06T00:39:45.094863Z,0.1.6,ZeroFrom trait for constructing,https://github.com/unicode-org/icu4x
litemap,44278607,28848891,2025-02-26T18:20:43.655598Z,2021-02-23T01:00:09.087357Z,0.7.5,"A key-value Map implementation based on a flat, sorted Vec.",https://github.com/unicode-org/icu4x
atoi,44156418,10033449,2022-10-11T17:21:42.722566Z,2017-06-29T00:34:36.835675Z,2.0.0,Parse integers directly from `[u8]` slices in safe code,https://github.com/pacman82/atoi-rs
jni,44131912,11848596,2023-03-15T14:59:48.461767Z,2016-11-08T00:40:20.801845Z,0.21.1,Rust bindings to the JNI,https://github.com/jni-rs/jni-rs
zerofrom-derive,44039243,28932159,2025-02-26T18:21:58.794145Z,2022-04-06T00:39:34.629658Z,0.1.6,Custom derive for the zerofrom crate,https://github.com/unicode-org/icu4x
trust-dns-proto,43840810,3812322,2023-10-23T16:03:22.585328Z,2017-10-03T07:53:48.435005Z,0.23.2,"Trust-DNS is a safe and secure DNS library. This is the foundational DNS protocol library for all Trust-DNS projects.
",https://github.com/bluejekyll/trust-dns
yoke,43599034,27965921,2025-02-26T18:18:43.854151Z,2021-05-01T00:44:23.745711Z,0.8.0,Abstraction allowing borrowed data to be carried along with the backing data it borrows from,https://github.com/unicode-org/icu4x
yoke-derive,43332216,27988528,2025-02-26T18:18:38.537677Z,2021-07-02T19:25:03.408101Z,0.8.0,Custom derive for the yoke crate,https://github.com/unicode-org/icu4x
borsh,43328792,10226201,2025-03-25T10:55:50.325890Z,2019-08-16T23:25:11.928095Z,1.5.7,"Binary Object Representation Serializer for Hashing
",https://github.com/near/borsh-rs
rmp,43136789,10149257,2024-04-17T14:31:54.130496Z,2015-05-15T08:01:56.331764Z,0.8.14,Pure Rust MessagePack serialization implementation,https://github.com/3Hren/msgpack-rust
system-configuration,43034842,15138960,2024-08-22T13:00:37.745969Z,2018-02-01T12:06:51.842395Z,0.6.1,Bindings to SystemConfiguration framework for macOS,https://github.com/mullvad/system-configuration-rs
bytecount,42987788,7685730,2024-04-19T09:46:09.349970Z,2016-09-27T06:50:45.919353Z,0.6.8,"count occurrences of a given byte, or the number of UTF-8 code points, in a byte slice, fast",https://github.com/llogiq/bytecount
system-configuration-sys,42950744,15122168,2024-01-31T13:42:46.487586Z,2018-02-01T12:06:02.133901Z,0.6.0,Low level bindings to SystemConfiguration framework for macOS,https://github.com/mullvad/system-configuration-rs
opentelemetry-semantic-conventions,42843199,10208436,2025-03-22T00:13:00.780397Z,2020-10-16T17:05:58.021210Z,0.29.0,Semantic conventions for OpenTelemetry,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-semantic-conventions
seahash,42581025,8511053,2021-01-16T05:41:31.670788Z,2016-11-07T22:49:51.868295Z,4.1.0,"A blazingly fast, portable hash function with proven statistical guarantees.",https://gitlab.redox-os.org/redox-os/seahash
color_quant,42540271,8835471,2020-10-09T19:17:17.742242Z,2015-05-29T12:14:41.495169Z,1.1.0,Color quantization library to reduce n colors to 256 colors.,https://github.com/image-rs/color_quant.git
schemars,42480394,10052740,2025-02-25T12:19:02.684808Z,2019-08-08T18:03:22.855604Z,1.0.0-alpha.17,Generate JSON Schemas from Rust code,https://github.com/GREsau/schemars
crossterm,42443119,8879358,2025-04-05T15:21:48.500601Z,2018-01-18T22:18:11.132912Z,0.29.0,A crossplatform terminal library for manipulating terminals.,https://github.com/crossterm-rs/crossterm
inotify-sys,42435092,6859553,2021-01-16T09:40:08.828345Z,2017-05-08T15:39:23.442010Z,0.1.5,inotify bindings for the Rust programming language,https://github.com/hannobraun/inotify-sys
schemars_derive,42399114,10031359,2025-02-25T12:18:32.996466Z,2019-08-08T17:52:12.568797Z,1.0.0-alpha.17,"Macros for #[derive(JsonSchema)], for use with schemars",https://github.com/GREsau/schemars
language-tags,42194676,5174402,2021-05-24T17:56:55.679036Z,2015-01-20T18:40:30.661021Z,0.3.2,Language tags for Rust,https://github.com/pyfisch/rust-language-tags
writeable,42154202,27275204,2025-02-26T18:25:13.896478Z,2020-11-12T23:11:03.421547Z,0.6.1,A more efficient alternative to fmt::Display,https://github.com/unicode-org/icu4x
serde_cbor,42142549,6025025,2021-08-15T14:08:47.328110Z,2015-09-29T06:32:15.579869Z,0.11.2,CBOR support for serde.,https://github.com/pyfisch/cbor
icu_locid,42045594,27276959,2024-05-28T19:59:08.218938Z,2020-10-15T15:25:36.105795Z,1.5.0,API for managing Unicode Language and Locale Identifiers,https://github.com/unicode-org/icu4x
ascii,42017831,5351227,2022-09-18T13:04:12.231348Z,2014-11-27T14:19:59.536222Z,1.1.0,"ASCII-only equivalents to `char`, `str` and `String`.",https://github.com/tomprogrammer/rust-ascii
zerovec,42011399,27406021,2025-02-26T18:21:48.875385Z,2021-04-19T18:57:13.970932Z,0.11.1,Zero-copy vector backed by a byte array,https://github.com/unicode-org/icu4x
icu_provider,41604223,27273126,2025-02-26T18:36:20.847603Z,2020-10-15T15:31:04.542638Z,2.0.0-beta2,Trait and struct definitions for the ICU data provider,https://github.com/unicode-org/icu4x
zerovec-derive,41586576,27361086,2025-02-26T18:21:41.649639Z,2021-12-11T07:34:11.602873Z,0.11.1,Custom derive for the zerovec crate,https://github.com/unicode-org/icu4x
icu_provider_macros,41553801,27252107,2024-11-23T02:04:22.406783Z,2021-07-29T23:44:19.749960Z,2.0.0-beta1,Proc macros for ICU data providers,https://github.com/unicode-org/icu4x
notify,41473420,6683911,2025-01-10T14:34:44.890868Z,2014-12-20T07:53:19.303362Z,8.0.0,Cross-platform filesystem notification library,https://github.com/notify-rs/notify.git
config,41135502,8855452,2025-03-12T15:07:15.158921Z,2015-04-16T18:35:56.393987Z,0.15.11,Layered configuration system for Rust applications.,https://github.com/rust-cli/config-rs
miow,41062191,1152685,2023-08-05T19:46:05.681337Z,2015-10-28T16:48:07.632796Z,0.6.0,"A zero overhead I/O library for Windows, focusing on IOCP and async I/O
abstractions.
",https://github.com/yoshuawuyts/miow
icu_locid_transform_data,40952279,27657943,2025-03-26T19:48:00.772138Z,2023-09-23T18:00:16.588584Z,1.5.1,Data for the icu_locid_transform crate,https://github.com/unicode-org/icu4x
borsh-derive,40910355,8508862,2025-03-25T10:55:42.383142Z,2019-08-16T23:24:14.124261Z,1.5.7,"Binary Object Representation Serializer for Hashing
",https://github.com/near/borsh-rs
utf8_iter,40906375,27660047,2023-12-01T17:26:51.542538Z,2022-04-19T08:36:06.371431Z,1.0.4,Iterator by char over potentially-invalid UTF-8 in &[u8],https://github.com/hsivonen/utf8_iter
rusty-fork,40846388,11245736,2020-05-27T01:57:15.210273Z,2018-02-28T00:36:23.803853Z,0.3.0,"Cross-platform library for running Rust tests in sub-processes using a
fork-like interface.
",https://github.com/altsysrq/rusty-fork
rust-ini,40839067,8358184,2024-08-03T15:58:06.257725Z,2015-01-26T04:01:52.645729Z,0.21.1,An Ini configuration file parsing library in Rust,https://github.com/zonyitoo/rust-ini
wasmparser,40804431,6299288,2025-04-01T16:44:45.943946Z,2017-06-02T16:58:49.610864Z,0.228.0,"A simple event-driven library for parsing WebAssembly binary files.
",https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasmparser
unicode_categories,40781909,8089562,2016-10-22T17:57:09.493733Z,2015-10-31T07:05:14.684961Z,0.1.1,Query Unicode category membership for chars,https://github.com/swgillespie/unicode-categories
icu_locid_transform,40595469,27227820,2024-05-28T19:59:38.834167Z,2022-08-05T00:59:01.263313Z,1.5.0,API for Unicode Language and Locale Identifiers canonicalization,https://github.com/unicode-org/icu4x
snafu-derive,40593070,10877271,2024-09-23T15:35:42.866378Z,2019-01-28T03:09:42.780108Z,0.8.5,An ergonomic error handling library,https://github.com/shepmaster/snafu
kv-log-macro,40566836,6439596,2020-07-06T09:42:00.776479Z,2019-09-01T15:56:50.943347Z,1.0.7,Log macro for log's kv-unstable backend.,https://github.com/yoshuawuyts/kv-log-macro
byte-tools,40566087,1460875,2019-01-28T14:52:53.093902Z,2016-10-06T18:00:39.776283Z,0.3.1,Bytes related utility functions,https://github.com/RustCrypto/utils
snafu,40557157,10876349,2024-09-23T15:36:06.089702Z,2019-01-28T03:09:59.593302Z,0.8.5,An ergonomic error handling library,https://github.com/shepmaster/snafu
chrono-tz-build,40502087,8931254,2025-03-24T09:43:55.356894Z,2020-10-09T16:37:20.955109Z,0.4.1,internal build script for chrono-tz,https://github.com/chronotope/chrono-tz
trust-dns-resolver,40387355,3505502,2023-10-23T16:03:53.732289Z,2017-06-28T06:13:43.920832Z,0.23.2,"Trust-DNS is a safe and secure DNS library. This Resolver library  uses the Client library to perform all DNS queries. The Resolver is intended to be a high-level library for any DNS record resolution see Resolver and AsyncResolver for supported resolution types. The Client can be used for other queries.
",https://github.com/bluejekyll/trust-dns
parse-zoneinfo,40386798,7789035,2024-05-02T15:53:25.884665Z,2017-02-11T11:14:54.177109Z,0.3.1,Parse zoneinfo files from the IANA database,https://github.com/chronotope/chrono-tz
der-parser,40381421,10520683,2025-01-21T09:43:38.524624Z,2017-03-02T08:38:50.588643Z,10.0.0,Parser/encoder for ASN.1 BER/DER data,https://github.com/rusticata/der-parser.git
indenter,40337024,7270444,2021-02-22T22:25:54.061995Z,2020-02-27T03:58:19.996247Z,0.3.3,"A formatter wrapper that indents the text, designed for error display impls
",https://github.com/yaahc/indenter
async-global-executor,40145080,6932069,2025-02-26T14:26:42.950567Z,2020-08-27T14:56:53.281420Z,3.1.0,A global executor built on top of async-executor and async-io,https://github.com/Keruspe/async-global-executor
utf16_iter,40140563,27234607,2023-12-01T17:42:42.216648Z,2022-06-13T09:49:27.814111Z,1.0.5,Iterator by char over potentially-invalid UTF-16 in &[u16],https://github.com/hsivonen/utf16_iter
quinn-proto,40105734,14424607,2025-03-18T09:41:15.343315Z,2018-10-02T20:17:22.135216Z,0.11.10,State machine for the QUIC transport protocol,https://github.com/quinn-rs/quinn
write16,40075158,27226640,2022-07-18T13:23:21.837277Z,2022-07-18T13:23:21.837277Z,1.0.0,A UTF-16 analog of the Write trait,https://github.com/hsivonen/write16
handlebars,39986551,6459086,2025-03-16T00:12:12.909234Z,2014-12-27T10:28:20.744395Z,6.3.2,Handlebars templating implemented in Rust.,https://github.com/sunng87/handlebars-rust
rand_distr,39969988,8828549,2025-02-20T12:13:49.430265Z,2019-06-12T09:20:01.272484Z,0.5.1,"Sampling from random number distributions
",https://github.com/rust-random/rand_distr
icu_properties,39831123,27222970,2025-02-26T18:39:20.128197Z,2021-11-02T00:17:19.235475Z,2.0.0-beta2,Definitions for Unicode properties,https://github.com/unicode-org/icu4x
async-std,39819369,6594758,2025-03-15T22:03:29.876947Z,2019-05-30T16:02:17.377461Z,1.13.1,Deprecated in favor of `smol` - Async version of the Rust standard library,https://github.com/async-rs/async-std
gif,39816479,9011327,2024-01-23T17:17:21.634829Z,2015-05-29T14:24:47.796231Z,0.13.1,GIF de- and encoder,https://github.com/image-rs/image-gif
getopts,39757034,5516294,2019-08-19T15:47:50.326738Z,2014-12-13T22:10:14.289738Z,0.2.21,"getopts-like option parsing.
",https://github.com/rust-lang/getopts
matrixmultiply,39695078,8649621,2024-07-27T14:32:50.303402Z,2016-03-28T21:26:28.910493Z,0.3.9,"General matrix multiplication for f32 and f64 matrices. Operates on matrices with general layout (they can use arbitrary row and column stride). Detects and uses AVX or SSE2 on x86 platforms transparently for higher performance. Uses a microkernel strategy, so that the implementation is easy to parallelize and optimize.

Supports multithreading.",https://github.com/bluss/matrixmultiply/
icu_properties_data,39690390,27584213,2025-03-26T19:48:23.370817Z,2023-09-23T18:51:13.162401Z,2.0.0-beta2,Data for the icu_properties crate,https://github.com/unicode-org/icu4x
icu_normalizer_data,39560931,27564983,2025-03-26T19:48:09.614386Z,2023-09-23T18:52:20.250563Z,2.0.0-beta2,Data for the icu_normalizer crate,https://github.com/unicode-org/icu4x
icu_collections,39557261,27177210,2025-02-26T18:36:07.860686Z,2022-08-05T00:53:11.818242Z,2.0.0-beta2,Collection of API for use in ICU libraries.,https://github.com/unicode-org/icu4x
p256,39545630,9676637,2024-09-22T14:48:39.327948Z,2018-10-03T14:56:31.983054Z,0.14.0-pre.2,"Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1)
elliptic curve as defined in SP 800-186, with support for ECDH, ECDSA
signing/verification, and general purpose curve arithmetic
",https://github.com/RustCrypto/elliptic-curves
async-process,39448657,8920800,2024-09-14T21:57:08.737959Z,2019-05-23T06:38:29.864854Z,2.3.0,Async interface for working with processes,https://github.com/smol-rs/async-process
rmp-serde,39433716,9686176,2024-04-30T13:47:27.647844Z,2015-08-24T12:49:26.519905Z,1.3.0,Serde bindings for RMP,https://github.com/3Hren/msgpack-rust
derive_builder_macro,39423399,9722281,2024-10-08T16:54:13.062233Z,2021-01-13T15:15:50.199835Z,0.20.2,Rust macro to automatically implement the builder pattern for arbitrary structs.,https://github.com/colin-kiegel/rust-derive-builder
const_fn,39420670,4136712,2025-01-06T16:47:36.324502Z,2018-12-25T20:13:05.596834Z,0.4.11,"A lightweight attribute for easy generation of const functions with conditional compilations.
",https://github.com/taiki-e/const_fn
icu_normalizer,39378640,27146031,2025-02-26T18:40:31.205771Z,2021-04-29T20:11:06.762323Z,2.0.0-beta2,API for normalizing text into Unicode Normalization Forms,https://github.com/unicode-org/icu4x
infer,39304193,7960586,2025-02-02T01:21:26.316514Z,2019-02-23T00:50:12.520054Z,0.19.0,Small crate to infer file type based on magic number signatures,https://github.com/bojand/infer
secrecy,39263404,10453632,2024-10-09T19:23:36.825181Z,2018-10-04T03:59:35.046194Z,0.10.3,"Wrapper types and traits for secret management which help ensure
they aren't accidentally copied, logged, or otherwise exposed
(as much as possible), and also ensure secrets are securely wiped
from memory when dropped.
",https://github.com/iqlusioninc/crates/tree/main/secrecy
error-chain,39153758,2052545,2020-08-02T17:50:33.565942Z,2016-04-29T01:27:04.929343Z,0.12.4,Yet another error boilerplate library.,https://github.com/rust-lang-nursery/error-chain
prometheus,39114597,4834400,2025-03-27T08:38:33.984372Z,2016-01-22T10:28:34.313551Z,0.14.0,Prometheus instrumentation library for Rust applications.,https://github.com/tikv/rust-prometheus
openssl-src,39037793,8109666,2025-04-08T22:01:19.136079Z,2017-08-29T04:49:53.890414Z,300.5.0+3.5.0,"Source of OpenSSL and logic to build it.
",https://github.com/alexcrichton/openssl-src-rs
eyre,39022676,7184027,2024-01-31T16:44:06.544480Z,2020-02-05T15:38:43.804247Z,0.6.12,Flexible concrete Error Reporting type built on std::error::Error with customizable Reports,https://github.com/eyre-rs/eyre
backoff,38952867,7322390,2021-12-14T21:16:45.606935Z,2017-05-28T08:49:16.062452Z,0.4.0,"Retry operations with exponential backoff policy.
",https://github.com/ihrwein/backoff
x509-parser,38610339,10372087,2025-01-29T10:13:33.277752Z,2018-01-20T17:51:20.124206Z,0.17.0,Parser for the X.509 v3 format (RFC 5280 certificates),https://github.com/rusticata/x509-parser.git
simdutf8,38365799,9887220,2024-09-22T09:18:22.610907Z,2021-04-20T19:11:04.474217Z,0.1.5,SIMD-accelerated UTF-8 validation.,https://github.com/rusticstuff/simdutf8
pulldown-cmark,38331094,4216460,2025-02-12T16:13:01.983822Z,2015-06-04T04:06:59.936973Z,0.13.0,A pull parser for CommonMark,https://github.com/raphlinus/pulldown-cmark
quinn-udp,38104854,14731360,2025-03-25T09:18:12.498305Z,2021-10-07T07:48:11.762234Z,0.5.11,UDP sockets with ECN information for the QUIC transport protocol,https://github.com/quinn-rs/quinn
jpeg-decoder,37932435,6387439,2024-01-13T20:16:58.623429Z,2016-02-13T21:57:24.620735Z,0.3.1,JPEG decoder,https://github.com/image-rs/jpeg-decoder
ptr_meta_derive,37904426,10678718,2024-09-11T05:38:27.112873Z,2021-02-03T17:57:18.080611Z,0.3.0,Proc macros for ptr_meta,https://github.com/rkyv/ptr_meta
ptr_meta,37902506,10679335,2024-09-11T05:38:40.060589Z,2021-02-03T17:59:03.776364Z,0.3.0,A radioactive stabilization of the ptr_meta rfc,https://github.com/rkyv/ptr_meta
widestring,37861850,5779635,2025-03-15T21:57:47.030927Z,2016-01-25T09:03:34.077126Z,1.2.0,"A wide string Rust library for converting to and from wide strings, such as those often used in Windows API or other FFI libaries. Both `u16` and `u32` string types are provided, including support for UTF-16 and UTF-32, malformed encoding, C-style strings, etc.",https://github.com/starkat99/widestring-rs
snap,37840310,7439310,2023-12-05T13:10:51.661359Z,2016-08-02T03:06:33.334539Z,1.1.1,"A pure Rust implementation of the Snappy compression algorithm. Includes
streaming compression and decompression.
",https://github.com/BurntSushi/rust-snappy
oid-registry,37788745,10446999,2025-02-10T12:58:00.890947Z,2020-10-26T09:00:11.245782Z,0.8.1,Object Identifier (OID) database,https://github.com/rusticata/oid-registry.git
quinn,37775407,14379863,2025-03-18T09:41:37.623888Z,2018-10-02T20:18:56.824108Z,0.11.7,Versatile QUIC transport protocol implementation,https://github.com/quinn-rs/quinn
rawpointer,37721433,7769299,2019-09-12T07:51:36.405018Z,2016-12-15T11:20:57.558650Z,0.2.1,"Extra methods for raw pointers and `NonNull<T>`.

For example `.post_inc()` and `.pre_dec()` (c.f. `ptr++` and `--ptr`),
`offset` and `add` for `NonNull<T>`, and the function `ptrdistance`.
",https://github.com/bluss/rawpointer/
dotenvy,37463626,9087242,2023-03-22T16:04:41.028594Z,2022-02-28T19:06:25.238818Z,0.15.7,A well-maintained fork of the dotenv crate,https://github.com/allan2/dotenvy
arbitrary,37178580,10608808,2024-11-05T17:09:54.366451Z,2017-05-08T05:52:54.904092Z,1.4.1,The trait for generating structured data from unstructured data,https://github.com/rust-fuzz/arbitrary/
hdrhistogram,37009485,8773057,2023-11-18T13:08:34.346868Z,2015-07-07T20:58:59.521601Z,7.5.4,A port of HdrHistogram to Rust,https://github.com/HdrHistogram/HdrHistogram_rust.git
lexical-util,36924268,8787171,2024-12-09T20:44:05.614911Z,2021-09-03T05:05:47.942062Z,1.0.6,Shared utilities for lexical creates.,https://github.com/Alexhuszagh/rust-lexical
lexical-parse-integer,36894457,8784830,2024-12-08T21:00:01.965623Z,2021-09-03T05:06:17.843690Z,1.0.5,Efficient parsing of integers from strings.,https://github.com/Alexhuszagh/rust-lexical
lexical-parse-float,36882989,8784077,2024-12-08T21:00:27.530805Z,2021-09-03T05:06:46.664679Z,1.0.5,Efficient parsing of floats from strings.,https://github.com/Alexhuszagh/rust-lexical
weezl,36867760,9229631,2024-01-22T05:51:01.270902Z,2020-06-29T10:53:19.555239Z,0.1.8,Fast LZW compression and decompression.,https://github.com/image-rs/lzw
assert-json-diff,36800899,9929363,2022-06-29T21:40:34.607604Z,2018-10-17T08:08:13.861112Z,2.0.2,Easily compare two JSON values and get great output,https://github.com/davidpdrsn/assert-json-diff.git
bytes-utils,36752347,6708558,2023-11-17T14:26:14.682124Z,2021-01-22T19:45:42.248518Z,0.1.4,Additional utilities for working with the bytes crate,https://github.com/vorner/bytes-utils
errno-dragonfly,36699172,1629321,2021-09-27T08:59:29.274682Z,2017-07-10T18:46:44.469870Z,0.1.2,Exposes errno functionality to stable Rust on DragonFlyBSD,https://github.com/mneumann/errno-dragonfly-rs
ntapi,36562161,5176142,2023-04-20T23:14:01.046654Z,2018-09-11T16:14:17.942528Z,0.4.1,FFI bindings for Native API,https://github.com/MSxDOS/ntapi
rust_decimal,36513925,7421319,2025-03-22T15:13:38.065133Z,2016-11-16T16:31:13.547828Z,1.37.1,Decimal number implementation written in pure Rust suitable for financial and fixed-precision calculations.,https://github.com/paupino/rust-decimal
idna_adapter,36265671,27178145,2024-12-12T08:06:55.855680Z,2024-07-03T12:10:46.447319Z,1.2.0,Back end adapter for idna,https://github.com/hsivonen/idna_adapter
rusticata-macros,36249573,9872448,2025-03-17T13:13:23.909969Z,2017-02-20T20:19:04.799102Z,5.0.0,Helper macros for Rusticata,https://github.com/rusticata/rusticata-macros.git
bs58,36095972,4913357,2024-03-19T12:50:23.529199Z,2016-11-02T21:08:38.185278Z,0.5.1,Another Base58 codec implementation.,https://github.com/Nullus157/bs58-rs
xmlparser,35932130,6285720,2023-09-30T15:21:25.478529Z,2017-12-15T14:09:53.052102Z,0.13.6,"Pull-based, zero-allocation XML parser.",https://github.com/RazrFalcon/xmlparser
actix-rt,35892827,5112753,2024-06-09T17:07:18.593667Z,2018-12-11T16:27:02.597949Z,2.10.0,Tokio-based single-threaded async runtime for the Actix ecosystem,https://github.com/actix/actix-net
integer-encoding,35838452,6621897,2024-08-01T15:30:37.323715Z,2016-06-05T16:49:34.555312Z,4.0.2,varint+zigzag and fixedint integer encoding/decoding (https://developers.google.com/protocol-buffers/docs/encoding),https://github.com/dermesser/integer-encoding-rs
option-ext,35669010,9184910,2023-01-11T19:28:05.598091Z,2022-01-17T16:08:41.833631Z,0.2.0,Extends `Option` with additional operations,https://github.com/soc/option-ext.git
futures-intrusive,35538091,7916387,2022-11-04T06:14:20.712105Z,2019-05-22T05:49:33.423930Z,0.5.0,"Futures based on intrusive data structures - for std and no-std environments.
",https://github.com/Matthias247/futures-intrusive
failure,35512756,1164906,2020-05-02T18:13:11.746367Z,2017-10-08T21:02:37.136531Z,0.1.8,Experimental error handling abstraction.,https://github.com/rust-lang-nursery/failure
rkyv,35416745,8311157,2025-01-22T17:52:21.712456Z,2020-11-11T16:36:21.012106Z,0.8.10,Zero-copy deserialization framework for Rust,https://github.com/rkyv/rkyv
rkyv_derive,35409976,8307311,2025-01-22T17:52:07.993259Z,2020-11-11T16:14:18.106933Z,0.8.10,Derive macro for rkyv,https://github.com/rkyv/rkyv
const_format,35054672,8965521,2024-12-06T21:10:12.913219Z,2020-08-17T03:38:43.263493Z,0.2.34,Compile-time string formatting,https://github.com/rodrimati1992/const_format_crates/
shell-words,35025992,6672061,2022-02-06T20:41:07.732312Z,2018-03-09T12:52:15.094104Z,1.1.0,Process command line according to parsing rules of UNIX shell,https://github.com/tmiasko/shell-words
fake-simd,35004115,809334,2016-12-25T02:41:39.196656Z,2016-10-07T10:30:52.420542Z,0.1.2,Crate for mimicking simd crate on stable Rust,https://github.com/RustCrypto/utils
const_format_proc_macros,34960873,8956322,2024-12-06T21:09:55.439685Z,2020-08-19T02:34:40.789983Z,0.2.34,Implementation detail of the `const_format` crate,https://github.com/rodrimati1992/const_format_crates/
serde-value,34937732,8036798,2020-07-17T18:20:27.889805Z,2016-01-04T05:31:23.189001Z,0.7.0,Serialization value trees,https://github.com/arcnmx/serde-value
piper,34812993,11228858,2024-08-10T23:23:30.294361Z,2020-02-09T03:05:27.335714Z,0.2.4,"Async pipes, channels, mutexes, and more.",https://github.com/smol-rs/piper
serde_qs,34707206,7321649,2025-03-04T21:41:48.339569Z,2017-03-12T19:35:23.156845Z,0.14.0,Querystrings for Serde,https://github.com/samscott89/serde_qs
asn1-rs,34698206,10577146,2025-03-17T09:24:03.874804Z,2021-07-06T14:18:16.184256Z,0.7.1,Parser/encoder for ASN.1 BER/DER data,https://github.com/rusticata/asn1-rs.git
gethostname,34680664,7003429,2025-03-25T12:27:18.030891Z,2019-01-20T18:20:36.505189Z,1.0.1,gethostname for all platforms,https://github.com/swsnr/gethostname.rs.git
fdeflate,34656806,10124988,2024-12-06T03:16:12.038530Z,2022-12-23T08:20:45.945441Z,0.3.7,Fast specialized deflate implementation,https://github.com/image-rs/fdeflate
actix-web,34464154,5044418,2025-03-10T04:52:19.400006Z,2017-10-23T23:08:29.260260Z,4.10.2,"Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust",https://github.com/actix/actix-web
asn1-rs-derive,34458646,10536522,2025-01-16T16:52:21.067659Z,2022-01-27T15:38:56.488532Z,0.6.0,Derive macros for the `asn1-rs` crate,https://github.com/rusticata/asn1-rs.git
bytecheck_derive,34393645,7627662,2025-02-08T16:31:11.978016Z,2020-11-14T19:41:36.230925Z,0.8.1,Derive macro for bytecheck,https://github.com/rkyv/bytecheck
bytecheck,34386474,7628420,2025-02-08T16:31:24.910933Z,2020-11-14T19:42:05.230649Z,0.8.1,Memory validation framework for Rust,https://github.com/rkyv/bytecheck
sqlx-core,34298908,7818981,2025-01-04T04:29:40.394086Z,2019-11-27T06:24:33.159543Z,0.8.3,"Core of SQLx, the rust SQL toolkit. Not intended to be used directly.",https://github.com/launchbadge/sqlx
safemem,34261654,1394556,2019-10-22T03:54:11.474305Z,2016-09-10T02:34:44.350724Z,0.3.3,"Safe wrappers for memory-accessing functions, like `std::ptr::copy()`.",https://github.com/abonander/safemem
sqlx,34212381,7770041,2025-01-04T04:31:04.316014Z,2019-06-06T23:42:00.933224Z,0.8.3,"ð§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, and SQLite.",https://github.com/launchbadge/sqlx
cxxbridge-macro,34187548,5639756,2025-04-08T00:59:18.985719Z,2020-01-08T16:51:00.546848Z,1.0.156,Implementation detail of the `cxx` crate.,https://github.com/dtolnay/cxx
cxx,34112745,5638956,2025-04-08T00:59:29.801823Z,2019-12-28T02:59:21.893783Z,1.0.156,Safe interop between Rust and C++,https://github.com/dtolnay/cxx
sqlx-macros,33982287,7720451,2025-01-04T04:30:39.947454Z,2019-11-27T06:24:30.686963Z,0.8.3,"Macros for SQLx, the rust SQL toolkit. Not intended to be used directly.",https://github.com/launchbadge/sqlx
actix-http,33945551,5006731,2025-03-10T03:53:03.936802Z,2019-03-28T19:50:22.257203Z,3.10.0,HTTP types and services for the Actix ecosystem,https://github.com/actix/actix-web
lexical-write-float,33916580,6701803,2024-12-08T20:59:47.876201Z,2021-09-03T05:06:32.199635Z,1.0.5,Efficient formatting of floats to strings.,https://github.com/Alexhuszagh/rust-lexical
lz4-sys,33882944,8912180,2024-09-26T11:51:34.999693Z,2016-11-26T20:22:03.426256Z,1.11.1+lz4-1.10.0,Rust LZ4 sys package.,https://github.com/10xGenomics/lz4-rs
opentelemetry-http,33866928,9197409,2025-03-22T00:12:41.160061Z,2021-01-22T01:47:24.838272Z,0.29.0,"Helper implementations for sending HTTP requests. Uses include propagating and extracting context over http, exporting telemetry, requesting sampling strategies.",https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-http
lexical-write-integer,33849433,6701817,2024-12-08T20:59:32.163253Z,2021-09-03T05:06:00.338107Z,1.0.5,Efficient formatting of integers to strings.,https://github.com/Alexhuszagh/rust-lexical
opentelemetry-otlp,33846970,7888504,2025-03-22T00:14:48.053701Z,2020-08-14T02:49:26.002779Z,0.29.0,Exporter for the OpenTelemetry Collector,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-otlp
maybe-uninit,33827214,1510395,2019-07-10T13:41:31.043470Z,2019-07-09T02:54:23.855805Z,2.0.0,MaybeUninit for friends of backwards compatibility,https://github.com/est31/maybe-uninit
sqlformat,33788812,5540369,2025-01-13T23:24:00.632204Z,2020-04-18T23:00:30.535387Z,0.3.5,Formats whitespace in a SQL string to make it easier to read,https://github.com/shssoichiro/sqlformat-rs
cxxbridge-flags,33760105,5539257,2025-04-08T00:58:57.552920Z,2020-08-30T19:11:14.887567Z,1.0.156,Compiler configuration of the `cxx` crate (implementation detail),https://github.com/dtolnay/cxx
rend,33741322,7362348,2024-10-10T22:58:02.496159Z,2021-05-03T04:50:08.311160Z,0.5.2,"Cross-platform, endian-aware primitives for Rust",https://github.com/djkoloski/rend
aws-smithy-http,33722401,6796932,2025-03-10T15:45:51.651748Z,2021-10-20T22:41:52.345829Z,0.62.0,Smithy HTTP logic for smithy-rs.,https://github.com/smithy-lang/smithy-rs
unarray,33680274,11615195,2022-11-30T17:09:42.916530Z,2022-06-05T00:07:57.377068Z,0.1.4,Utilities for working with uninitialized arrays,https://github.com/cameron1024/unarray
inventory,33599895,9931606,2025-03-03T23:40:59.402157Z,2015-07-22T19:31:19.081684Z,0.3.20,Typed distributed plugin registration,https://github.com/dtolnay/inventory
aws-smithy-types,33567856,6363523,2025-03-10T15:43:17.880566Z,2021-10-20T22:24:37.967351Z,1.3.0,Types for smithy-rs codegen.,https://github.com/smithy-lang/smithy-rs
fs2,33452228,3741547,2018-01-06T20:18:30.565584Z,2015-09-02T04:59:26.926644Z,0.4.3,Cross-platform file locks and file duplication.,https://github.com/danburkert/fs2-rs
rand_isaac,33382737,2051844,2025-01-27T14:40:17.354946Z,2018-10-17T10:09:32.428249Z,0.4.0,"ISAAC random number generator
",https://github.com/rust-random/rngs
actix-codec,33382702,4883451,2024-01-30T22:15:31.971530Z,2018-12-11T16:11:24.789455Z,0.5.2,Codec utilities for working with framed protocols,https://github.com/actix/actix-net
aws-smithy-json,33341875,7008593,2025-03-10T15:43:59.801756Z,2021-10-20T22:55:41.104501Z,0.61.3,Token streaming JSON parser for smithy-rs.,https://github.com/smithy-lang/smithy-rs
link-cplusplus,33316020,5544628,2025-03-03T23:43:53.163395Z,2020-01-24T23:19:30.309958Z,1.0.10,Link libstdc++ or libc++ automatically or manually,https://github.com/dtolnay/link-cplusplus
actix-macros,33294675,4957017,2023-07-19T22:54:08.231118Z,2019-12-01T14:11:37.045433Z,0.2.4,Macros for Actix system and runtime,https://github.com/actix/actix-net.git
failure_derive,33219180,1091494,2020-05-02T18:13:57.357775Z,2017-11-11T00:12:56.159388Z,0.1.8,derives for the failure crate,https://github.com/rust-lang-nursery/failure
outref,33168073,7952590,2025-01-15T09:06:04.205242Z,2022-07-22T14:49:20.508197Z,0.5.2,Out reference,https://github.com/Nugine/outref
env_filter,33166369,14313917,2024-12-20T16:22:48.705884Z,2024-01-19T18:00:00.886437Z,0.1.3,"Filter log events using environment variables
",https://github.com/rust-cli/env_logger
rand_os,33146342,2002201,2019-08-28T14:24:22.432373Z,2019-01-04T11:31:17.691682Z,0.2.2,OS backed Random Number Generator,https://github.com/rust-random/rand
fallible-streaming-iterator,33137978,5254008,2018-05-02T20:02:49.746627Z,2016-12-17T05:15:07.551663Z,0.1.9,Fallible streaming iteration,https://github.com/sfackler/fallible-streaming-iterator
triomphe,33058286,7044227,2024-10-07T04:02:22.368103Z,2018-12-05T15:12:01.422998Z,0.1.14,A fork of std::sync::Arc with some extra functionality and without weak references (originally servo_arc),https://github.com/Manishearth/triomphe
jni-sys,33019304,7466568,2023-09-25T21:30:35.551409Z,2016-02-26T06:37:49.528984Z,0.4.0,Rust definitions corresponding to jni.h,https://github.com/jni-rs/jni-sys
actix-utils,32996275,4858529,2022-10-21T02:16:28.434701Z,2018-12-11T16:41:30.670256Z,3.0.1,Various utilities used in the Actix ecosystem,https://github.com/actix/actix-net
dlv-list,32924613,8085808,2024-11-17T07:31:26.465286Z,2018-10-08T01:05:11.539060Z,0.6.0,Semi-doubly linked list implemented using a vector,https://github.com/sgodwincs/dlv-list-rs
aws-sigv4,32919836,6321720,2025-03-11T21:50:48.934961Z,2020-04-10T18:03:29.975826Z,1.3.0,SigV4 signer for HTTP requests and Event Stream messages.,https://github.com/smithy-lang/smithy-rs
actix-server,32794867,4927148,2025-03-08T17:33:21.352187Z,2018-12-11T16:44:34.322212Z,2.5.1,General purpose TCP server built for the Actix ecosystem,https://github.com/actix/actix-net/tree/master/actix-server
multer,32762583,7233047,2024-05-04T01:46:11.282005Z,2020-05-10T14:08:30.572077Z,3.1.0,An async parser for `multipart/form-data` content-type in Rust.,https://github.com/rwf2/multer
aws-smithy-async,32752390,6284384,2025-03-10T15:43:06.566506Z,2021-10-20T22:39:36.330689Z,1.2.5,Async runtime agnostic abstractions for smithy-rs.,https://github.com/smithy-lang/smithy-rs
hash32,32732450,7067174,2022-08-09T13:44:28.945620Z,2018-04-23T17:20:16.808083Z,0.3.1,32-bit hashing algorithms,https://github.com/japaric/hash32
aws-types,32652655,6270735,2025-03-11T21:51:44.970245Z,2021-10-20T22:42:56.466587Z,1.3.6,Cross-service types for the AWS SDK.,https://github.com/smithy-lang/smithy-rs
actix-service,32583448,4873361,2025-03-09T17:57:51.688174Z,2018-12-09T18:06:41.389362Z,2.0.3,Service trait and combinators for representing asynchronous request/response operations.,https://github.com/actix/actix-net
lz4_flex,32546581,7821493,2024-03-30T03:20:21.213232Z,2020-10-18T12:54:23.855597Z,0.11.3,"Fastest LZ4 implementation in Rust, no unsafe by default.",https://github.com/pseitz/lz4_flex
nodrop,32535564,2407848,2019-10-09T07:33:37.389023Z,2015-05-21T09:53:29.753562Z,0.1.14,"A wrapper type to inhibit drop (destructor).

***Deprecated: Use ManuallyDrop or MaybeUninit instead!***
",https://github.com/bluss/arrayvec
actix-router,32368238,4863633,2024-05-19T11:16:59.449105Z,2019-03-09T22:39:40.250434Z,0.5.3,Resource path matching and router,https://github.com/actix/actix-web
wasm-streams,32235961,10765540,2024-10-25T13:00:49.666818Z,2020-06-14T22:04:33.007556Z,0.4.2,"Bridging between web streams and Rust streams using WebAssembly
",https://github.com/MattiasBuelens/wasm-streams/
base64-simd,32202380,7311340,2022-12-28T03:07:32.705641Z,2021-12-31T09:20:06.544275Z,0.8.0,SIMD-accelerated base64 encoding and decoding,https://github.com/Nugine/simd
actix-web-codegen,32179526,4855174,2024-06-08T23:24:23.437523Z,2019-03-28T20:13:19.911291Z,4.3.0,Routing and runtime macros for Actix Web,https://github.com/actix/actix-web
asn1-rs-impl,32050794,10137056,2024-02-23T08:38:59.472174Z,2022-01-07T12:00:31.263414Z,0.2.0,Implementation details for the `asn1-rs` crate,https://github.com/rusticata/asn1-rs.git
ordered-multimap,31988857,8059728,2024-04-01T10:34:17.349186Z,2018-11-17T22:28:51.467238Z,0.7.3,Insertion ordered multimap,https://github.com/sgodwincs/ordered-multimap-rs
bytestring,31973127,4974119,2024-11-24T01:36:58.169687Z,2019-12-07T05:03:17.279001Z,1.4.0,A UTF-8 encoded read-only string using `Bytes` as storage,https://github.com/actix/actix-net
ron,31969600,8619057,2025-04-08T07:02:24.205823Z,2017-07-30T18:52:31.572953Z,0.10.1,Rusty Object Notation,https://github.com/ron-rs/ron
deadpool,31878834,9458675,2025-02-02T17:55:15.790291Z,2019-11-14T12:49:50.684130Z,0.12.2,Dead simple async pool,https://github.com/bikeshedder/deadpool
aws-sdk-sts,31784440,6149751,2025-03-28T19:05:52.474822Z,2021-05-08T02:52:41.470351Z,1.65.0,AWS SDK for AWS Security Token Service,https://github.com/awslabs/aws-sdk-rust
rand_jitter,31760921,1967660,2025-01-27T14:40:27.039041Z,2019-01-25T09:53:44.828929Z,0.5.0,Random number generator based on timing jitter,https://github.com/rust-random/rngs
windows-result,31721645,19108750,2025-03-18T14:25:29.257932Z,2024-02-02T16:47:12.691453Z,0.3.2,Windows error handling,https://github.com/microsoft/windows-rs
aws-smithy-xml,31692319,5975664,2024-09-09T16:00:34.192582Z,2021-10-20T23:52:53.560509Z,0.60.9,XML parsing logic for Smithy protocols.,https://github.com/smithy-lang/smithy-rs
typed-builder,31621614,7094788,2025-03-20T11:43:37.134151Z,2017-10-04T23:49:38.955558Z,0.21.0,Compile-time type-checked builder derive,https://github.com/idanarye/rust-typed-builder
thrift,31580867,6095455,2022-11-14T01:43:24.276250Z,2017-04-10T20:06:33.767390Z,0.17.0,Rust bindings for the Apache Thrift RPC system,https://github.com/apache/thrift/tree/master/lib/rs
os_pipe,31525644,5533753,2024-08-01T21:02:02.296411Z,2016-07-12T16:41:51.109567Z,1.2.1,a cross-platform library for opening OS pipes,https://github.com/oconnor663/os_pipe.rs
cesu8,31488385,7363115,2016-05-15T12:20:41.086989Z,2014-12-07T17:43:28.641160Z,1.1.0,Convert to and from CESU-8 encoding (similar to UTF-8),https://github.com/emk/cesu8-rs
ouroboros,31406797,5940332,2025-01-11T04:16:42.134017Z,2020-09-20T00:54:06.963212Z,0.18.5,"Easy, safe self-referential struct generation.",https://github.com/someguynamedjosh/ouroboros
bigdecimal,31362455,7093173,2025-04-01T04:18:08.395802Z,2017-04-05T23:48:11.922233Z,0.4.8,Arbitrary precision decimal numbers,https://github.com/akubera/bigdecimal-rs
aws-config,31361628,6089534,2025-03-27T19:15:04.309970Z,2021-10-21T20:08:43.344710Z,1.6.1,AWS SDK config and credential provider implementations.,https://github.com/smithy-lang/smithy-rs
psm,31336708,6766857,2025-02-14T12:00:36.565835Z,2018-12-29T17:52:03.479403Z,0.1.25,Portable Stack Manipulation: stack manipulation and introspection routines,https://github.com/rust-lang/stacker/
cxx-build,31323131,5323365,2025-04-08T00:59:07.144177Z,2020-04-30T01:59:02.039905Z,1.0.156,C++ code generator for integrating `cxx` crate into a Cargo build.,https://github.com/dtolnay/cxx
opentelemetry-proto,31266139,8111492,2025-03-22T00:14:17.935511Z,2022-09-13T02:34:50.358356Z,0.29.0,Protobuf generated files and transformations.,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-proto
ouroboros_macro,31110444,5917208,2025-01-11T04:16:12.258915Z,2020-09-20T00:53:05.914063Z,0.18.5,Proc macro for ouroboros crate.,https://github.com/someguynamedjosh/ouroboros
proc-macro-nested,31109224,338445,2021-01-13T22:57:37.841784Z,2018-11-18T10:20:51.180158Z,0.1.7,Support for nested proc-macro-hack invocations,https://github.com/dtolnay/proc-macro-hack
password-hash,30899363,4886095,2024-07-27T20:02:54.918513Z,2020-08-18T19:09:14.097687Z,0.6.0-rc.0,"Traits which describe the functionality of password hashing algorithms,
as well as a `no_std`-friendly implementation of the PHC string format
(a well-defined subset of the Modular Crypt Format a.k.a. MCF)
",https://github.com/RustCrypto/traits
aws-smithy-query,30750788,5814105,2024-03-12T19:43:09.525858Z,2021-10-20T22:55:41.130772Z,0.60.7,AWSQuery and EC2Query Smithy protocol logic for smithy-rs.,https://github.com/smithy-lang/smithy-rs
standback,30729965,1335444,2022-04-07T02:00:50.674122Z,2020-03-06T02:10:24.334925Z,0.4.4,"New standard library, old compiler.",https://github.com/jhpratt/standback
rand_xoshiro,30694642,4749563,2025-01-27T14:40:47.431340Z,2019-01-04T12:34:17.089290Z,0.7.0,"Xoshiro, xoroshiro and splitmix64 random number generators",https://github.com/rust-random/rngs
tiff,30634749,4948210,2024-01-13T20:07:29.470798Z,2018-06-18T11:58:21.121540Z,0.9.1,TIFF decoding and encoding library in pure Rust,https://github.com/image-rs/image-tiff
gloo-timers,30476984,6371654,2023-08-11T16:04:38.773701Z,2019-09-13T11:49:44.838113Z,0.3.0,Convenience crate for working with JavaScript timers,https://github.com/rustwasm/gloo/tree/master/crates/timers
unreachable,30399690,1637977,2017-05-09T20:54:44.587632Z,2015-06-02T22:21:46.648713Z,1.0.0,An unreachable code optimization hint in stable rust.,https://github.com/reem/rust-unreachable.git
bytemuck_derive,30386852,6360611,2025-03-27T20:55:26.887571Z,2020-08-21T01:46:55.033861Z,1.9.3,derive proc-macros for `bytemuck`,https://github.com/Lokathor/bytemuck
scratch,30318070,5077486,2025-03-04T00:14:25.972077Z,2020-09-17T05:19:17.837573Z,1.0.8,Compile-time temporary directory shared by multiple crates and erased by `cargo clean`,https://github.com/dtolnay/scratch
time-macros-impl,30312129,1300676,2021-06-13T00:45:01.234186Z,2020-01-17T03:55:27.689640Z,0.1.2,Procedural macros for the time crate.,https://github.com/time-rs/time
clap_complete,30213378,5868472,2025-03-19T21:29:16.773334Z,2021-12-31T18:24:25.813971Z,4.5.47,Generate shell completion scripts for your clap::Command,https://github.com/clap-rs/clap
unicode-linebreak,30041906,6792007,2023-07-25T11:49:38.560848Z,2018-12-10T20:45:01.729575Z,0.1.5,Implementation of the Unicode Line Breaking Algorithm,https://github.com/axelf4/unicode-linebreak
metrics,30027340,6383381,2024-11-26T15:23:35.549016Z,2015-09-03T22:02:07.047796Z,0.24.1,A lightweight metrics facade.,https://github.com/metrics-rs/metrics
cpp_demangle,29996777,6665576,2024-08-28T18:12:11.171746Z,2016-12-11T23:40:24.693468Z,0.4.4,A crate for demangling C++ symbols,https://github.com/gimli-rs/cpp_demangle
nanorand,29886121,6094140,2022-03-09T00:47:47.205896Z,2020-09-06T02:01:21.666498Z,0.7.0,"A tiny, fast, zero-dep library for random number generation.",https://github.com/Absolucy/nanorand-rs
regex-lite,29865629,10168388,2024-06-09T11:41:06.428247Z,2023-02-28T19:28:27.939514Z,0.1.6,"A lightweight regex engine that optimizes for binary size and compilation time.
",https://github.com/rust-lang/regex/tree/master/regex-lite
aws-sdk-sso,29857835,5740294,2025-03-28T19:04:59.940452Z,2021-05-07T21:38:03.548250Z,1.64.0,AWS SDK for AWS Single Sign-On,https://github.com/awslabs/aws-sdk-rust
curve25519-dalek-derive,29661326,9862453,2023-10-31T17:58:09.620431Z,2023-06-24T03:16:30.221231Z,0.1.1,curve25519-dalek Derives,https://github.com/dalek-cryptography/curve25519-dalek
bytesize,29637239,5041997,2025-03-31T06:28:27.893646Z,2015-04-19T04:55:38.917419Z,2.0.1,an utility for human-readable bytes representations,https://github.com/bytesize-rs/bytesize/
atomic,29429152,5020882,2023-07-29T00:03:01.944006Z,2016-03-30T15:37:44.649798Z,0.6.0,Generic Atomic<T> wrapper type,https://github.com/Amanieu/atomic-rs
smawk,29415590,6026444,2023-09-17T20:46:37.049294Z,2018-08-07T20:23:20.055686Z,0.3.2,Functions for finding row-minima in a totally monotone matrix.,https://github.com/mgeisler/smawk
web-time,29388308,14699030,2024-03-01T10:51:46.373917Z,2023-03-27T06:32:32.213777Z,1.1.0,Drop-in replacement for std::time for Wasm in browsers,https://github.com/daxpedda/web-time
comfy-table,29176242,7120314,2025-02-07T20:10:46.003995Z,2020-01-19T19:39:43.902087Z,7.1.4,An easy to use library for building beautiful tables with automatic content wrapping,https://github.com/nukesor/comfy-table
rusqlite,29163134,4344182,2025-03-05T17:35:38.432966Z,2014-11-21T14:53:31.345189Z,0.34.0,Ergonomic wrapper for SQLite,https://github.com/rusqlite/rusqlite
string_cache_codegen,29063516,3661672,2025-02-20T12:44:04.277085Z,2016-10-28T15:22:43.684874Z,0.5.4,"A codegen library for string-cache, developed as part of the Servo project.",https://github.com/servo/string-cache
rgb,29022367,6771654,2024-08-31T03:07:05.678857Z,2016-06-18T17:02:02.336922Z,0.8.90-alpha.2,"`struct RGB/RGBA/etc.` for sharing pixels between crates + convenience methods for color manipulation.
Allows no-copy high-level interoperability. Also adds common convenience methods and implements standard Rust traits to make `RGB`/`RGBA` pixels and slices first-class Rust objects.",https://github.com/kornelski/rust-rgb
enumflags2,29002807,5182209,2025-01-17T05:21:22.311318Z,2019-01-29T21:27:53.371250Z,0.7.11,Enum-based bit flags,https://github.com/meithecatte/enumflags2
quickcheck,28989828,4484382,2021-01-15T12:44:44.590509Z,2014-11-21T00:20:47.094295Z,1.0.3,Automatic property based testing with shrinking.,https://github.com/BurntSushi/quickcheck
curl-sys,28956655,2775577,2025-02-17T12:12:24.103340Z,2014-12-12T20:33:25.230500Z,0.4.80+curl-8.12.1,Native bindings to the libcurl library,https://github.com/alexcrichton/curl-rust
enumflags2_derive,28943849,5178695,2025-01-17T05:21:11.225531Z,2019-01-29T21:27:19.198123Z,0.7.11,"Do not use directly, use the reexport in the `enumflags2` crate. This allows for better compatibility across versions.",https://github.com/meithecatte/enumflags2
fs-err,28937959,6793282,2025-01-21T21:01:45.321915Z,2020-02-02T22:11:52.276259Z,3.1.0,A drop-in replacement for std::fs with more helpful error messages.,https://github.com/andrewhickman/fs-err
globwalk,28864509,5844076,2024-01-06T20:53:34.390377Z,2018-02-20T19:15:22.386402Z,0.9.1,Glob-matched recursive file system walking.,https://github.com/gilnaa/globwalk
rstest,28637775,6395340,2025-03-02T17:03:59.710515Z,2018-10-14T20:13:18.549988Z,0.25.0,"Rust fixture based test framework. It use procedural macro
to implement fixtures and table based tests.
",https://github.com/la10736/rstest
redis,28603569,7593401,2025-04-06T18:29:50.674108Z,2014-11-21T15:32:46.563387Z,0.29.5,Redis driver for Rust.,https://github.com/redis-rs/redis-rs
cfg-expr,28544220,4358722,2025-04-03T11:35:05.105630Z,2020-01-09T17:16:21.632089Z,0.19.0,A parser and evaluator for Rust `cfg()` expressions.,https://github.com/EmbarkStudios/cfg-expr
axum-macros,28540076,10437967,2025-01-01T10:10:47.779135Z,2021-08-21T16:54:10.664975Z,0.5.0,Macros for axum,https://github.com/tokio-rs/axum
leb128,28493930,3667540,2021-10-04T18:50:22.284194Z,2016-06-13T21:36:16.082670Z,0.2.5,"Read and write DWARF's ""Little Endian Base 128"" (LEB128) variable length integer encoding.",https://github.com/gimli-rs/leb128
assert_matches,28329427,3790610,2021-02-05T04:16:48.301552Z,2016-02-16T20:12:56.686430Z,1.5.0,Asserts that a value matches a pattern,https://github.com/murarth/assert_matches
blake2b_simd,28196113,4659276,2025-02-04T19:25:34.339206Z,2018-08-12T07:17:52.808085Z,1.0.3,a pure Rust BLAKE2b implementation with dynamic SIMD,https://github.com/oconnor663/blake2_simd
typed-arena,28165796,5036904,2023-01-09T06:53:08.531421Z,2015-04-10T16:54:43.348496Z,2.0.2,"The arena, a fast but limited type of allocator",https://github.com/SimonSapin/rust-typed-arena
tikv-jemalloc-sys,28159756,7976569,2024-07-14T15:39:53.008485Z,2020-07-21T11:43:42.741205Z,0.6.0+5.3.0-1-ge13ca993e8ccb9ba9847cc330696e02839f328f7,"Rust FFI bindings to jemalloc
",https://github.com/tikv/jemallocator
tempdir,28153237,3397907,2018-03-21T07:46:03.078845Z,2015-02-22T00:27:07.951648Z,0.3.7,"A library for managing a temporary directory and deleting all contents when it's
dropped.
",https://github.com/rust-lang/tempdir
crc32c,28129978,6365454,2024-06-09T17:15:44.323361Z,2017-09-15T15:21:20.021596Z,0.6.8,Safe implementation for hardware accelerated CRC32C instructions with software fallback,https://github.com/zowens/crc32c
poly1305,28101809,3975267,2024-07-26T21:05:19.712986Z,2016-10-06T21:34:24.248885Z,0.9.0-rc.0,The Poly1305 universal hash function and message authentication code,https://github.com/RustCrypto/universal-hashes
chacha20,28031676,3792441,2025-01-28T23:06:56.507693Z,2016-10-06T21:11:22.073136Z,0.10.0-pre.3,"The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits
from the RustCrypto `cipher` crate, with optional architecture-specific
hardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12,
XChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional
rand_core-compatible RNGs based on those ciphers.
",https://github.com/RustCrypto/stream-ciphers
directories,27966780,3775623,2025-01-12T17:19:05.177535Z,2017-12-18T07:12:55.098997Z,6.0.0,"A tiny mid-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows and macOS by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.",https://github.com/soc/directories-rs
console_error_panic_hook,27809733,3907680,2021-10-11T17:01:02.936833Z,2018-05-23T22:46:11.047945Z,0.1.7,A panic hook for `wasm32-unknown-unknown` that logs panics to `console.error`,https://github.com/rustwasm/console_error_panic_hook
raw-window-handle,27750774,5137768,2024-05-17T19:41:38.796080Z,2019-07-25T17:59:29.039274Z,0.6.2,Interoperability library for Rust Windowing applications.,https://github.com/rust-windowing/raw-window-handle
flatbuffers,27555347,6336779,2025-02-11T04:26:40.796607Z,2016-06-01T19:18:36.248215Z,25.2.10,Official FlatBuffers Rust runtime library.,https://github.com/google/flatbuffers
utf8-ranges,27485639,1820860,2022-04-04T18:56:49.704446Z,2015-10-16T01:21:55.954778Z,1.0.5,DEPRECATED. Use regex-syntax::utf8 submodule instead.,https://github.com/BurntSushi/utf8-ranges
if_chain,27298205,3678527,2021-08-21T07:29:35.974595Z,2016-12-28T22:56:06.959949Z,1.0.2,Macro for writing nested `if let` expressions.,https://github.com/lambda-fairy/if_chain
local-channel,27199952,4685345,2023-10-29T23:18:52.409270Z,2021-03-29T07:48:18.879481Z,0.1.5,"A non-threadsafe multi-producer, single-consumer, futures-aware, FIFO queue",https://github.com/actix/actix-net
local-waker,27194998,4684824,2023-10-29T23:18:39.529257Z,2021-03-29T08:09:28.331291Z,0.1.4,A synchronization primitive for thread-local task wakeup,https://github.com/actix/actix-net
deadpool-runtime,27065512,8848634,2024-05-04T09:27:46.238904Z,2021-10-26T13:35:13.545355Z,0.1.4,Dead simple async pool utitities for sync managers,https://github.com/bikeshedder/deadpool
uint,26929505,3933304,2024-09-11T09:42:44.055997Z,2017-12-29T16:23:50.415375Z,0.10.0,Large fixed-size integer arithmetic,https://github.com/paritytech/parity-common
signal-hook-mio,26928242,5035721,2024-07-28T18:21:20.566409Z,2020-11-22T16:26:24.100167Z,0.2.4,MIO support for signal-hook,https://github.com/vorner/signal-hook
tracing-appender,26611312,7095580,2023-11-13T19:52:32.457330Z,2020-05-05T17:20:53.142881Z,0.2.3,"Provides utilities for file appenders and making non-blocking writers.
",https://github.com/tokio-rs/tracing
serde-wasm-bindgen,26361256,7839764,2024-02-27T21:32:21.678632Z,2019-05-16T17:15:02.792426Z,0.6.5,Native Serde adapter for wasm-bindgen,https://github.com/RReverser/serde-wasm-bindgen
curl,26233831,2541886,2024-09-30T18:43:21.490945Z,2014-12-16T19:54:14.189051Z,0.4.47,Rust bindings to libcurl for making HTTP requests,https://github.com/alexcrichton/curl-rust
aliasable,26208336,4113752,2021-01-10T04:20:00.538145Z,2020-12-07T03:08:24.212490Z,0.1.3,Basic aliasable (non unique pointer) types,https://github.com/avitex/rust-aliasable
dotenv,26142593,4716921,2019-10-21T16:51:12.672006Z,2014-11-20T20:53:09.509225Z,0.15.0,A `dotenv` implementation for Rust,https://github.com/dotenv-rs/dotenv
winapi-build,26099764,837318,2015-12-16T00:01:49.263868Z,2015-05-21T14:34:59.494700Z,0.1.1,Common code for build.rs in WinAPI -sys crates.,https://github.com/retep998/winapi-rs
hex-literal,26091229,3463321,2025-02-22T15:32:13.912197Z,2018-01-29T07:31:43.468706Z,1.0.0,Macro for converting hexadecimal string to a byte array at compile time,https://github.com/RustCrypto/utils
assert_cmd,26041417,5050063,2024-08-09T01:40:53.120169Z,2018-05-28T20:57:36.584641Z,2.0.16,Test CLI Applications.,https://github.com/assert-rs/assert_cmd.git
dialoguer,25987352,3826326,2023-09-21T22:40:22.202276Z,2017-05-11T06:30:49.422438Z,0.11.0,A command line prompting library.,https://github.com/console-rs/dialoguer
lz4,25962164,5202387,2025-01-07T09:23:34.542720Z,2015-03-02T07:16:36.166359Z,1.28.1,Rust LZ4 bindings library.,https://github.com/10xGenomics/lz4-rs
mach,25950313,3511737,2019-06-01T11:04:57.829203Z,2015-02-01T02:40:31.538953Z,0.3.2,A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.,https://github.com/fitzgen/mach
enum-iterator-derive,25934425,2982881,2024-05-01T05:26:22.763982Z,2018-01-13T06:53:13.620313Z,1.4.0,Procedural macro to derive Sequence,https://github.com/stephaneyfx/enum-iterator.git
smol_str,25899221,6364324,2024-10-23T20:56:36.024822Z,2018-08-16T20:33:17.419277Z,0.3.2,small-string optimized string type with O(1) clone,https://github.com/rust-analyzer/smol_str
enum-iterator,25841371,2953302,2024-05-01T05:26:36.762667Z,2018-07-02T22:17:50.932167Z,2.1.0,Tools to iterate over all values of a type (e.g. all variants of an enumeration),https://github.com/stephaneyfx/enum-iterator.git
kernel32-sys,25840021,822667,2016-04-16T05:05:30.825379Z,2015-01-18T12:13:37.275060Z,0.2.2,Contains function definitions for the Windows API library kernel32. See winapi for types and constants.,https://github.com/retep998/winapi-rs
x25519-dalek,25837779,3082042,2024-02-07T01:14:06.940048Z,2017-09-14T04:44:50.630336Z,2.0.1,"X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.",https://github.com/dalek-cryptography/curve25519-dalek/tree/main/x25519-dalek
relative-path,25809726,5862388,2024-05-03T16:21:26.782171Z,2017-11-04T21:07:50.694189Z,1.9.3,"Portable, relative paths for Rust.",https://github.com/udoprog/relative-path
ipnetwork,25734855,5269570,2025-01-07T18:56:45.259380Z,2015-04-24T07:20:40.441668Z,0.21.1,A library to work with IP CIDRs in Rust,https://github.com/achanda/ipnetwork
unsigned-varint,25728506,5237975,2023-11-01T17:52:24.337696Z,2018-08-08T12:16:26.167103Z,0.8.0,unsigned varint encoding,https://github.com/paritytech/unsigned-varint
ndarray,25647778,7401077,2024-08-14T17:38:28.979522Z,2015-12-20T22:11:24.106344Z,0.16.1,An n-dimensional array for general elements and for numerics. Lightweight array views and slicing; views support chunking and splitting.,https://github.com/rust-ndarray/ndarray
procfs,25537283,4132371,2024-10-07T02:29:03.153390Z,2018-06-17T21:50:15.090115Z,0.17.0,Interface to the linux procfs pseudo-filesystem,https://github.com/eminence/procfs
derive_arbitrary,25512844,8835439,2024-11-05T22:20:10.435225Z,2018-10-13T06:40:29.348245Z,1.4.1,Derives arbitrary traits,https://github.com/rust-fuzz/arbitrary
ref-cast-impl,25471711,4471770,2025-03-03T05:04:15.912001Z,2017-10-09T14:41:35.479967Z,1.0.24,Derive implementation for ref_cast::RefCast.,https://github.com/dtolnay/ref-cast
ref-cast,25467949,4472098,2025-03-03T05:04:22.740119Z,2017-10-09T14:42:36.996905Z,1.0.24,Safely cast &T to &U where the struct U contains a single field of type T.,https://github.com/dtolnay/ref-cast
nalgebra,25459671,6334905,2024-10-29T07:43:13.501702Z,2014-11-22T18:53:15.674678Z,0.33.2,General-purpose linear algebra library with transformations and statically-sized or dynamically-sized matrices.,https://github.com/dimforge/nalgebra
base-x,25456018,3583294,2022-06-24T12:54:18.725133Z,2016-03-30T20:16:02.348858Z,0.2.11,Encode/decode any base,https://github.com/OrKoN/base-x-rs
k256,25422747,4126006,2024-09-22T15:05:11.775293Z,2019-12-05T19:11:49.527595Z,0.14.0-pre.2,"secp256k1 elliptic curve library written in pure Rust with support for ECDSA
signing/verification/public-key recovery, Taproot Schnorr signatures (BIP340),
Elliptic Curve Diffie-Hellman (ECDH), and general-purpose secp256k1 elliptic
curve group operations which can be used to implement arbitrary protocols
",https://github.com/RustCrypto/elliptic-curves
rpassword,25363136,2768035,2023-11-11T16:37:16.180862Z,2015-02-11T15:15:30.055223Z,7.3.1,Read passwords in console applications.,https://github.com/conradkleinespel/rpassword
aws-credential-types,25347758,6047624,2025-03-11T21:49:52.932793Z,2022-12-29T17:14:14.380039Z,1.2.2,Types for AWS SDK credentials.,https://github.com/smithy-lang/smithy-rs
vsimd,25314428,6580268,2022-12-28T03:06:21.978295Z,2022-09-01T16:14:34.384319Z,0.8.0,SIMD utilities,https://github.com/Nugine/simd
fiat-crypto,25262233,7129438,2024-05-12T22:29:28.840311Z,2020-02-04T04:31:50.717927Z,0.2.9,Fiat-crypto generated Rust,https://github.com/mit-plv/fiat-crypto
secp256k1,25233037,3422651,2024-10-09T03:25:56.783963Z,2015-05-04T15:32:52.136467Z,0.30.0,Rust wrapper library for Pieter Wuille's `libsecp256k1`. Implements ECDSA and BIP 340 signatures for the SECG elliptic curve group secp256k1 and related utilities.,https://github.com/rust-bitcoin/rust-secp256k1/
chunked_transfer,25209570,3373592,2023-11-23T04:36:30.183912Z,2015-05-03T20:49:01.809744Z,1.5.0,Encoder and decoder for HTTP chunked transfer coding (RFC 7230 Â§ 4.1),https://github.com/frewsxcv/rust-chunked-transfer
tikv-jemallocator,25149503,7677480,2024-07-14T15:42:35.076775Z,2020-07-21T11:46:51.343626Z,0.6.0,"A Rust allocator backed by jemalloc
",https://github.com/tikv/jemallocator
heapless,25097500,5389541,2023-12-04T13:51:20.988844Z,2017-04-27T21:26:06.946020Z,0.8.0,`static` friendly data structures that don't require dynamic memory allocation,https://github.com/japaric/heapless
rstest_macros,25057758,6198274,2025-03-02T17:03:29.390960Z,2022-05-15T15:40:53.435918Z,0.25.0,"Rust fixture based test framework. It use procedural macro
to implement fixtures and table based tests.
",https://github.com/la10736/rstest
ena,25040283,3748090,2024-05-06T18:25:50.618116Z,2016-10-22T10:17:49.884115Z,0.14.3,"Union-find, congruence closure, and other unification code. Based on code from rustc.",https://github.com/rust-lang/ena
fuchsia-cprng,24996847,2863546,2019-02-05T19:31:52.132087Z,2019-01-24T22:37:56.232806Z,0.1.1,Rust crate for the Fuchsia cryptographically secure pseudorandom number generator,https://fuchsia.googlesource.com/fuchsia/+/master/garnet/public/rust/fuchsia-cprng
castaway,24928934,6405429,2024-07-04T17:39:55.743991Z,2021-06-21T15:09:04.697923Z,0.2.3,"Safe, zero-cost downcasting for limited compile-time specialization.",https://github.com/sagebind/castaway
rdrand,24904348,2875527,2023-12-17T18:13:00.776932Z,2014-12-19T20:08:48.552923Z,0.8.3,An implementation of random number generator based on rdrand and rdseed instructions,https://github.com/nagisa/rust_rdrand/
warp,24766448,2756263,2024-04-05T18:25:27.418685Z,2018-03-29T17:38:58.215096Z,0.3.7,serve the web at warp speeds,https://github.com/seanmonstar/warp
radix_trie,24763636,4600567,2020-10-22T10:41:54.463635Z,2015-03-20T20:50:32.652844Z,0.2.1,Generic radix trie data-structure.,https://github.com/michaelsproul/rust_radix_trie
nibble_vec,24709923,4596975,2020-06-27T23:13:10.337313Z,2015-03-20T20:14:32.099919Z,0.1.0,Vector data-structure for half-byte values.,https://github.com/michaelsproul/rust_nibble_vec
difference,24694824,1354815,2018-01-23T17:31:55.462599Z,2015-09-19T05:58:42.573289Z,2.0.0,A Rust text diffing and assertion library.,https://github.com/johannhof/difference.rs
json-patch,24607560,6390030,2025-02-24T15:11:59.402829Z,2017-10-20T20:06:36.954007Z,4.0.0,"RFC 6902, JavaScript Object Notation (JSON) Patch",https://github.com/idubrov/json-patch
endian-type,24588952,4589573,2023-03-06T12:19:53.764548Z,2015-07-27T12:14:06.879984Z,0.2.0,Type safe wrappers for types with a defined byte order,https://github.com/Lolirofle/endian-type.git
nohash-hasher,24554758,5296922,2020-02-17T11:38:13.111407Z,2018-09-18T09:25:56.736884Z,0.2.0,An implementation of `std::hash::Hasher` which does not hash at all.,https://github.com/paritytech/nohash-hasher
opentelemetry_api,24516605,3132725,2023-07-29T21:19:27.301558Z,2019-06-27T22:58:05.309354Z,0.20.0,OpenTelemetry is a metrics collection and distributed tracing framework,https://github.com/open-telemetry/opentelemetry-rust
libredox,24464625,7448498,2024-03-18T16:08:50.782955Z,2023-10-12T18:19:21.825664Z,0.1.3,Redox stable ABI,https://gitlab.redox-os.org/redox-os/libredox.git
parity-scale-codec,24359905,3356784,2025-02-07T08:40:25.109361Z,2019-07-17T16:50:03.458892Z,3.7.4,SCALE - Simple Concatenating Aggregated Little Endians,https://github.com/paritytech/parity-scale-codec
chacha20poly1305,24315490,3354195,2024-10-07T19:26:41.288911Z,2016-10-06T21:17:44.421862Z,0.11.0-pre.2,"Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption
with Additional Data Cipher (RFC 8439) with optional architecture-specific
hardware acceleration. Also contains implementations of the XChaCha20Poly1305
extended nonce variant of ChaCha20Poly1305, and the reduced-round
ChaCha8Poly1305 and ChaCha12Poly1305 lightweight variants.
",https://github.com/RustCrypto/AEADs
windows-strings,24283946,16133492,2025-03-18T14:25:41.300351Z,2024-02-02T16:43:56.130574Z,0.4.0,Windows string types,https://github.com/microsoft/windows-rs
primeorder,24255567,6636849,2024-09-22T14:47:38.514201Z,2022-06-30T00:32:33.647355Z,0.14.0-pre.2,"Pure Rust implementation of complete addition formulas for prime order elliptic
curves (Renes-Costello-Batina 2015). Generic over field elements and curve
equation coefficients
",https://github.com/RustCrypto/elliptic-curves
tokio-retry,24215943,7549262,2021-03-06T13:07:27.598743Z,2017-03-05T13:07:28.724889Z,0.3.0,"Extensible, asynchronous retry behaviours for futures/tokio",https://github.com/srijs/rust-tokio-retry
yasna,24155389,3305237,2023-04-06T01:12:13.650001Z,2016-07-02T05:49:33.674203Z,0.5.2,ASN.1 library for Rust,https://github.com/qnighy/yasna.rs
uncased,24104242,3496010,2024-01-22T23:58:04.575341Z,2020-09-06T12:17:56.215109Z,0.9.10,"Case-preserving, ASCII case-insensitive, no_std string types.",https://github.com/SergioBenitez/uncased
primitive-types,24081893,3560202,2024-09-12T11:04:24.027476Z,2018-12-02T14:06:43.175988Z,0.13.1,Primitive types shared by Ethereum and Substrate,https://github.com/paritytech/parity-common
retain_mut,24015529,2988010,2022-05-20T14:25:03.187237Z,2018-11-28T11:03:27.723096Z,0.1.9,Provide retain_mut method that has the same functionality as retain but gives mutable borrow to the predicate.,https://github.com/upsuper/retain_mut
json5,23965131,6475293,2021-09-21T17:53:36.305816Z,2018-07-30T21:46:45.448335Z,0.4.1,A Rust JSON5 serializer and deserializer which speaks Serde.,https://github.com/callum-oakley/json5-rs
take_mut,23959180,2175874,2018-03-20T05:12:48.872959Z,2016-02-14T10:20:19.437725Z,0.2.2,Take a T from a &mut T temporarily,https://github.com/Sgeo/take_mut
http-types,23884718,5613884,2021-08-10T17:22:45.729254Z,2019-08-02T01:35:07.211350Z,2.12.0,Common types for HTTP operations.,https://github.com/http-rs/http-types
byte-slice-cast,23876372,3392963,2025-03-03T10:02:39.494851Z,2017-08-14T17:40:06.948815Z,1.2.3,Safely cast bytes slices from/to slices of built-in fundamental numeric types,https://github.com/sdroege/bytes-num-slice-cast
cadence,23851395,6555959,2024-09-27T00:33:13.269306Z,2015-12-23T03:47:06.588420Z,1.5.0,An extensible Statsd client for Rust,https://github.com/56quarters/cadence
platforms,23752645,1329548,2024-10-30T02:11:34.528995Z,2018-07-27T00:59:32.900267Z,3.5.0,"Rust platform registry with information about valid Rust platforms (target
triple, target_arch, target_os) sourced from the Rust compiler.
",https://github.com/rustsec/rustsec
slotmap,23591782,6282857,2023-11-30T21:58:03.103403Z,2018-07-02T16:03:35.775764Z,1.0.7,Slotmap data structure,https://github.com/orlp/slotmap
sqlx-macros-core,23451727,7395069,2025-01-04T04:30:32.527670Z,2023-02-22T00:45:22.141418Z,0.8.3,"Macro support core for SQLx, the Rust SQL toolkit. Not intended to be used directly.",https://github.com/launchbadge/sqlx
async-broadcast,23429355,6358966,2024-12-23T21:10:23.927278Z,2020-05-29T13:23:37.578954Z,0.7.2,Async broadcast channels,https://github.com/smol-rs/async-broadcast
ttf-parser,23377973,5888104,2024-11-29T19:59:37.395141Z,2019-06-18T11:05:28.494089Z,0.25.1,"A high-level, safe, zero-allocation font parser for TrueType, OpenType, and AAT.",https://github.com/harfbuzz/ttf-parser
secp256k1-sys,23375216,3311030,2024-09-11T20:12:56.781782Z,2019-12-10T20:45:37.791441Z,0.10.1,FFI for Pieter Wuille's `libsecp256k1` library.,https://github.com/rust-bitcoin/rust-secp256k1/
tagptr,23229442,8805297,2021-08-13T09:10:42.049617Z,2021-08-13T09:10:42.049617Z,0.2.0,Strongly typed atomic and non-atomic tagged pointers,https://github.com/oliver-giersch/tagptr.git
color-eyre,23182061,3444411,2024-03-14T22:39:55.258549Z,2020-05-07T02:01:03.370402Z,0.6.3,"An error report handler for panics and eyre::Reports for colorful, consistent, and well formatted error reports for all kinds of errors.",https://github.com/eyre-rs/eyre
sqlx-sqlite,23178586,7364882,2025-01-04T04:30:22.186464Z,2019-11-27T06:25:00.214630Z,0.8.3,SQLite driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.,https://github.com/launchbadge/sqlx
num-format,23170189,5525384,2022-12-03T17:16:00.523753Z,2019-02-05T04:44:16.604302Z,0.4.4,"A Rust crate for producing string-representations of numbers, formatted according to international standards",https://github.com/bcmyers/num-format
foldhash,23153173,16861359,2025-03-15T20:10:19.156505Z,2024-08-12T20:31:10.097565Z,0.1.5,"A fast, non-cryptographic, minimally DoS-resistant hashing algorithm.",https://github.com/orlp/foldhash
bitmaps,23148364,3199177,2024-02-01T19:11:58.666570Z,2019-09-06T16:14:56.535961Z,3.2.1,Fixed size boolean arrays,https://github.com/bodil/bitmaps
metrics-util,23107613,5743011,2025-01-06T15:15:19.261508Z,2019-04-23T20:33:21.264380Z,0.19.0,Helper types/functions used by the metrics ecosystem.,https://github.com/metrics-rs/metrics
sqlx-postgres,23068172,7365633,2025-01-04T04:30:04.202099Z,2019-11-27T06:24:44.649590Z,0.8.3,PostgreSQL driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.,https://github.com/launchbadge/sqlx
parity-scale-codec-derive,23048789,3335084,2025-02-07T08:39:31.487803Z,2019-07-17T16:49:43.151460Z,3.7.4,Serialization and deserialization derive macro for Parity SCALE Codec,https://github.com/paritytech/parity-scale-codec
rocksdb,23018694,4046967,2024-12-24T11:08:00.018011Z,2014-11-29T07:22:18.358594Z,0.23.0,Rust wrapper for Facebook's RocksDB embeddable database,https://github.com/rust-rocksdb/rust-rocksdb
librocksdb-sys,22961630,4052114,2024-12-24T11:07:27.320112Z,2016-11-13T18:53:04.302098Z,6.20.3,Native bindings to librocksdb,https://github.com/rust-rocksdb/rust-rocksdb
sqlx-mysql,22924813,7229862,2025-01-04T04:30:13.817767Z,2019-11-27T06:24:47.299981Z,0.8.3,MySQL driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.,https://github.com/launchbadge/sqlx
cache-padded,22845272,526614,2023-05-12T03:54:50.034383Z,2020-05-25T22:49:57.976082Z,1.3.0,Prevent false sharing by padding and aligning to the length of a cache line,https://github.com/smol-rs/cache-padded
lalrpop-util,22829808,4065493,2025-01-21T18:34:33.561240Z,2015-07-26T11:13:20.409919Z,0.22.1,Runtime library for parsers generated by LALRPOP,https://github.com/lalrpop/lalrpop
slog,22785248,2085880,2024-01-05T09:14:23.105670Z,2016-06-12T23:00:53.182275Z,2.8.0-beta.2,"Structured, extensible, composable logging for Rust",https://github.com/slog-rs/slog
multihash,22773362,4825504,2024-12-06T21:47:17.149829Z,2015-12-28T18:03:22.539039Z,0.19.3,Implementation of the multihash format,https://github.com/multiformats/rust-multihash
vte,22766959,3382785,2025-02-02T16:23:10.564882Z,2016-09-18T00:27:19.461390Z,0.15.0,Parser for implementing terminal emulators,https://github.com/alacritty/vte
sized-chunks,22649290,2841703,2022-04-29T16:07:07.333880Z,2019-02-19T17:40:05.242784Z,0.7.0,Efficient sized chunk datatypes,https://github.com/bodil/sized-chunks
moka,22607144,8708170,2025-01-06T00:23:17.381171Z,2020-10-22T01:38:51.643451Z,0.12.10,A fast and concurrent cache library inspired by Java Caffeine,https://github.com/moka-rs/moka
object_store,22605554,5195846,2025-03-09T12:03:57.238571Z,2022-05-13T15:41:59.625632Z,0.12.0,"A generic object store interface for uniformly interacting with AWS S3, Google Cloud Storage, Azure Blob Storage and local files.",https://github.com/apache/arrow-rs/tree/main/object_store
humansize,22543177,3781127,2022-12-31T12:31:58.698587Z,2016-11-19T22:29:40.728514Z,2.1.3,A configurable crate to easily represent sizes in a human-readable format.,https://github.com/LeopoldArkham/humansize
seq-macro,22542579,6620984,2025-03-04T00:15:39.018851Z,2018-08-22T21:18:19.293265Z,0.3.6,Macro to repeat sequentially indexed copies of a fragment of code.,https://github.com/dtolnay/seq-macro
fixed-hash,22501200,2932837,2022-09-20T13:04:35.479805Z,2017-12-29T16:22:13.066199Z,0.8.0,Macros to define custom fixed-size hash types,https://github.com/paritytech/parity-common
fraction,22436316,6076493,2024-05-12T06:35:10.815037Z,2016-01-24T01:12:45.914179Z,0.15.3,Lossless fractions and decimals; drop-in float replacement,https://github.com/dnsl48/fraction.git
tokio-test,22424474,4454519,2024-03-14T21:10:42.417497Z,2019-02-21T21:18:05.646781Z,0.4.4,"Testing utilities for Tokio- and futures-based code
",https://github.com/tokio-rs/tokio
ipconfig,22400346,3848828,2023-06-06T11:36:56.458033Z,2017-09-09T23:23:21.539697Z,0.3.2,Get network adapters information and network configuration for windows.,https://github.com/liranringel/ipconfig
aws-sdk-s3,22274632,4058855,2025-03-31T20:34:52.493921Z,2021-05-07T19:40:06.911083Z,1.82.0,AWS SDK for Amazon Simple Storage Service,https://github.com/awslabs/aws-sdk-rust
aws-smithy-eventstream,22274434,4188687,2025-03-10T15:43:53.510375Z,2021-10-20T22:40:32.952487Z,0.60.8,Event stream logic for smithy-rs.,https://github.com/smithy-lang/smithy-rs
html5ever,22270303,3643736,2025-04-06T02:07:05.927849Z,2015-06-15T22:02:43.231782Z,0.31.0,High-performance browser-grade HTML5 parser,https://github.com/servo/html5ever
markup5ever,22254681,3704876,2025-04-06T02:06:51.789523Z,2017-02-25T21:47:06.765799Z,0.16.0,Common code for xml5ever and html5ever,https://github.com/servo/html5ever
no-std-compat,22090732,4834407,2020-08-09T08:39:42.206558Z,2019-04-20T20:59:23.805040Z,0.4.1,A `#![no_std]` compatibility layer that will make porting your crate to no_std *easy*.,https://gitlab.com/jD91mZM2/no-std-compat
deunicode,22076869,3473835,2025-03-16T00:54:36.596826Z,2018-05-05T19:10:46.167858Z,1.6.1,Convert Unicode strings to pure ASCII by intelligently transliterating them. Suppors Emoji and Chinese.,https://github.com/kornelski/deunicode/
wasm-encoder,22065313,4325378,2025-04-01T16:44:54.680680Z,2020-11-23T20:27:48.649675Z,0.228.0,"A low-level WebAssembly encoder.
",https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasm-encoder
simple_logger,22036247,4080168,2024-04-30T16:15:04.284744Z,2015-02-24T01:30:57.181649Z,5.0.0,A logger that prints all messages with a readable output format,https://github.com/borntyping/rust-simple_logger
publicsuffix,22035782,2665947,2024-11-14T00:03:48.419706Z,2016-12-28T20:54:23.790979Z,2.3.0,Extract root domain and suffix from a domain name,https://github.com/rushmorem/publicsuffix
libssh2-sys,22034644,2746104,2025-02-01T17:13:17.058134Z,2014-11-11T06:38:58.507796Z,0.3.1,Native bindings to the libssh2 library,https://github.com/alexcrichton/ssh2-rs
tonic-health,22025904,7077485,2025-03-25T19:14:32.619421Z,2020-04-01T18:46:23.203123Z,0.13.0,"Health Checking module of `tonic` gRPC implementation.
",https://github.com/hyperium/tonic
humantime-serde,21984406,4504863,2022-03-11T20:10:58.643233Z,2019-05-24T22:21:10.983268Z,1.1.1,Serde support for the `humantime` crate,https://github.com/jean-airoldie/humantime-serde
educe,21917350,6496592,2024-06-01T07:36:58.840438Z,2019-07-26T07:18:01.434946Z,0.6.0,This crate offers procedural macros designed to facilitate the swift implementation of Rust's built-in traits.,https://github.com/magiclen/educe
rcgen,21806219,3593415,2025-03-15T08:18:31.805039Z,2019-01-03T08:13:53.654703Z,0.13.2,Rust X.509 certificate generator,https://github.com/rustls/rcgen
findshlibs,21789978,6096172,2021-11-11T03:11:23.544215Z,2016-11-24T02:19:19.091031Z,0.10.2,Find the set of shared libraries loaded in the current process with a cross platform API,https://github.com/gimli-rs/findshlibs
sqlparser,21771352,7312937,2025-03-05T18:28:23.245222Z,2018-09-03T16:04:40.122401Z,0.55.0,Extensible SQL Lexer and Parser with support for ANSI SQL:2011,https://github.com/apache/datafusion-sqlparser-rs
sketches-ddsketch,21709529,5040925,2024-06-01T14:35:46.356351Z,2019-09-19T23:09:14.750114Z,0.3.0,"A direct port of the Golang DDSketch implementation.
",https://github.com/mheffner/rust-sketches-ddsketch
test-log,21699569,8263131,2025-01-18T18:40:01.413240Z,2021-06-29T15:08:36.371765Z,0.2.17,"A replacement of the #[test] attribute that initializes logging and/or
tracing infrastructure before running tests.
",https://github.com/d-e-s-o/test-log.git
pretty_env_logger,21656840,3282937,2023-05-18T13:53:58.790999Z,2016-12-29T21:40:51.235536Z,0.5.0,a visually pretty env_logger,https://github.com/seanmonstar/pretty-env-logger
os_info,21588857,2851218,2025-02-09T07:56:22.094088Z,2017-10-03T15:04:23.233153Z,3.10.0,Detect the operating system type and version.,https://github.com/stanislav-tkach/os_info
bit_field,21546017,4007891,2023-02-25T12:00:35.039244Z,2016-05-24T20:21:58.392931Z,0.10.2,"Simple bit field trait providing get_bit, get_bits, set_bit, and set_bits methods for Rust's integral types.",https://github.com/phil-opp/rust-bit-field
tendril,21540884,3404900,2022-03-27T22:33:14.354085Z,2015-06-24T23:18:12.932654Z,0.4.3,Compact buffer/string type for zero-copy parsing,https://github.com/servo/tendril
stacker,21453481,5707512,2025-03-18T20:47:19.641807Z,2015-07-15T07:14:55.888300Z,0.1.20,"A stack growth library useful when implementing deeply recursive algorithms that
may accidentally blow the stack.
",https://github.com/rust-lang/stacker
ark-std,21365563,4976037,2024-10-28T10:38:24.008067Z,2021-03-24T17:29:26.323096Z,0.5.0,A library for no_std compatibility,https://github.com/arkworks-rs/std
nonzero_ext,21355745,4610637,2021-08-21T15:57:43.150498Z,2018-09-15T15:04:43.714495Z,0.3.0,Extensions and additional traits for non-zero integer types,https://github.com/antifuchs/nonzero_ext
futf,21230675,3388635,2022-02-04T12:41:11.281402Z,2015-06-24T23:10:41.122611Z,0.1.5,Handling fragments of UTF-8,https://github.com/servo/futf
impl-codec,21196360,3284194,2025-02-11T15:13:12.681488Z,2018-12-02T14:03:27.008509Z,0.7.1,Parity Codec serialization support for uint and fixed hash.,
mio-uds,21115748,630055,2020-05-01T22:42:53.987750Z,2016-09-02T05:11:22.165533Z,0.6.8,"Unix domain socket bindings for mio
",https://github.com/deprecrated/mio-uds
smartstring,21088895,4971172,2022-03-24T18:30:52.441790Z,2020-05-15T20:47:14.005767Z,1.0.1,Compact inlined strings,https://github.com/bodil/smartstring
mac,21022251,3372038,2017-02-17T00:36:37.212039Z,2015-02-25T05:19:14.083134Z,0.1.1,A collection of great and ubiqutitous macros.,https://github.com/reem/rust-mac.git
miette-derive,21007402,3624399,2025-02-01T02:51:06.032271Z,2021-08-15T18:51:03.664675Z,7.5.0,Derive macros for miette. Like `thiserror` for Diagnostics.,https://github.com/zkat/miette
miette,21001689,3628536,2025-02-01T02:58:32.711442Z,2021-08-03T02:37:11.180152Z,7.5.0,Fancy diagnostic reporting library and protocol for us mere mortals who aren't compiler hackers.,https://github.com/zkat/miette
governor,20948415,4666870,2025-03-27T13:06:23.641517Z,2019-11-15T04:37:18.191097Z,0.10.0,A rate-limiting implementation in Rust,https://github.com/boinkor-net/governor.git
aws-smithy-checksums,20903955,3941151,2025-03-10T15:46:27.583266Z,2022-07-20T17:56:38.899689Z,0.63.1,Checksum calculation and verification callbacks,https://github.com/smithy-lang/smithy-rs
lzma-sys,20900888,4455295,2022-10-31T15:18:35.015053Z,2016-03-21T08:35:36.078685Z,0.1.20,"Raw bindings to liblzma which contains an implementation of LZMA and xz stream
encoding/decoding.

High level Rust bindings are available in the `xz2` crate.
",https://github.com/alexcrichton/xz2-rs
ark-serialize,20888059,4949253,2024-10-28T10:58:16.913428Z,2021-03-24T20:11:23.852015Z,0.5.0,A library for serializing types in the arkworks ecosystem,https://github.com/arkworks-rs/algebra
wast,20877879,2665407,2025-04-01T16:44:59.238489Z,2019-10-16T22:15:44.714072Z,228.0.0,"Customizable Rust parsers for the WebAssembly Text formats WAT and WAST
",https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wast
ark-ff-asm,20866593,4943922,2024-10-28T11:00:23.081019Z,2021-03-24T20:17:19.337532Z,0.5.0,A library for generating x86-64 assembly for finite field multiplication,https://github.com/arkworks-rs/algebra
ark-ff-macros,20836809,4943580,2024-10-28T10:59:20.193715Z,2021-03-24T20:14:24.351013Z,0.5.0,A library for generating x86-64 assembly for finite field multiplication,https://github.com/arkworks-rs/algebra
simba,20793023,4616054,2024-06-22T16:14:13.293372Z,2020-03-23T08:25:14.906428Z,0.9.0,SIMD algebra for Rust,https://github.com/dimforge/simba
reqwest-middleware,20706704,7974474,2025-04-08T14:54:58.312492Z,2021-08-12T18:30:16.136759Z,0.4.2,Wrapper around reqwest to allow for client middleware chains.,https://github.com/TrueLayer/reqwest-middleware
ark-ff,20692311,4929507,2024-10-28T11:01:35.306707Z,2021-03-24T21:26:41.251066Z,0.5.0,A library for finite fields,https://github.com/arkworks-rs/algebra
enum_dispatch,20670800,3748662,2024-03-28T16:25:44.789544Z,2018-12-17T16:24:59.613823Z,0.3.13,Near drop-in replacement for dynamic-dispatched method calls with up to 10x the speed,https://gitlab.com/antonok/enum_dispatch
tokio-io,20664389,729944,2020-02-05T00:25:14.955739Z,2017-03-15T16:44:53.532150Z,0.2.0-alpha.6,"Core I/O primitives for asynchronous I/O in Rust.
",https://github.com/tokio-rs/tokio
scheduled-thread-pool,20660173,1540253,2023-03-07T01:36:32.693097Z,2017-04-19T09:01:35.596924Z,0.2.7,A scheduled thread pool,https://github.com/sfackler/scheduled-thread-pool
version-compare,20658236,3188440,2024-03-16T11:36:15.494048Z,2017-03-13T15:02:45.354297Z,0.2.0,"Rust library to easily compare version numbers with no specific format, and test against various comparison operators.",https://gitlab.com/timvisee/version-compare
include_dir,20600510,4236457,2024-06-17T14:46:19.491634Z,2017-06-07T18:57:49.710748Z,0.7.4,Embed the contents of a directory in your binary,https://github.com/Michael-F-Bryan/include_dir
memmap,20587059,2409634,2018-09-20T05:11:46.005513Z,2015-08-22T02:57:41.545776Z,0.7.0,Cross-platform Rust API for memory-mapped file IO,https://github.com/danburkert/memmap-rs
compact_str,20583892,7105399,2025-02-25T03:43:37.578310Z,2021-09-20T01:29:08.474329Z,0.9.0,"A memory efficient string type that transparently stores strings on the stack, when possible",https://github.com/ParkMyCar/compact_str
unicode-properties,20535511,9084420,2024-09-30T17:58:19.121238Z,2023-07-27T18:42:44.247368Z,0.1.3,"Query character Unicode properties according to
UAX #44 and UTR #51.
",https://github.com/unicode-rs/unicode-properties
sentry-types,20519415,2544083,2025-04-01T11:44:33.280765Z,2018-03-25T22:30:37.109834Z,0.37.0,"Common reusable types for implementing the sentry.io protocol.
",https://github.com/getsentry/sentry-rust
tracing-error,20498784,2928397,2024-11-29T16:55:47.329388Z,2020-02-05T21:36:24.923730Z,0.2.1,"Utilities for enriching errors with `tracing`.
",https://github.com/tokio-rs/tracing
beef,20458700,3252448,2022-05-27T09:55:49.490487Z,2020-03-12T15:22:26.231878Z,0.5.2,More compact Cow,https://github.com/maciejhirsz/beef
impl-trait-for-tuples,20435645,3204434,2024-11-21T10:24:22.490641Z,2019-09-11T14:04:01.989516Z,0.2.3,"Attribute macro to implement a trait for tuples
",https://github.com/bkchr/impl-trait-for-tuples
auto_impl,20433190,5353717,2025-04-09T22:07:12.632059Z,2017-08-01T09:25:41.512344Z,1.3.0,Automatically implement traits for common smart pointers and closures,https://github.com/auto-impl-rs/auto_impl/
lalrpop,20427007,3490270,2025-01-21T19:47:45.551472Z,2015-07-26T11:48:49.391461Z,0.22.1,convenient LR(1) parser generator,https://github.com/lalrpop/lalrpop
aws-smithy-runtime,20415730,6025829,2025-03-25T23:47:24.837541Z,2023-04-06T11:08:04.307360Z,1.8.1,The new smithy runtime crate,https://github.com/smithy-lang/smithy-rs
arrow-buffer,20382315,5902477,2025-03-30T10:37:52.110Z,2022-09-19T21:05:31.950856Z,54.3.1,Buffer abstractions for Apache Arrow,https://github.com/apache/arrow-rs
shell-escape,20375044,2630070,2020-06-19T23:43:54.636190Z,2016-12-30T18:15:23.172777Z,0.1.5,Escape characters that may have a special meaning in a shell,https://github.com/sfackler/shell-escape
arrow-schema,20342080,5903708,2025-03-30T10:37:56.946131Z,2022-10-03T20:41:44.180413Z,54.3.1,Defines the logical types for arrow arrays,https://github.com/apache/arrow-rs
xz2,20341306,4412560,2022-06-06T17:07:19.438302Z,2016-03-21T08:56:28.055345Z,0.1.7,"Rust bindings to liblzma providing Read/Write streams as well as low-level
in-memory encoding/decoding.
",https://github.com/alexcrichton/xz2-rs
arrow-data,20323999,5895467,2025-03-30T10:38:03.903534Z,2022-10-03T20:42:03.513388Z,54.3.1,Array data abstractions for Apache Arrow,https://github.com/apache/arrow-rs
arrow-array,20318130,5893975,2025-03-30T10:38:12.376509Z,2022-10-03T20:42:44.292238Z,54.3.1,Array abstractions for Apache Arrow,https://github.com/apache/arrow-rs
aws-runtime,20294980,5994859,2025-03-11T21:52:39.532001Z,2023-04-06T11:08:39.425422Z,1.5.6,Runtime support code for the AWS SDK. This crate isn't intended to be used directly.,https://github.com/smithy-lang/smithy-rs
aws-smithy-runtime-api,20243715,5882879,2025-03-10T15:44:04.983131Z,2023-04-06T11:08:28.419982Z,1.7.4,Smithy runtime types.,https://github.com/smithy-lang/smithy-rs
enum-ordinalize,20189367,4650478,2023-12-15T01:28:22.414388Z,2018-09-02T12:28:36.625380Z,4.3.0,This library enables enums to not only obtain the ordinal values of their variants but also allows for the construction of enums from an ordinal value.,https://github.com/magiclen/enum-ordinalize
rustc-hex,20167007,2633285,2020-01-10T14:09:36.503165Z,2017-05-19T13:06:00.288878Z,2.1.0,"rustc-serialize compatible hex conversion traits
",https://github.com/debris/rustc-hex
vsdb,20137964,27051,2024-10-12T12:26:05.693339Z,2021-12-11T04:07:42.026729Z,3.0.0,A std-collection-like database,https://github.com/rust-util-collections/vsdb/tree/master/wrappers
arrow-select,20107360,5871332,2025-03-30T10:38:21.681997Z,2022-11-03T20:26:04.114077Z,54.3.1,Selection kernels for arrow arrays,https://github.com/apache/arrow-rs
libflate,20021072,2957451,2024-04-30T12:28:20.726786Z,2016-10-16T20:25:53.769186Z,2.1.0,"A Rust implementation of DEFLATE algorithm and related formats (ZLIB, GZIP)",https://github.com/sile/libflate
arrow-cast,20003883,5861985,2025-03-30T10:38:31.461613Z,2022-11-14T22:05:34.653522Z,54.3.1,Cast kernel and utilities for Apache Arrow,https://github.com/apache/arrow-rs
pico-args,19950451,3264819,2022-06-04T12:11:35.198777Z,2019-07-21T18:38:09.093586Z,0.5.0,An ultra simple CLI arguments parser.,https://github.com/RazrFalcon/pico-args
vsdb_derive,19895861,3636,2023-03-25T13:16:08.303711Z,2021-12-24T09:44:05.408941Z,0.53.0,Some procedure macro implementations for vsdb.,https://github.com/rust-util-collections/vsdb/tree/master/derive
vsdbsled,19883437,1155,2022-04-03T10:15:02.768352Z,2021-12-14T06:39:48.164703Z,0.34.7-p1,Lightweight high-performance pure-rust transactional embedded database.,https://github.com/spacejam/sled
sentry,19879229,2500626,2025-04-01T11:45:24.370032Z,2016-05-20T17:24:17.084103Z,0.37.0,"Sentry (getsentry.com) client for rust ;)
",https://github.com/getsentry/sentry-rust
psl-types,19752492,4080038,2022-08-10T10:56:17.310651Z,2021-03-12T20:42:38.998288Z,2.0.11,Common types for the public suffix implementation crates,https://github.com/addr-rs/psl-types
windows-implement,19751606,10260447,2025-03-18T14:24:20.766684Z,2022-01-27T21:07:19.328424Z,0.60.0,The implement macro for the windows crate,https://github.com/microsoft/windows-rs
scroll,19746800,3981738,2024-01-01T00:36:31.272401Z,2016-11-23T06:10:48.255694Z,0.12.0,"A suite of powerful, extensible, generic, endian-aware Read/Write traits for byte buffers",https://github.com/m4b/scroll
trybuild,19545996,3680963,2025-03-04T00:21:59.497948Z,2019-05-06T16:29:47.498008Z,1.0.104,Test harness for ui tests of compiler diagnostics,https://github.com/dtolnay/trybuild
vergen,19537303,2896713,2025-04-09T14:57:25.162835Z,2015-02-12T19:09:15.976676Z,9.0.6,Generate 'cargo:rustc-env' instructions via 'build.rs' for use in your code via the 'env!' macro,https://github.com/rustyhorde/vergen
postgres-protocol,19524256,3629965,2025-02-02T21:01:21.322879Z,2016-09-22T04:38:58.587437Z,0.6.8,Low level Postgres protocol APIs,https://github.com/sfackler/rust-postgres
validator,19407862,4007279,2025-01-20T11:40:45.543454Z,2016-12-28T02:54:16.372547Z,0.20.0,"Common validation functions (email, url, length, ...) and trait - to be used with `validator_derive`",https://github.com/Keats/validator
borsh-derive-internal,19397298,1629642,2024-09-23T13:31:07.014667Z,2019-08-16T23:23:06.129464Z,0.10.4,"Binary Object Representation Serializer for Hashing
",https://github.com/nearprotocol/borsh
arrow-ipc,19382886,5751210,2025-03-30T10:38:40.275389Z,2022-11-14T22:06:22.225650Z,54.3.1,Support for the Arrow IPC format,https://github.com/apache/arrow-rs
sentry-core,19370299,2515671,2025-04-01T11:44:37.694696Z,2020-06-18T13:47:31.939838Z,0.37.0,"Core sentry library used for instrumentation and integration development.
",https://github.com/getsentry/sentry-rust
borsh-schema-derive-internal,19364257,1626673,2024-09-23T13:31:18.033234Z,2020-02-22T01:24:58.114001Z,0.10.4,"Schema Generator for Borsh
",https://github.com/nearprotocol/borsh
jsonschema,19359824,5663733,2025-03-27T21:18:59.562571Z,2020-03-29T09:11:59.696721Z,0.29.1,JSON schema validaton library,https://github.com/Stranger6667/jsonschema
dissimilar,19293964,2482104,2025-03-03T23:17:34.976709Z,2019-12-23T23:29:17.497332Z,1.0.10,"Diff library with semantic cleanup, based on Google's diff-match-patch",https://github.com/dtolnay/dissimilar
thread-id,19289776,2058241,2024-10-22T18:19:23.071829Z,2016-03-13T21:01:16.768851Z,5.0.0,Get a unique thread ID,https://github.com/ruuda/thread-id
jsonpath-rust,19256941,7003019,2025-04-06T19:33:04.359096Z,2021-05-04T20:51:07.477453Z,1.0.1,The library provides the basic functionality to find the set of the data according to the filtering query.,https://github.com/besok/jsonpath-rust
cookie_store,19253700,2343438,2024-11-09T17:55:09.140894Z,2019-01-10T23:42:13.561793Z,0.21.1,Implementation of Cookie storage and retrieval,https://github.com/pfernie/cookie_store
zvariant,19244287,4344762,2025-02-07T13:42:08.367794Z,2019-12-30T22:46:16.210813Z,5.4.0,D-Bus & GVariant encoding & decoding,https://github.com/dbus2/zbus/
zvariant_derive,19234710,4342844,2025-02-07T13:41:51.383234Z,2020-05-22T13:09:28.990065Z,5.4.0,D-Bus & GVariant encoding & decoding,https://github.com/dbus2/zbus/
fsevent-sys,19168952,4084854,2022-01-05T21:39:46.311157Z,2015-01-13T12:53:49.578145Z,4.1.0,Rust bindings to the fsevent macOS API for file changes notifications,https://github.com/octplane/fsevent-rust/tree/master/fsevent-sys
ascii-canvas,19168874,3329651,2024-09-30T16:34:10.453811Z,2017-03-02T10:48:31.952474Z,4.0.0,simple canvas for drawing lines and styled text and emitting to the terminal,https://github.com/lalrpop/ascii-canvas
tokio-timer,19130328,616490,2020-02-04T23:50:14.347986Z,2017-01-12T00:27:11.744930Z,0.3.0-alpha.6,"Timer facilities for Tokio
",https://github.com/tokio-rs/tokio
shellexpand,19049394,3313563,2023-03-24T11:27:36.187411Z,2016-03-13T17:26:33.513425Z,3.1.0,Shell-like expansions in strings,https://gitlab.com/ijackson/rust-shellexpand
zbus,19031284,4321619,2025-02-07T17:15:31.950044Z,2020-07-07T01:12:27.619322Z,5.5.0,API for D-Bus communication,https://github.com/dbus2/zbus/
zbus_macros,19031203,4332557,2025-02-07T17:14:59.183250Z,2020-07-19T17:08:39.078631Z,5.5.0,proc-macros for zbus,https://github.com/dbus2/zbus/
unic-common,19016660,3285166,2019-03-03T04:57:59.630433Z,2018-02-07T05:00:15.247030Z,0.9.0,UNIC â Common Utilities,https://github.com/open-i18n/rust-unic/
unic-char-property,19014693,3285789,2019-03-03T04:58:16.449988Z,2017-09-22T19:37:38.446901Z,0.9.0,"UNIC â Unicode Character Tools â Character Property taxonomy, contracts and build macros",https://github.com/open-i18n/rust-unic/
unic-ucd-version,19002411,3283271,2019-03-03T04:58:25.487899Z,2018-02-07T05:01:15.131160Z,0.9.0,UNIC â Unicode Character Database â Version,https://github.com/open-i18n/rust-unic/
unic-char-range,18972755,3286699,2019-03-03T04:58:08.510025Z,2017-09-22T19:36:12.454314Z,0.9.0,UNIC â Unicode Character Tools â Character Range and Iteration,https://github.com/open-i18n/rust-unic/
wayland-sys,18965083,4807306,2025-01-31T18:37:55.683262Z,2015-10-03T11:08:21.431559Z,0.31.6,FFI bindings to the various libwayland-*.so libraries. You should only need this crate if you are working on custom wayland protocol extensions. Look at the crate wayland-client for usable bindings.,https://github.com/smithay/wayland-rs
sentry-backtrace,18964417,2450872,2025-04-01T11:44:42.083906Z,2020-06-18T13:47:34.447495Z,0.37.0,"Sentry integration and utilities for dealing with stacktraces.
",https://github.com/getsentry/sentry-rust
xxhash-rust,18922143,4529270,2024-12-30T00:30:43.667195Z,2020-10-15T20:12:33.324732Z,0.8.15,Implementation of xxhash,https://github.com/DoumanAsh/xxhash-rust
deflate,18895706,1793646,2021-11-10T17:02:27.957683Z,2016-09-19T09:22:29.510935Z,1.0.0,"A DEFLATE, zlib and gzip encoder written in Rust.
",https://github.com/image-rs/deflate-rs
salsa20,18884487,3495058,2024-10-07T18:52:14.503419Z,2016-10-06T21:07:38.107611Z,0.11.0-pre.2,Salsa20 Stream Cipher,https://github.com/RustCrypto/stream-ciphers
windows-registry,18848257,11699590,2025-03-18T14:26:40.290086Z,2024-02-15T05:27:39.377652Z,0.5.1,Windows registry,https://github.com/microsoft/windows-rs
strip-ansi-escapes,18834809,2771470,2025-01-14T15:47:27.043349Z,2018-02-02T12:01:08.543896Z,0.2.1,Strip ANSI escape sequences from byte streams.,https://github.com/luser/strip-ansi-escapes
async-fs,18803295,3695486,2024-04-27T23:03:34.173426Z,2019-05-10T15:47:14.143992Z,2.1.2,Async filesystem primitives,https://github.com/smol-rs/async-fs
postgres-types,18788301,3613618,2025-02-02T21:04:59.288135Z,2019-10-15T00:56:35.502415Z,0.2.9,Conversions between Rust and Postgres values,https://github.com/sfackler/rust-postgres
arrow,18787280,5398733,2025-03-30T10:39:50.212288Z,2018-03-29T04:49:37.317255Z,54.3.1,Rust implementation of Apache Arrow,https://github.com/apache/arrow-rs
impl-serde,18786881,2535621,2024-09-11T09:45:27.071646Z,2018-12-02T14:04:55.952328Z,0.5.0,Serde serialization support for uint and fixed hash.,
tokio-executor,18762838,612569,2020-02-05T00:25:43.203606Z,2018-02-01T17:44:24.223755Z,0.2.0-alpha.6,"Future execution primitives
",https://github.com/tokio-rs/tokio
libsecp256k1,18748387,2172636,2025-03-14T15:49:21.842379Z,2017-11-10T18:33:33.897453Z,0.7.2,Pure Rust secp256k1 implementation.,https://github.com/paritytech/libsecp256k1
tonic-reflection,18716667,3635250,2025-03-25T19:14:27.030862Z,2021-03-17T16:36:15.248943Z,0.13.0,"Server Reflection module of `tonic` gRPC implementation.
",https://github.com/hyperium/tonic
insta,18715223,4163248,2025-03-02T00:45:00.542059Z,2019-01-13T22:30:14.791637Z,1.42.2,A snapshot testing library for Rust,https://github.com/mitsuhiko/insta
serde_ignored,18692083,2295478,2025-03-03T07:50:41.241854Z,2017-02-09T00:30:01.602945Z,0.1.11,Find out about keys that are ignored when deserializing data,https://github.com/dtolnay/serde-ignored
p384,18632987,5100655,2025-02-07T01:25:30.110736Z,2018-10-03T14:56:55.112674Z,0.14.0-pre.2,"Pure Rust implementation of the NIST P-384 (a.k.a. secp384r1) elliptic curve
as defined in SP 800-186 with support for ECDH, ECDSA signing/verification,
and general purpose curve arithmetic support.
",https://github.com/RustCrypto/elliptic-curves/tree/master/p384
cranelift-entity,18572142,2247708,2025-03-20T14:48:12.666670Z,2018-07-13T16:27:03.779090Z,0.118.0,Data structures using entity references as mapping keys,https://github.com/bytecodealliance/wasmtime
windows-interface,18558985,10178033,2025-03-18T14:24:38.800042Z,2022-02-18T22:04:24.504315Z,0.59.1,The interface macro for the windows crate,https://github.com/microsoft/windows-rs
tiny_http,18558477,3132069,2022-10-06T16:24:54.189062Z,2015-05-07T13:50:16.434225Z,0.12.0,Low level HTTP server library,https://github.com/tiny-http/tiny-http
sentry-contexts,18557174,2404658,2025-04-01T11:44:46.028661Z,2020-06-18T13:47:35.550255Z,0.37.0,"Sentry integration for os, device, and rust contexts.
",https://github.com/getsentry/sentry-rust
wiremock,18544430,6751578,2025-03-01T17:30:24.720353Z,2020-04-13T16:14:06.886867Z,0.6.3,HTTP mocking to test Rust applications.,https://github.com/LukeMathWalker/wiremock-rs
bech32,18500106,2608824,2024-02-23T18:09:42.479074Z,2017-05-08T17:00:56.794665Z,0.11.0,Encodes and decodes the Bech32 format and implements the bech32 and bech32m checksums,https://github.com/rust-bitcoin/rust-bech32
jemalloc-sys,18486501,1587111,2023-07-27T16:18:20.476165Z,2016-01-21T01:18:31.589351Z,0.5.4+5.3.0-patched,"Rust FFI bindings to jemalloc
",https://github.com/tikv/jemallocator
wasm-timer,18480432,5768899,2020-08-31T09:06:00.781690Z,2019-04-18T15:12:44.551427Z,0.2.5,Abstraction over std::time::Instant and futures-timer that works on WASM,https://github.com/tomaka/wasm-timer
twoway,18476700,632343,2021-05-19T22:06:38.467348Z,2015-12-08T21:45:47.474290Z,0.2.2,"(Deprecated - use crate memchr instead.) Fast substring search for strings and byte strings. Optional SSE4.2 acceleration (if detected at runtime) using pcmpestri. Memchr is the only mandatory dependency. The two way algorithm is also used by rust's libstd itself, but here it is exposed both for byte strings, using memchr, and optionally using a SSE4.2 accelerated version.",https://github.com/bluss/twoway
sentry-panic,18438892,2408440,2025-04-01T11:45:15.410068Z,2020-06-18T13:47:41.370178Z,0.37.0,"Sentry integration for capturing panics.
",https://github.com/getsentry/sentry-rust
async-signal,18398816,6809633,2024-08-10T23:20:49.031125Z,2019-06-10T20:26:13.781185Z,0.2.10,Async signal handling,https://github.com/smol-rs/async-signal
cpuid-bool,18350259,456558,2021-05-06T23:32:28.057308Z,2020-06-11T18:15:15.849646Z,0.99.99,DEPRECATED: replaced by the `cpufeatures` crate,https://github.com/RustCrypto/utils/tree/master/cpufeatures
metrics-macros,18343802,2468149,2023-12-23T15:26:40.958071Z,2020-06-17T01:57:58.632678Z,0.7.1,Macros for the metrics crate.,https://github.com/metrics-rs/metrics
compiler_builtins,18323762,2758617,2025-04-09T20:34:32.865337Z,2018-11-21T19:13:56.864043Z,0.1.153,"Compiler intrinsics used by the Rust compiler. Also available for other targets
if necessary!
",https://github.com/rust-lang/compiler-builtins
symbolic-common,18224665,5240070,2025-04-10T15:14:44.594694Z,2017-12-02T00:03:11.881535Z,12.15.3,"Common types and utilities for symbolic, a library to symbolicate and process
stack traces from native applications, minidumps or minified JavaScript.
",https://github.com/getsentry/symbolic
protobuf-codegen,18184232,2177748,2025-03-10T14:08:40.157341Z,2018-05-11T00:51:51.563231Z,4.31.0-beta1,"Code generator for rust-protobuf.

Includes a library to invoke programmatically (e. g. from `build.rs`) and `protoc-gen-rs` binary.
",https://github.com/stepancheg/rust-protobuf/
scroll_derive,18164303,3605591,2025-04-06T07:40:14.225594Z,2017-01-31T06:41:58.184965Z,0.12.1,A macros 1.1 derive implementation for Pread and Pwrite traits from the scroll crate,https://github.com/m4b/scroll
send_wrapper,18158910,3373843,2022-06-05T17:10:03.323883Z,2017-09-07T12:18:26.526981Z,0.6.0,"This Rust library implements a wrapper type called SendWrapper which allows you to move around non-Send types
between threads, as long as you access the contained value only from within the original thread. You also have to
make sure that the wrapper is dropped from within the original thread. If any of these constraints is violated,
a panic occurs.",https://github.com/thk1/send_wrapper
utf8-width,18125600,2827495,2023-11-20T14:39:07.295376Z,2020-06-25T01:03:45.534940Z,0.1.7,To determine the width of a UTF-8 character by providing its first byte.,https://github.com/magiclen/utf8-width
fd-lock,18101662,2628005,2025-03-10T15:53:43.359688Z,2019-06-28T00:08:41.253765Z,4.0.4,Advisory cross-platform lock on a file using a file descriptor to it.,https://github.com/yoshuawuyts/fd-lock
test-case,17955505,5666372,2023-11-17T20:16:53.517911Z,2019-09-27T16:31:56.557454Z,3.3.1,Provides #[test_case(...)] procedural macro attribute for generating parametrized test cases easily,https://github.com/frondeus/test-case
rustc-serialize,17938171,484234,2023-12-01T09:52:20.384822Z,2014-12-11T18:34:21.986413Z,0.3.25,"Generic serialization/deserialization support corresponding to the
`derive(RustcEncodable, RustcDecodable)` mode in the compiler. Also includes
support for hex, base64, and json encoding and decoding.

This crate is deprecated in favor of serde.
",https://github.com/rust-lang/rustc-serialize
cranelift-frontend,17899815,2187450,2025-03-20T14:49:49.340761Z,2018-07-13T16:29:07.202050Z,0.118.0,Cranelift IR builder helper,https://github.com/bytecodealliance/wasmtime
supports-color,17888431,2901445,2024-11-26T09:05:02.178227Z,2021-09-11T05:51:44.725111Z,3.0.2,"Detects whether a terminal supports color, and gives details about that support.",https://github.com/zkat/supports-color
symbolic-demangle,17823676,5190014,2025-04-10T15:14:56.740417Z,2017-12-02T00:03:21.205857Z,12.15.3,"A library to demangle symbols from various languages and compilers.
",https://github.com/getsentry/symbolic
k8s-openapi,17785455,5418955,2024-12-22T01:45:55.736459Z,2018-06-30T09:37:50.529047Z,0.24.0,Bindings for the Kubernetes client API,https://github.com/Arnavion/k8s-openapi
crossterm_winapi,17739686,3433341,2023-06-12T18:05:33.496457Z,2019-01-02T15:35:04.068669Z,0.9.1,WinAPI wrapper that provides some basic simple abstractions around common WinAPI calls,https://github.com/crossterm-rs/crossterm-winapi
cranelift-codegen,17729957,2202507,2025-03-20T14:48:36.174208Z,2018-07-13T16:28:34.396845Z,0.118.0,Low-level code generator library,https://github.com/bytecodealliance/wasmtime
arrow-arith,17705011,5415319,2025-03-30T10:39:24.427196Z,2023-01-03T11:30:09.393784Z,54.3.1,Arrow arithmetic kernels,https://github.com/apache/arrow-rs
cranelift-codegen-meta,17683809,2191727,2025-03-20T14:48:25.419478Z,2018-08-03T03:32:06.638906Z,0.118.0,Metaprogram for cranelift-codegen code generator library,https://github.com/bytecodealliance/wasmtime
cranelift-bforest,17668795,2192467,2025-03-20T14:48:16.282422Z,2018-08-14T19:55:48.797407Z,0.118.0,A forest of B+-trees,https://github.com/bytecodealliance/wasmtime
arrow-ord,17651890,5398945,2025-03-30T10:39:17.443797Z,2022-12-12T22:47:27.162878Z,54.3.1,Ordering kernels for arrow arrays,https://github.com/apache/arrow-rs
goblin,17649307,2849236,2025-01-06T02:38:21.382457Z,2016-05-13T09:42:57.453430Z,0.9.3,"An impish, cross-platform, ELF, Mach-o, and PE binary parsing and loading crate",https://github.com/m4b/goblin
wayland-protocols,17643439,4886107,2025-01-31T18:39:42.129325Z,2016-11-12T19:04:24.504086Z,0.32.6,Generated API for the officials wayland protocol extensions,https://github.com/smithay/wayland-rs
vte_generate_state_changes,17620313,2366229,2025-01-09T07:22:35.809769Z,2019-12-10T20:07:05.497167Z,0.2.0,Proc macro for generating VTE state changes,https://github.com/alacritty/vte
system-deps,17619336,2821969,2024-09-22T13:36:33.807552Z,2020-06-19T13:04:20.470011Z,7.0.3,Discover and configure system dependencies from declarative dependencies in Cargo.toml,https://github.com/gdesmott/system-deps
safe_arch,17610152,3912069,2024-12-21T14:53:27.258820Z,2020-04-29T02:53:57.692152Z,0.7.4,Crate that exposes `core::arch` safely via `#[cfg()]`.,https://github.com/Lokathor/safe_arch
finl_unicode,17585613,1890558,2024-10-29T21:01:38.318561Z,2022-08-30T04:25:43.327071Z,1.3.0,Library for handling Unicode functionality for finl (categories and grapheme segmentation),https://github.com/dahosek/finl_unicode
cranelift-codegen-shared,17577124,2183666,2025-03-20T14:48:20.877491Z,2019-09-24T23:28:59.987055Z,0.118.0,For code shared between cranelift-codegen-meta and cranelift-codegen,https://github.com/bytecodealliance/wasmtime
owning_ref,17527195,438658,2020-02-27T05:48:49.191192Z,2015-07-26T13:02:29.648958Z,0.4.1,A library for creating references that carry their owner with them.,https://github.com/Kimundi/owning-ref-rs
arrow-string,17507850,5397888,2025-03-30T10:39:32.245925Z,2022-12-12T22:48:06.778138Z,54.3.1,String kernels for arrow arrays,https://github.com/apache/arrow-rs
wayland-scanner,17498038,3949907,2025-01-31T18:38:54.723791Z,2015-10-03T11:08:46.131292Z,0.31.6,Wayland Scanner for generating rust APIs from XML wayland protocol files.,https://github.com/smithay/wayland-rs
arrow-row,17479130,5367202,2025-03-30T10:39:40.168754Z,2023-01-03T11:30:51.496621Z,54.3.1,Arrow row format,https://github.com/apache/arrow-rs
uname,17471741,2276903,2016-10-11T18:23:38.774567Z,2016-10-10T22:26:11.574702Z,0.1.1,Name and information about current kernel,https://github.com/icorderi/rust-uname
tokio-postgres,17459455,3399335,2025-02-02T21:08:35.176143Z,2016-12-26T21:48:59.906141Z,0.7.13,"A native, asynchronous PostgreSQL client",https://github.com/sfackler/rust-postgres
wide,17435680,4002251,2025-01-08T01:50:28.212397Z,2019-09-21T19:03:53.121747Z,0.7.32,A crate to help you go wide.,https://github.com/Lokathor/wide
validator_derive,17431109,3846169,2025-01-20T11:39:53.375369Z,2016-12-28T02:58:20.216240Z,0.20.0,Macros 1.1 implementation of #[derive(Validate)],https://github.com/Keats/validator
hmac-drbg,17422028,1944224,2020-06-15T02:27:43.953301Z,2017-11-07T12:10:07.955741Z,0.3.0,Pure Rust implementation of Hmac DRBG.,
winit,17421156,3653487,2025-02-06T10:14:37.539705Z,2016-03-26T18:11:31.722652Z,0.30.9,Cross-platform window creation library.,https://github.com/rust-windowing/winit
tokio-reactor,17337947,488605,2020-02-05T00:24:22.888936Z,2018-02-01T17:43:49.444123Z,0.2.0-alpha.1,"Event loop that drives Tokio I/O resources.
",https://github.com/tokio-rs/tokio
wayland-client,17294699,3957947,2025-01-31T18:39:04.623245Z,2015-04-29T13:20:18.971707Z,0.31.8,"Bindings to the standard C implementation of the wayland protocol, client side.",https://github.com/smithay/wayland-rs
smart-default,17093806,4053025,2023-04-24T15:51:20.102795Z,2017-08-18T14:13:50.175894Z,0.7.1,Rust custom-derive macro for Default with more control on the fields,https://github.com/idanarye/rust-smart-default
basic-toml,17007448,3636736,2025-03-03T04:41:42.794149Z,2023-01-25T05:46:12.068575Z,0.1.10,Minimal TOML library with few dependencies,https://github.com/dtolnay/basic-toml
shared_child,17002949,2071889,2024-08-01T21:27:32.292947Z,2017-02-06T05:15:40.329949Z,1.0.1,a library for using child processes from multiple threads,https://github.com/oconnor663/shared_child.rs
generator,16989983,6779509,2024-12-05T04:49:20.632373Z,2015-09-04T08:32:00.413239Z,0.8.4,Stackfull Generator Library in Rust,https://github.com/Xudong-Huang/generator-rs.git
json,16924202,1648571,2020-03-18T08:39:23.818803Z,2016-06-12T10:45:12.398700Z,0.12.4,JSON implementation in Rust,https://github.com/maciejhirsz/json-rust
aws-http,16921171,569157,2024-08-09T19:35:18.677687Z,2021-10-21T16:42:59.749187Z,0.60.6,This crate is no longer used by the AWS SDK and is deprecated.,https://github.com/smithy-lang/smithy-rs
exr,16816222,3695164,2024-10-31T07:55:23.807392Z,2020-02-15T16:55:49.210752Z,1.73.0,Read and write OpenEXR files without any unsafe code,https://github.com/johannesvollmer/exrs
zbus_names,16804060,4226445,2025-02-05T12:42:12.872977Z,2021-07-30T14:33:18.906813Z,4.2.0,A collection of D-Bus bus names types,https://github.com/dbus2/zbus/
tikv-jemalloc-ctl,16799336,5874882,2024-07-14T15:43:43.289591Z,2020-07-21T11:48:38.891203Z,0.6.0,"A safe wrapper over jemalloc's control and introspection APIs
",https://github.com/tikv/jemallocator
kube,16791976,5366987,2025-03-12T15:13:01.722815Z,2019-04-29T18:35:09.743716Z,0.99.0,Kubernetes client and async controller runtime,https://github.com/kube-rs/kube
core-graphics,16753767,3591137,2024-08-11T11:21:34.779602Z,2015-02-12T10:49:20.286045Z,0.24.0,Bindings to Core Graphics for macOS,https://github.com/servo/core-foundation-rs
rle-decode-fast,16727089,2459640,2022-01-30T22:56:56.002573Z,2019-06-30T14:01:50.454Z,1.0.3,"Deprecated: this is available in stable Rust since 1.53 as Vec::extend_from_within().

Previsouly, the fastest way to implement any kind of decoding for Run Length Encoded data in Rust.
",https://github.com/WanzenBug/rle-decode-helper
tokio-threadpool,16718135,495973,2020-02-04T23:50:31.496978Z,2018-02-07T05:57:38.438991Z,0.2.0-alpha.1,"A task scheduler backed by a work-stealing thread pool.
",https://github.com/tokio-rs/tokio
nalgebra-macros,16705056,3765378,2024-06-23T13:32:14.671723Z,2021-06-02T13:28:27.350924Z,0.2.2,Procedural macros for nalgebra,https://github.com/dimforge/nalgebra
murmur3,16696062,8051321,2022-10-10T02:58:14.355811Z,2015-12-06T20:21:30.245881Z,0.5.2,A rust implementation of Murmur3 hash,https://github.com/stusmall/murmur3
cbc,16690105,3211120,2024-08-14T16:42:14.169936Z,2021-04-10T07:39:36.254895Z,0.2.0-pre.2,Cipher Block Chaining (CBC) block cipher mode of operation,https://github.com/RustCrypto/block-modes
lexical,16605437,2502059,2024-12-08T21:01:14.723651Z,2018-10-29T21:54:16.642711Z,7.0.4,"Lexical, to- and from-string conversion routines.",https://github.com/Alexhuszagh/rust-lexical
block-modes,16581137,731749,2022-02-13T13:48:33.120358Z,2017-04-28T23:39:07.909026Z,0.9.1,This crate is deprecated. Use crates from https://github.com/RustCrypto/block-modes instead.,
gcc,16514009,657789,2018-10-08T22:06:05.796359Z,2014-11-11T06:37:38.477744Z,0.3.55,"**Deprecated** crate, renamed to `cc`

A build-time dependency for Cargo build scripts to assist in invoking the native
C compiler to compile native C code into a static archive to be linked into Rust
code.
",https://github.com/alexcrichton/gcc-rs
iso8601,16476125,3266825,2025-02-02T13:55:08.677236Z,2015-11-03T12:19:09.817800Z,0.6.2,Parsing ISO8601 dates using nom,https://github.com/badboy/iso8601
paste-impl,16475254,477866,2020-06-21T01:15:54.327585Z,2018-11-01T02:51:53.045486Z,0.1.18,Implementation detail of the `paste` crate,https://github.com/dtolnay/paste
serde_test,16467682,2002462,2024-08-05T07:14:44.127884Z,2016-06-29T08:15:45.928821Z,1.0.177,Token De/Serializer for testing De/Serialize implementations,https://github.com/serde-rs/test
jemallocator,16448368,1460961,2023-07-27T16:19:11.225828Z,2016-01-21T01:19:18.642439Z,0.5.4,"A Rust allocator backed by jemalloc
",https://github.com/tikv/jemallocator
dlib,16412999,3219858,2023-06-05T08:56:52.139053Z,2015-08-12T16:43:36.862715Z,0.5.2,Helper macros for handling manually loading optional system libraries.,https://github.com/elinorbgr/dlib
aws-sdk-ssooidc,16397503,5370078,2025-03-28T19:05:26.168739Z,2021-05-07T22:07:38.916302Z,1.65.0,AWS SDK for AWS SSO OIDC,https://github.com/awslabs/aws-sdk-rust
libsecp256k1-gen-ecmult,16368933,2094825,2021-09-17T11:18:52.039743Z,2020-03-25T16:31:58.943141Z,0.3.0,Generator function of const_gen for libsecp256k1.,https://github.com/paritytech/libsecp256k1
libsecp256k1-core,16363964,2096142,2021-09-17T11:18:22.532527Z,2020-03-25T16:30:28.327565Z,0.3.0,Core functions for pure Rust secp256k1 implementation.,https://github.com/paritytech/libsecp256k1
libsecp256k1-gen-genmult,16359005,2094851,2021-09-17T11:18:59.238452Z,2020-03-25T16:32:40.409625Z,0.3.0,Generator function of const for libsecp256k1.,https://github.com/paritytech/libsecp256k1
wasm-bindgen-test,16304765,1990118,2025-01-12T23:19:12.332641Z,2018-07-26T22:11:44.969235Z,0.3.50,Internal testing crate for wasm-bindgen,https://github.com/rustwasm/wasm-bindgen
tokio-tcp,16274520,448223,2020-02-05T00:22:14.110010Z,2018-02-01T17:45:27.784927Z,0.2.0-alpha.1,"TCP bindings for tokio.
",https://github.com/tokio-rs/tokio
multipart,16271362,924052,2021-05-29T03:47:28.226106Z,2014-11-28T23:36:47.685449Z,0.18.0,A backend-agnostic extension for HTTP libraries that provides support for POST multipart/form-data requests on both client and server.,http://github.com/abonander/multipart
is_ci,16241459,2470658,2024-02-04T02:57:53.234697Z,2021-09-22T16:03:35.825781Z,1.2.0,Super lightweight CI environment checker. Just tells you if you're in CI or not without much fuss.,https://github.com/zkat/is_ci
x11-dl,16239155,3040179,2023-01-18T20:43:48.234556Z,2015-05-07T17:20:24.802272Z,2.21.0,X11 library bindings for Rust,https://github.com/AltF02/x11-rs.git
tokio-openssl,16234718,1465935,2024-09-14T17:13:54.196612Z,2016-12-23T00:51:18.886905Z,0.6.5,"An implementation of SSL streams for Tokio backed by OpenSSL
",https://github.com/tokio-rs/tokio-openssl
libflate_lz77,16219511,2869840,2024-04-30T12:26:13.328290Z,2020-02-25T12:25:19.147575Z,2.1.0,LZ77 encoder for libflate crate,https://github.com/sile/libflate
slug,16203359,2326150,2024-08-15T20:04:40.170528Z,2015-07-13T16:35:01.819804Z,0.1.6,Convert a unicode string to a slug,https://github.com/Stebalien/slug-rs
parquet,16192943,5487598,2025-03-30T10:40:15.765966Z,2018-04-01T04:06:11.702517Z,54.3.1,Apache Parquet implementation in Rust,https://github.com/apache/arrow-rs
arrow-csv,16171979,5027113,2025-03-30T10:38:49.473245Z,2022-11-14T22:07:18.501094Z,54.3.1,Support for parsing CSV format to and from the Arrow format,https://github.com/apache/arrow-rs
arrow-json,16127403,5023077,2025-03-30T10:38:58.790504Z,2022-11-14T22:08:17.670601Z,54.3.1,Support for parsing JSON format to and from the Arrow format,https://github.com/apache/arrow-rs
litrs,16089893,8852329,2023-10-18T18:59:24.963515Z,2021-05-24T19:28:16.798772Z,0.4.1,"Parse and inspect Rust literals (i.e. tokens in the Rust programming language
representing fixed values). Particularly useful for proc macros, but can also
be used outside of a proc-macro context.
",https://github.com/LukasKalbertodt/litrs/
wasm-bindgen-test-macro,16076746,1941233,2025-01-12T23:17:35.954051Z,2018-07-26T22:09:24.266058Z,0.3.50,Internal testing macro for wasm-bindgen,https://github.com/rustwasm/wasm-bindgen
plain,16059857,2801527,2017-11-24T15:28:33.966750Z,2017-04-03T16:54:03.944955Z,0.2.3,A small Rust library that allows users to reinterpret data of certain types safely.,https://github.com/randomites/plain
im,15996292,2308979,2022-04-29T14:12:56.603719Z,2017-04-17T16:06:00.142286Z,15.1.0,Immutable collection datatypes,https://github.com/bodil/im-rs
tera,15986975,2435295,2024-05-27T19:14:03.867994Z,2016-04-04T16:03:33.335054Z,1.20.0,Template engine based on Jinja2/Django templates,https://github.com/Keats/tera
lebe,15970294,3573742,2022-08-16T11:04:42.317606Z,2020-02-15T01:49:18.846177Z,0.5.2,"Tiny, dead simple, high performance endianness conversions with a generic API",https://github.com/johannesvollmer/lebe
kube-core,15965682,5350731,2025-03-12T15:09:53.840430Z,2021-05-18T22:04:01.614081Z,0.99.0,"Kube shared types, traits and client-less behavior",https://github.com/kube-rs/kube
core2,15934484,3196428,2022-01-29T12:38:59.391946Z,2021-02-13T17:58:42.892856Z,0.4.0,The bare essentials of std::io for use in no_std. Alloc support is optional.,https://github.com/bbqsrc/core2
cached,15869250,5066051,2025-03-03T03:57:00.361746Z,2017-03-28T00:36:06.017836Z,0.55.1,Generic cache implementations and simplified function memoization,https://github.com/jaemk/cached
num-cmp,15804654,3677529,2017-03-02T12:27:31.839910Z,2017-03-02T12:27:31.839910Z,0.1.0,Comparison between differently typed numbers,https://github.com/lifthrasiir/num-cmp
r2d2,15803447,1285266,2022-06-21T23:20:03.463039Z,2014-11-22T06:10:04.773310Z,0.8.10,A generic connection pool,https://github.com/sfackler/r2d2
nb,15732876,3257760,2023-03-08T18:53:41.568209Z,2018-01-10T18:36:16.755519Z,1.1.0,Minimal non-blocking I/O layer,https://github.com/rust-embedded/nb
ws2_32-sys,15732322,320592,2015-12-16T00:01:49.263868Z,2015-01-26T18:58:06.319376Z,0.2.1,Contains function definitions for the Windows API library ws2_32. See winapi for types and constants.,https://github.com/retep998/winapi-rs
kube-client,15690980,5346326,2025-03-12T15:10:44.904904Z,2021-10-14T09:23:29.139517Z,0.99.0,Kubernetes client,https://github.com/kube-rs/kube
tokio-sync,15678458,469294,2020-02-05T00:23:14.285472Z,2019-01-25T18:30:48.632173Z,0.2.0-alpha.6,"Synchronization utilities.
",https://github.com/tokio-rs/tokio
libnghttp2-sys,15662492,1799388,2025-01-11T23:31:58.127959Z,2018-09-12T19:57:19.785896Z,0.1.11+1.64.0,"FFI bindings for libnghttp2 (nghttp2)
",https://github.com/alexcrichton/nghttp2-rs
data-encoding-macro,15636099,3795709,2025-02-09T10:55:38.514983Z,2017-11-18T21:35:58.384825Z,0.1.17,Macros for data-encoding,https://github.com/ia0/data-encoding
data-encoding-macro-internal,15629570,3795401,2025-02-09T10:55:30.450137Z,2017-11-18T21:34:16.969522Z,0.1.15,Internal library for data-encoding-macro,https://github.com/ia0/data-encoding
loom,15596892,6130081,2024-04-23T09:24:01.042539Z,2018-12-07T19:58:42.545465Z,0.7.2,Permutation testing for concurrent code,https://github.com/tokio-rs/loom
more-asserts,15563030,1410218,2022-10-01T08:33:45.677928Z,2016-06-18T15:22:24.617671Z,0.3.1,Small library providing additional assert_* and debug_assert_* macros.,https://github.com/thomcc/rust-more-asserts
backtrace-sys,15515583,222622,2020-04-30T15:50:55.857374Z,2015-06-10T08:23:32.494562Z,0.1.37,"Bindings to the libbacktrace gcc library
",https://github.com/alexcrichton/backtrace-rs
soketto,15511990,2186751,2024-12-02T11:17:40.439226Z,2019-06-04T14:34:38.066236Z,0.8.1,A websocket protocol implementation.,https://github.com/paritytech/soketto
slog-term,15487053,1440015,2024-02-18T23:26:26.482354Z,2016-07-11T07:05:51.677959Z,2.9.1,Unix terminal drain and formatter for slog-rs,https://github.com/slog-rs/term
include_dir_macros,15474526,2904898,2024-06-17T14:46:12.025696Z,2021-11-14T15:55:22.487123Z,0.7.4,The procedural macro used by include_dir,https://github.com/Michael-F-Bryan/include_dir
getset,15434941,2851339,2025-02-27T18:04:14.559233Z,2017-06-02T09:45:04.544760Z,0.1.5,"Getset, we're ready to go!

A procedural macro for generating the most basic getters and setters on fields.
",https://github.com/jbaublitz/getset
cssparser,15389741,2923917,2025-03-20T18:23:57.167189Z,2014-11-14T18:40:57.883020Z,0.35.0,Rust implementation of CSS Syntax Level 3,https://github.com/servo/rust-cssparser
aes-soft,15362534,560189,2021-05-03T18:44:22.356330Z,2018-03-04T13:10:17.816613Z,0.99.99,DEPRECATED: replaced by the `aes` crate,https://github.com/RustCrypto/block-ciphers/tree/master/aes
etcetera,15351172,5372842,2025-03-03T15:59:48.972603Z,2020-05-16T14:28:08.018938Z,0.10.0,"An unopinionated library for obtaining configuration, data, cache, & other directories",https://github.com/lunacookies/etcetera
tokio-current-thread,15335165,427857,2020-02-05T00:32:49.993751Z,2018-02-08T19:50:27.564691Z,0.2.0-alpha.1,"Single threaded executor which manage many tasks concurrently on the current thread.
",https://github.com/tokio-rs/tokio
rdkafka,15316755,1415399,2024-11-25T11:55:54.585839Z,2016-10-29T14:48:37.991220Z,0.37.0,Rust wrapper for librdkafka,https://github.com/fede1024/rust-rdkafka
aws-smithy-client,15279444,475750,2024-01-18T18:03:28.213040Z,2021-10-21T16:44:28.916846Z,0.60.3,This crate is no longer used by smithy-rs and is deprecated.,https://github.com/smithy-lang/smithy-rs
fern,15262888,1781687,2024-12-15T08:51:00.187622Z,2014-12-19T23:32:30.645409Z,0.7.1,"Simple, efficient logging",https://github.com/daboross/fern
buf_redux,15248488,575535,2019-07-31T18:22:11.723122Z,2016-02-07T11:08:01.020120Z,0.8.4,Drop-in replacements for buffered I/O in `std::io` with extra features.,https://github.com/abonander/buf_redux
async-attributes,15234564,2400876,2021-01-23T15:46:15.118331Z,2019-07-01T08:23:56.515855Z,1.1.2,Experimental language-level polyfills for Async Rust.,https://github.com/async-rs/async-attributes
id-arena,15231504,2505824,2019-02-16T00:52:19.034325Z,2018-11-12T04:23:09.528404Z,2.2.1,"A simple, id-based arena.",https://github.com/fitzgen/id-arena
rusoto_credential,15219628,555953,2022-04-25T03:45:41.872028Z,2016-11-23T03:32:47.325742Z,0.48.0,AWS credential tooling,https://github.com/rusoto/rusoto
aws-smithy-http-tower,15198875,455788,2024-01-18T18:03:37.386213Z,2021-10-20T23:10:22.339536Z,0.60.3,This crate is no longer used by smithy-rs and is deprecated.,https://github.com/smithy-lang/smithy-rs
regalloc2,15194246,2829078,2025-04-07T18:04:18.439080Z,2021-12-03T04:44:42.997675Z,0.11.2,Backtracking register allocator inspired from IonMonkey,https://github.com/bytecodealliance/regalloc2
termios,15194059,2061843,2020-10-13T02:04:58.394222Z,2015-02-01T21:38:32.491142Z,0.3.3,Safe bindings for the termios library.,https://github.com/dcuddeback/termios-rs
rusoto_core,15130499,544435,2022-04-25T03:48:30.452153Z,2017-05-20T00:54:37.330410Z,0.48.0,AWS SDK for Rust - Core,https://github.com/rusoto/rusoto
opener,15127606,1738711,2024-08-06T02:50:46.614005Z,2018-08-08T08:37:18.281238Z,0.7.2,Open a file or link using the system default program.,https://github.com/Seeker14491/opener
cloudabi,15089076,371358,2019-12-22T05:56:40.403850Z,2017-12-24T11:03:25.195069Z,0.1.0,Low level interface to CloudABI. Contains all syscalls and related types.,https://github.com/nuxinl/cloudabi
smithay-client-toolkit,15077247,4208402,2024-07-15T21:49:23.606060Z,2018-04-26T10:58:18.773186Z,0.19.2,Toolkit for making client wayland applications.,https://github.com/smithay/client-toolkit
napi,15075080,1415632,2025-03-22T05:47:43.733739Z,2017-11-30T02:07:21.479011Z,3.0.0-alpha.33,N-API bindings,https://github.com/napi-rs/napi-rs
build_const,15068787,866035,2021-04-20T02:31:13.785806Z,2017-05-29T21:48:33.285186Z,0.2.2,library for creating importable constants from build.rs or a script,https://github.com/vitiral/build_const
unicode-id,15045673,2835725,2024-09-19T07:32:58.942722Z,2022-01-29T13:33:10.265050Z,0.3.5,"Determine whether characters have the ID_Start
or ID_Continue properties according to
Unicode Standard Annex #31.
",https://github.com/Boshen/unicode-id
bitcoin_hashes,15042258,2706122,2024-12-17T15:42:53.301573Z,2018-12-08T21:48:23.156766Z,0.16.0,Hash functions used by the rust-bitcoin eccosystem,https://github.com/rust-bitcoin/rust-bitcoin
pprof,15023459,4589063,2024-11-08T06:28:56.250073Z,2019-11-04T03:29:16.405748Z,0.14.0,An internal perf tools for rust programs.,https://github.com/tikv/pprof-rs
duct,15006854,1743127,2023-12-22T18:35:36.375016Z,2016-02-20T18:55:39.791588Z,0.13.7,a library for running child processes,https://github.com/oconnor663/duct.rs
derive-new,14952313,4621142,2024-08-29T02:16:37.289884Z,2016-10-08T02:15:51.576678Z,0.7.0,`#[derive(new)]` implements simple constructor functions for structs and enums.,https://github.com/nrc/derive-new
syn_derive,14952091,1598437,2024-11-06T17:13:52.782721Z,2022-11-07T23:52:26.435966Z,0.2.0,Derive macros for `syn::Parse` and `quote::ToTokens`,https://github.com/Kyuuhachi/syn_derive
objc,14917626,2339840,2019-10-18T18:36:52.822361Z,2014-11-23T06:59:07.960905Z,0.2.7,Objective-C Runtime bindings and wrapper for Rust.,http://github.com/SSheldon/rust-objc
diesel_derives,14895884,1511194,2025-03-03T17:45:28.772492Z,2017-11-28T23:51:58.123857Z,2.2.4,"You should not use this crate directly, it is internal to Diesel.",https://github.com/diesel-rs/diesel/
kqueue-sys,14885912,3875762,2023-08-06T11:36:16.920018Z,2016-10-19T07:05:16.201276Z,1.0.4,Low-level kqueue interface for BSDs,https://gitlab.com/rust-kqueue/rust-kqueue-sys
sourcemap,14878173,3036970,2024-11-26T12:10:10.222201Z,2016-06-05T15:39:39.923447Z,9.1.2,Basic sourcemap handling for Rust,https://github.com/getsentry/rust-sourcemap
malloc_buf,14855501,2342484,2017-02-20T05:43:29.488400Z,2015-01-17T21:47:53.728189Z,1.0.0,Structs for handling malloc'd memory passed to Rust.,https://github.com/SSheldon/malloc_buf
owned_ttf_parser,14835777,3383705,2024-10-04T07:45:41.147390Z,2020-04-21T19:18:43.605930Z,0.25.0,ttf-parser plus support for owned data,https://github.com/alexheretic/owned-ttf-parser
scrypt,14819163,2995063,2024-10-07T19:53:44.378025Z,2016-10-06T21:29:14.810296Z,0.12.0-pre.2,Scrypt password-based key derivation function,https://github.com/RustCrypto/password-hashes
cargo_toml,14761705,2516617,2025-03-10T16:05:49.420984Z,2018-06-14T00:51:25.020558Z,0.22.1,`Cargo.toml` struct definitions for parsing with Serde,https://gitlab.com/lib.rs/cargo_toml
wat,14759705,1979832,2025-04-01T16:45:03.738591Z,2016-09-23T00:08:16.333920Z,1.228.0,"Rust parser for the WebAssembly Text format, WAT
",https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wat
slog-async,14758721,1438435,2023-08-26T22:31:33.401865Z,2017-02-19T08:14:16.104315Z,2.8.0,Asynchronous drain for slog-rs,https://github.com/slog-rs/async
diesel,14724241,1576239,2025-04-04T11:26:56.727603Z,2015-11-29T17:53:47.748928Z,2.2.9,"A safe, extensible ORM and Query Builder for PostgreSQL, SQLite, and MySQL",https://github.com/diesel-rs/diesel
quick-protobuf,14720393,3545169,2022-11-22T08:49:08.690474Z,2017-01-25T10:44:30.057060Z,0.8.1,A pure Rust protobuf (de)serializer. Quick.,https://github.com/tafia/quick-protobuf
kqueue,14713502,3736955,2023-08-06T12:01:05.612484Z,2017-01-15T07:34:43.684443Z,1.0.8,kqueue interface for BSDs,https://gitlab.com/rust-kqueue/rust-kqueue
enum-map,14703126,3490550,2023-11-24T07:41:35.458027Z,2017-05-16T20:57:36.563826Z,3.0.0-beta.2,A map with C-like enum keys represented internally as an array,https://codeberg.org/xfix/enum-map
multibase,14632478,3587557,2020-11-06T12:24:39.121601Z,2017-01-19T21:14:58.886776Z,0.9.1,multibase in rust,https://github.com/multiformats/rust-multibase
rlp,14632419,2653412,2024-09-11T10:15:27.498004Z,2016-10-13T19:48:32.711768Z,0.6.1,"Recursive-length prefix encoding, decoding, and compression",https://github.com/paritytech/parity-common
derive_more-impl,14621231,8902571,2025-02-03T20:17:52.618987Z,2023-07-23T18:50:01.297935Z,2.0.1,Internal implementation of `derive_more` crate,https://github.com/JelteF/derive_more
linked_hash_set,14618865,1866893,2024-12-22T08:10:02.415783Z,2017-10-25T13:44:18.615370Z,0.1.5,HashSet with insertion ordering,https://github.com/alexheretic/linked-hash-set
mach2,14617791,3616489,2023-12-19T15:33:17.483073Z,2021-11-15T16:48:14.915464Z,0.4.2,A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.,https://github.com/JohnTitor/mach2
enum-map-derive,14574869,3474119,2023-11-24T07:40:53.606809Z,2017-05-16T20:56:33.751851Z,1.0.0-beta.1,Macros 1.1 implementation of #[derive(Enum)],https://codeberg.org/xfix/enum-map
test-case-macros,14559865,5501939,2023-11-17T20:16:40.597912Z,2022-05-18T09:01:47.096139Z,3.3.1,Provides #[test_case(...)] procedural macro attribute for generating parametrized test cases easily,https://github.com/frondeus/test-case
napi-sys,14552779,1334621,2024-12-18T15:54:06.416693Z,2017-11-30T02:04:20.893393Z,3.0.0-alpha.1,NodeJS N-API raw binding,https://github.com/napi-rs/napi-rs
fslock,14531920,3112299,2021-12-20T19:12:35.808930Z,2020-01-01T05:47:08.522751Z,0.2.1,A library to use files as locks,https://github.com/brunoczim/fslock
ordered-stream,14515608,3359518,2023-02-11T15:42:09.415977Z,2021-10-28T01:04:58.729316Z,0.2.0,Streams that are ordered relative to external events,https://github.com/danieldg/ordered-stream
rusoto_signature,14484701,537559,2022-04-25T03:47:53.557045Z,2019-11-20T04:10:26.775826Z,0.48.0,AWS SDK for Rust - Request Signing,https://github.com/rusoto/rusoto
document-features,14483027,8442562,2025-02-16T10:01:46.849072Z,2022-02-01T16:47:37.171802Z,0.2.11,Extract documentation for the feature flags from comments in Cargo.toml,https://github.com/slint-ui/document-features
graphql-parser,14482723,2611660,2024-12-03T22:37:33.502777Z,2018-02-05T00:29:42.939990Z,0.4.1,"    A parser, AST and serializer for graphql query language and scheme
    definition language (sometimes called IDL).
",
merlin,14451861,1805186,2021-01-28T20:43:26.299029Z,2018-08-15T23:40:43.114488Z,3.0.0,Composable proof transcripts for public-coin arguments of knowledge,https://github.com/zkcrypto/merlin
sval,14450187,2989529,2025-03-24T08:29:52.782256Z,2018-12-03T01:08:10.894180Z,2.14.1,"Streaming, structured value serialization",https://github.com/sval-rs/sval
unic-ucd-segment,14450049,2323461,2019-03-03T05:12:31.476662Z,2018-02-07T05:03:04.167589Z,0.9.0,UNIC â Unicode Character Database â Segmentation Properties,https://github.com/open-i18n/rust-unic/
retry-policies,14420340,6122306,2024-05-10T17:05:01.447886Z,2021-08-11T16:37:15.182845Z,0.4.0,A collection of plug-and-play retry policies for Rust projects.,https://github.com/TrueLayer/retry-policies
unic-segment,14395813,2321727,2019-03-03T07:45:10.753005Z,2018-02-07T05:04:20.424581Z,0.9.0,UNIC â Unicode Text Segmentation Algorithms,https://github.com/open-i18n/rust-unic/
blake2s_simd,14386508,3147089,2025-02-04T19:25:45.879837Z,2019-05-21T21:39:31.415925Z,1.0.3,a pure Rust BLAKE2s implementation with dynamic SIMD,https://github.com/oconnor663/blake2_simd
kube-runtime,14303932,4963783,2025-03-12T15:12:07.926875Z,2020-07-19T13:55:29.871866Z,0.99.0,Kubernetes controller runtime,https://github.com/kube-rs/kube
simplelog,14276554,1490298,2024-03-04T11:47:32.064773Z,2016-03-31T12:15:16.057689Z,0.12.2,A simple and easy-to-use logging facility for Rust's log crate,https://github.com/drakulix/simplelog.rs
fuchsia-zircon,14254498,305395,2018-01-05T19:30:58.447867Z,2017-09-26T17:15:24.132976Z,0.3.3,Rust bindings for the Zircon kernel,https://fuchsia.googlesource.com/garnet/
asynchronous-codec,14253538,2040050,2023-10-11T16:03:12.245241Z,2021-01-06T11:13:16.160991Z,0.7.0,Utilities for encoding and decoding frames using `async/await`,https://github.com/mxinden/asynchronous-codec
validator_types,14249776,2216387,2022-07-25T12:23:57.154984Z,2020-09-09T18:38:24.822389Z,0.16.0,Basic type for validator and validator_derive,https://github.com/Keats/validator
enumset,14226646,2358057,2024-07-22T21:29:31.363506Z,2017-10-29T10:29:58.330155Z,1.1.5,A library for creating compact sets of enums.,https://github.com/Lymia/enumset
fuchsia-zircon-sys,14220008,305691,2024-06-05T17:55:15.733084Z,2017-09-26T17:14:07.035062Z,0.4.0-alpha.2,Types for low-level Rust bindings for the Zircon kernel,https://fuchsia.googlesource.com
ethereum-types,14192336,1821898,2024-09-12T11:05:19.449801Z,2017-12-29T16:25:52.172480Z,0.15.1,Ethereum types,
output_vt100,14191437,296228,2022-02-12T22:53:53.866316Z,2019-02-14T01:05:34.508030Z,0.1.3,Utility to activate escape codes in Windows' CMD and PowerShell,https://github.com/Phundrak/output-vt100-rs
mockito,14180272,6339105,2025-03-04T09:29:47.970681Z,2016-01-10T22:20:34.448741Z,1.7.0,HTTP mocking for Rust.,https://github.com/lipanski/mockito
x11rb,14179615,3347673,2024-05-01T08:06:21.605655Z,2019-10-11T12:11:30.540106Z,0.13.1,Rust bindings to X11,https://github.com/psychon/x11rb
zune-inflate,14169086,3570012,2023-04-30T12:46:39.401773Z,2022-12-31T20:34:03.390104Z,0.2.54,A heavily optimized deflate decompressor in Pure Rust,
docopt,14169067,582484,2021-03-12T01:47:57.823841Z,2014-11-20T22:44:11.802179Z,1.1.1,Command line argument parsing.,https://github.com/docopt/docopt.rs
lockfree-object-pool,14160717,6076961,2024-05-19T13:25:35.828401Z,2021-01-21T07:28:58.633781Z,0.1.6,A thread-safe object pool collection with automatic return and attach/detach semantics.,https://github.com/EVaillant/lockfree-object-pool
ghost,14153682,479036,2025-03-03T23:30:15.780881Z,2018-12-23T21:50:20.028234Z,0.1.19,Define your own PhantomData,https://github.com/dtolnay/ghost
ruzstd,14148567,3877270,2024-12-23T16:00:03.606528Z,2019-11-04T10:57:24.512851Z,0.8.0,A decoder for the zstd compression format,https://github.com/KillingSpark/zstd-rs
dtoa-short,14129378,2669018,2024-06-07T11:52:25.119732Z,2017-08-14T06:44:34.838830Z,0.3.5,Serialize float number and truncate to certain precision,https://github.com/upsuper/dtoa-short
cached_proc_macro,14127068,4851177,2025-03-03T03:56:35.896476Z,2020-05-31T03:38:44.073628Z,0.24.0,Generic cache implementations and simplified function memoization,https://github.com/jaemk/cached
cssparser-macros,14103235,2643692,2023-06-04T10:13:01.560015Z,2017-02-25T16:53:34.899824Z,0.6.1,Procedural macros for cssparser,https://github.com/servo/rust-cssparser
ethbloom,14088144,1805037,2024-09-12T11:06:00.486700Z,2017-08-03T09:00:46.903023Z,0.14.1,Ethereum bloom filter,https://github.com/paritytech/parity-common
sqlparser_derive,14068640,3929292,2024-12-18T23:00:16.557211Z,2022-12-28T17:06:48.938188Z,0.3.0,Procedural (proc) macros for sqlparser,https://github.com/sqlparser-rs/sqlparser-rs
rustyline,14050968,1641769,2024-11-15T16:13:51.130773Z,2015-09-05T23:21:20.022538Z,15.0.0,"Rustyline, a readline implementation based on Antirez's Linenoise",https://github.com/kkawakam/rustyline
block,14029610,2244626,2016-05-08T18:37:19.417724Z,2015-04-17T06:02:40.648007Z,0.1.6,Rust interface for Apple's C language extension of blocks.,http://github.com/SSheldon/rust-block
scoped_threadpool,14017767,529163,2018-02-20T21:53:55.075569Z,2015-08-22T13:43:25.266977Z,0.1.9,A library for scoped and cached threadpools.,https://github.com/Kimundi/scoped-threadpool-rs
zopfli,13998219,5967756,2024-05-18T17:27:36.340781Z,2016-03-09T17:30:12.561057Z,0.8.1,A Rust implementation of the Zopfli compression algorithm.,https://github.com/zopfli-rs/zopfli
ripemd,13995030,2632647,2025-03-05T21:17:17.235955Z,2017-02-13T17:28:13.942799Z,0.2.0-pre.5,Pure Rust implementation of the RIPEMD hash functions,https://github.com/RustCrypto/hashes
napi-derive,13967748,1365192,2025-03-16T16:12:26.541200Z,2017-11-30T02:08:00.676899Z,3.0.0-alpha.29,N-API procedural macros,https://github.com/napi-rs/napi-rs
gix-features,13966496,2834281,2025-04-06T06:13:09.052197Z,2023-02-17T09:40:15.427100Z,0.41.1,A crate to integrate various capabilities using compile-time feature flags,https://github.com/GitoxideLabs/gitoxide
askama_escape,13959720,1873488,2025-03-27T16:51:18.318471Z,2018-11-07T20:38:00.547881Z,0.13.0,"HTML escaping, extracted from Askama",https://github.com/askama-rs/askama
enumset_derive,13937591,2339679,2024-07-22T21:29:20.257952Z,2018-11-08T11:35:54.427434Z,0.10.0,An internal helper crate for enumset. Not public API.,https://github.com/Lymia/enumset
wasite,13864394,4871833,2022-12-04T20:03:04.093547Z,2022-12-04T20:03:04.093547Z,0.1.0,WASI Terminal Environment API,https://github.com/ardaku/wasite
serde_regex,13859363,2566471,2020-06-17T08:52:22.847201Z,2018-02-09T16:19:28.214149Z,1.1.0,"    A serde wrapper that (de)serializes regex as strings
",
fs4,13812422,3089670,2025-03-08T07:55:58.680118Z,2021-12-31T12:10:21.897583Z,0.13.1,"No libc, pure Rust cross-platform file locks. Original fs2, now supports async and replace libc by rustix.",https://github.com/al8n/fs4-rs
zvariant_utils,13736645,3993945,2025-02-05T12:25:17.722346Z,2023-03-07T22:48:32.746413Z,3.2.0,Various utilities used internally by the zvariant crate.,https://github.com/dbus2/zbus/
opentelemetry-datadog,13731950,4288166,2025-04-02T15:02:11.765918Z,2021-03-24T02:18:19.325599Z,0.17.0,Datadog exporters and propagators for OpenTelemetry,https://github.com/open-telemetry/opentelemetry-rust-contrib/tree/main/opentelemetry-datadog
roxmltree,13726614,2766675,2024-05-23T14:01:00.153889Z,2018-08-31T16:32:36.315456Z,0.20.0,Represent an XML as a read-only tree.,https://github.com/RazrFalcon/roxmltree
reqwest-retry,13720111,5998707,2024-11-11T18:30:48.470620Z,2021-08-12T18:36:05.031206Z,0.7.0,Retry middleware for reqwest.,https://github.com/TrueLayer/reqwest-middleware
typed-builder-macro,13684683,5826020,2025-03-20T11:43:20.987712Z,2023-07-05T22:04:55.591584Z,0.21.0,Compile-time type-checked builder derive,https://github.com/idanarye/rust-typed-builder
treediff,13665172,1865452,2024-03-27T14:57:00.714423Z,2017-02-05T16:19:10.674108Z,5.0.0,Find the difference between arbitrary data structures,https://github.com/Byron/treediff-rs
quickcheck_macros,13662635,3296999,2021-01-08T13:47:25.264395Z,2014-11-21T00:21:04.504113Z,1.0.0,A macro attribute for quickcheck.,https://github.com/BurntSushi/quickcheck
clipboard-win,13618361,2795784,2024-07-07T07:05:57.611833Z,2015-07-12T15:24:51.887425Z,5.4.0,Provides simple way to interact with Windows clipboard.,https://github.com/DoumanAsh/clipboard-win
selectors,13602507,2577359,2025-03-31T11:02:12.837563Z,2014-12-29T15:42:13.431991Z,0.27.0,CSS Selectors matching for Rust,https://github.com/servo/stylo
scc,13578356,7548316,2025-02-05T19:36:12.470794Z,2020-11-20T08:20:32.008988Z,2.3.3,High-performance containers and utilities for concurrent and asynchronous programming,https://github.com/wvwwvwwv/scalable-concurrent-containers/
sys-info,13526258,1174074,2021-10-21T07:05:29.396571Z,2015-02-21T16:01:13.590245Z,0.9.1,"Get system information in Rust.

For now it supports Linux, Mac OS X, illumos, Solaris, FreeBSD, OpenBSD, and Windows.
",https://github.com/FillZpp/sys-info-rs
directories-next,13522503,2711365,2020-10-22T03:34:05.036126Z,2020-05-06T15:48:15.865831Z,2.0.0,"A tiny mid-level library that provides platform-specific standard locations of
directories for config, cache and other data on Linux, Windows and macOS by
leveraging the mechanisms defined by the XDG base/user directory specifications
on Linux, the Known Folder API on Windows, and the Standard Directory guidelines
on macOS.
",https://github.com/xdg-rs/dirs/tree/master/directories
cfb,13486095,2169750,2024-04-15T12:43:20.742740Z,2017-03-20T00:27:43.820777Z,0.10.0,Read/write Compound File Binary (structured storage) files,https://github.com/mdsteele/rust-cfb
cty,13472569,831845,2021-10-09T11:56:44.278572Z,2017-05-25T00:53:07.466092Z,0.2.2,Type aliases to C types like c_int for use with bindgen,https://github.com/japaric/cty
console-api,13450926,4422817,2024-10-24T19:45:35.593591Z,2021-12-16T23:31:51.820869Z,0.8.1,"Protobuf wire format bindings for the Tokio console.
",https://github.com/tokio-rs/console/
async-mutex,13404017,502441,2025-04-01T15:48:29.169070Z,2019-06-02T09:30:02.467930Z,1.4.1,Async mutex,https://github.com/stjepang/async-lock
console-subscriber,13403782,4414421,2024-10-24T19:46:58.525627Z,2021-12-16T23:44:58.414893Z,0.4.1,"A `tracing-subscriber::Layer` for collecting Tokio console telemetry.
",https://github.com/tokio-rs/console/
glib-sys,13402519,1947726,2025-02-16T11:11:30.456004Z,2015-05-12T17:57:35.360962Z,0.20.9,FFI bindings to libglib-2.0,https://github.com/gtk-rs/gtk-rs-core
calloop,13355805,4171698,2024-12-12T03:37:16.414405Z,2018-08-24T16:57:45.869464Z,0.14.2,A callback-based event loop,https://github.com/Smithay/calloop
slog-scope,13336381,1270887,2021-01-12T20:21:38.224739Z,2016-09-27T05:04:23.817835Z,4.4.0,Logging scopes for slog-rs,https://github.com/slog-rs/scope
napi-derive-backend,13317739,1358401,2025-03-16T16:12:11.776888Z,2021-09-22T17:40:03.840243Z,2.0.0-alpha.28,Codegen backend for napi procedural macro,https://github.com/napi-rs/napi-rs
gobject-sys,13292161,1935055,2025-02-16T11:11:39.400781Z,2015-09-09T19:23:16.297145Z,0.20.9,FFI bindings to libgobject-2.0,https://github.com/gtk-rs/gtk-rs-core
rtoolbox,13291061,2181663,2023-11-11T16:32:14.223894Z,2022-11-26T17:59:10.021547Z,0.0.2,"Utility functions for other crates, no backwards compatibility guarantees.",
ark-ec,13277364,2439431,2024-10-28T11:04:28.458327Z,2021-03-24T21:27:43.186532Z,0.5.0,A library for elliptic curves and pairings,https://github.com/arkworks-rs/algebra
is-macro,13233137,3048979,2024-11-04T06:29:59.996091Z,2019-12-27T07:31:20.065978Z,0.3.7,Derive methods for using custom enums like Option / Result,https://github.com/dudykr/ddbase.git
logos,13206166,3733659,2024-12-10T11:07:18.441269Z,2018-11-09T14:43:23.485073Z,0.15.0,Create ridiculously fast Lexers,https://github.com/maciejhirsz/logos
slice-group-by,13203760,1611755,2023-05-03T13:14:15.474244Z,2019-01-30T14:33:53.656028Z,0.3.1,Iterators over groups in slices and strs,https://github.com/Kerollmops/slice-group-by
logos-derive,13199043,3731520,2024-12-10T11:06:34.586333Z,2018-11-09T14:43:51.249509Z,0.15.0,Create ridiculously fast Lexers,https://github.com/maciejhirsz/logos
rdkafka-sys,13151445,1373283,2024-11-24T23:49:34.421234Z,2016-11-26T16:31:48.621807Z,4.8.0+2.3.0,Native bindings to the librdkafka library,https://github.com/fede1024/rust-rdkafka
ark-serialize-derive,13138505,2439341,2024-10-28T10:57:09.674085Z,2021-03-24T20:08:28.541493Z,0.5.0,A library for deriving serialization traits for the arkworks ecosystem,https://github.com/arkworks-rs/algebra
cranelift-native,13115375,1722199,2025-03-20T14:49:54.882645Z,2018-07-13T16:29:41.828759Z,0.118.0,Support for targeting the host with Cranelift,https://github.com/bytecodealliance/wasmtime
cached_proc_macro_types,13107222,4729076,2024-01-22T22:13:59.668482Z,2020-12-07T04:01:13.251995Z,0.1.1,Generic cache implementations and simplified function memoization,https://github.com/jaemk/cached
aws-lc-rs,13091796,6685985,2025-04-01T18:57:11.501830Z,2023-04-11T17:33:56.970172Z,1.13.0,aws-lc-rs is a cryptographic library using AWS-LC for its cryptographic operations. This library strives to be API-compatible with the popular Rust library named ring.,https://github.com/aws/aws-lc-rs
hyperlocal,13084433,5013369,2024-07-22T14:45:39.742466Z,2016-01-03T01:09:14.249538Z,0.9.1,Hyper bindings for Unix domain sockets,https://github.com/softprops/hyperlocal
syn-mid,13060826,887579,2023-09-30T08:54:49.193168Z,2019-02-14T15:29:19.458186Z,0.6.0,"Providing the features between ""full"" and ""derive"" of syn.
",https://github.com/taiki-e/syn-mid
gix-hash,13060142,2816343,2025-04-04T01:59:57.448781Z,2023-02-17T09:39:17.409686Z,0.17.0,Borrowed and owned git hash digests used to identify git objects,https://github.com/GitoxideLabs/gitoxide
snow,13038112,1647990,2025-02-18T21:38:38.073586Z,2017-03-10T06:27:50.580233Z,0.10.0-alpha.1,A pure-rust implementation of the Noise Protocol Framework,https://github.com/mcginty/snow
gix-tempfile,13021442,2767014,2025-04-04T02:05:20.493161Z,2023-02-17T09:42:44.425673Z,17.0.0,A tempfile implementation with a global registry to assure cleanup,https://github.com/GitoxideLabs/gitoxide
color-spantrace,13010336,1796044,2023-11-17T17:22:44.345757Z,2020-05-06T23:29:18.864517Z,0.2.1,A pretty printer for tracing_error::SpanTrace based on color-backtrace,https://github.com/eyre-rs/eyre
ark-poly,13006679,2440790,2024-10-28T11:03:02.601735Z,2021-03-24T21:37:57.815241Z,0.5.0,A library for efficient polynomial arithmetic via FFTs over finite fields,https://github.com/arkworks-rs/algebra
mio-extras,13003206,396364,2019-12-07T15:47:43.976339Z,2017-12-21T15:15:17.651650Z,2.0.6,Extra components for use with Mio,https://github.com/dimbleby/mio-extras
memfd,13001333,2055782,2023-09-18T16:13:10.828118Z,2018-08-21T20:31:36.276500Z,0.6.4,A pure-Rust library to work with Linux memfd and sealing,https://github.com/lucab/memfd-rs
glib,12982343,1947382,2025-02-16T11:13:19.507156Z,2015-05-12T18:00:50.319378Z,0.20.9,Rust bindings for the GLib library,https://github.com/gtk-rs/gtk-rs-core
servo_arc,12971515,2553507,2024-10-22T11:11:15.288798Z,2018-01-12T23:13:18.094655Z,0.4.0,A fork of std::sync::Arc with some extra functionality and without weak references,https://github.com/servo/stylo
async-graphql,12967927,2580842,2025-03-20T04:51:09.163335Z,2020-03-03T11:31:03.943275Z,7.0.16,A GraphQL server library implemented in Rust,https://github.com/async-graphql/async-graphql
kstring,12957506,2825180,2024-07-25T13:52:17.503818Z,2020-03-16T20:53:39.275724Z,2.0.2,Key String: optimized for map keys,https://github.com/cobalt-org/kstring
gix-date,12955875,2828483,2025-04-04T01:59:05.529797Z,2023-02-17T09:39:08.124794Z,0.9.4,A crate of the gitoxide project parsing dates the way git does,https://github.com/GitoxideLabs/gitoxide
aws-lc-sys,12950908,6727297,2025-04-01T18:55:06.080537Z,2022-11-09T14:51:37.712153Z,0.28.0,AWS-LC is a general-purpose cryptographic library maintained by the AWS Cryptography team for AWS and their customers. It Ñs based on code from the Google BoringSSL project and the OpenSSL project.,https://github.com/aws/aws-lc-rs
futures-cpupool,12941564,285143,2018-01-02T06:28:14.258723Z,2016-08-01T23:37:39.793675Z,0.1.8,"An implementation of thread pools which hand out futures to the results of the
computation on the threads themselves.
",https://github.com/alexcrichton/futures-rs
proc-macro2-diagnostics,12912637,3218931,2023-07-10T19:13:48.670035Z,2020-10-10T08:01:10.106679Z,0.10.1,Diagnostics for proc-macro2.,https://github.com/SergioBenitez/proc-macro2-diagnostics
scale-info,12877667,1836655,2024-11-20T14:49:29.345447Z,2020-06-12T11:16:47.525527Z,2.11.6,Info about SCALE encodable Rust types,https://github.com/paritytech/scale-info
scale-info-derive,12858853,1831562,2024-11-20T14:48:49.426569Z,2020-06-12T11:13:56.018905Z,2.11.6,Derive type info for SCALE encodable types,https://github.com/paritytech/scale-info
gix-ref,12850235,2772529,2025-04-04T02:07:37.157655Z,2023-02-17T09:43:40.006855Z,0.51.0,A crate to handle git references,https://github.com/GitoxideLabs/gitoxide
gix-object,12846990,2773766,2025-04-04T02:01:01.665987Z,2023-02-17T09:43:23.832218Z,0.48.0,Immutable and mutable git objects with decoding and encoding support,https://github.com/GitoxideLabs/gitoxide
sdd,12829470,7518022,2025-03-09T11:23:56.321595Z,2024-04-14T18:03:40.616625Z,3.0.8,Scalable lock-free delayed memory reclaimer,https://github.com/wvwwvwwv/scalable-delayed-dealloc/
qoi,12810315,3510770,2022-10-16T23:52:56.288067Z,2021-11-25T13:20:16.450595Z,0.4.1,VERY fast encoder/decoder for QOI (Quite Okay Image) format,https://github.com/aldanor/qoi-rust
gix-actor,12803598,2746332,2025-04-04T01:59:29.376699Z,2023-02-17T09:40:30.499467Z,0.34.0,A way to identify git actors,https://github.com/GitoxideLabs/gitoxide
gix-path,12800221,2808178,2025-04-04T02:00:21.692433Z,2023-02-17T09:40:48.866428Z,0.10.15,A crate of the gitoxide project dealing paths and their conversions,https://github.com/GitoxideLabs/gitoxide
serde_fmt,12798411,3066493,2023-05-05T01:33:24.525247Z,2019-07-10T23:44:11.650458Z,1.0.3,Write any serde::Serialize using the standard formatting APIs,https://github.com/KodrAus/serde_fmt.git
blowfish,12790248,2099010,2025-03-07T14:29:13.297521Z,2016-10-06T21:13:17.263613Z,0.10.0-pre.3,Blowfish block cipher,https://github.com/RustCrypto/block-ciphers
self_cell,12778647,2850113,2024-12-05T16:11:00.791159Z,2021-04-26T17:54:26.867568Z,1.1.0,Safe-to-use proc-macro-free self-referential structs in stable Rust.,https://github.com/Voultapher/self_cell
gix-config,12772817,2755472,2025-04-04T02:18:12.855616Z,2023-02-17T09:44:37.670057Z,0.44.0,A git-config file parser and editor from the gitoxide project,https://github.com/GitoxideLabs/gitoxide
roaring,12768137,3138546,2025-04-05T08:21:07.523816Z,2014-12-27T06:51:13.732548Z,0.10.12,A better compressed bitset - pure Rust implementation,https://github.com/RoaringBitmap/roaring-rs
gix-glob,12749681,2778863,2025-04-04T02:01:23.365420Z,2023-02-17T09:40:37.662443Z,0.19.0,A crate of the gitoxide project dealing with pattern matching,https://github.com/GitoxideLabs/gitoxide
bimap,12747666,2079973,2023-03-19T03:46:32.359420Z,2017-09-10T20:49:54.744249Z,0.6.3,Bijective maps,https://github.com/billyrieger/bimap-rs/
aws-sig-auth,12738881,317128,2024-01-22T20:09:17.502610Z,2021-10-21T16:43:56.750134Z,0.60.3,This crate is no longer used by the AWS SDK and is deprecated.,https://github.com/smithy-lang/smithy-rs
gix-lock,12732688,2730098,2025-04-04T02:05:33.056050Z,2023-02-17T09:42:56.259629Z,17.0.0,A git-style lock-file implementation,https://github.com/GitoxideLabs/gitoxide
gix-fs,12729518,2769616,2025-04-04T02:03:43.204711Z,2023-04-19T07:39:30.790171Z,0.14.0,A crate providing file system specific utilities to `gitoxide`,https://github.com/GitoxideLabs/gitoxide
async-graphql-derive,12709854,2540608,2025-03-20T04:50:15.373516Z,2020-03-03T11:25:44.438034Z,7.0.16,Macros for async-graphql,https://github.com/async-graphql/async-graphql
tokio-metrics,12706557,6724621,2024-11-26T15:46:26.439753Z,2022-02-17T22:23:55.336047Z,0.4.0,"Runtime and task level metrics for Tokio applications.
",https://github.com/tokio-rs/tokio-metrics
multiaddr,12684254,2041097,2024-09-23T10:55:56.741335Z,2015-12-28T18:05:49.540955Z,0.18.2,Implementation of the multiaddr format,https://github.com/multiformats/rust-multiaddr
open,12631853,1684301,2025-01-05T15:03:38.023011Z,2015-02-27T16:30:59.471198Z,5.3.2,Open a path or URL using the program configured on the system,https://github.com/Byron/open-rs
path-slash,12631616,1816784,2022-08-06T12:13:44.928162Z,2018-12-30T09:43:45.563764Z,0.2.1,Conversion to/from a file path from/to slash path,https://github.com/rhysd/path-slash
sea-query,12595428,3260592,2025-03-16T19:47:24.725027Z,2020-12-16T08:02:54.426171Z,0.32.3,"ð± A dynamic query builder for MySQL, Postgres and SQLite",https://github.com/SeaQL/sea-query
async-graphql-parser,12577331,2542675,2025-03-20T04:49:33.102452Z,2020-05-10T05:11:19.482573Z,7.0.16,GraphQL query parser for async-graphql,https://github.com/async-graphql/async-graphql
critical-section,12546202,2053950,2024-10-16T13:28:54.130490Z,2021-05-09T22:19:59.246258Z,1.2.0,Cross-platform critical section,https://github.com/rust-embedded/critical-section
gix-config-value,12500988,2720869,2025-04-04T02:06:00.997270Z,2023-02-17T09:42:01.213313Z,0.14.12,A crate of the gitoxide project providing git-config value parsing,https://github.com/GitoxideLabs/gitoxide
inferno,12494149,4117434,2025-03-22T13:47:27.438684Z,2019-01-27T00:38:43.387945Z,0.12.2,Rust port of the FlameGraph performance profiling tool suite,https://github.com/jonhoo/inferno.git
tinyjson,12484857,2058692,2022-12-31T09:41:26.080979Z,2016-07-18T19:26:14.840858Z,2.5.1,Tiny simple JSON parser/generator,https://github.com/rhysd/tinyjson
gix-sec,12483823,2700979,2025-04-04T02:17:42.197235Z,2023-02-17T09:43:47.417195Z,0.10.12,A crate of the gitoxide project providing a shared trust model,https://github.com/GitoxideLabs/gitoxide
unicode-bom,12471812,2668188,2023-11-13T18:51:54.829815Z,2018-10-12T15:47:27.154514Z,2.0.3,Unicode byte-order mark detection for files and byte arrays.,https://gitlab.com/philbooth/unicode-bom
expect-test,12471017,1656044,2024-12-21T13:05:32.571711Z,2020-08-20T16:20:18.575214Z,1.5.1,Minimalistic snapshot testing library,https://github.com/rust-analyzer/expect-test
supports-hyperlinks,12458697,1750370,2024-11-26T09:12:33.437575Z,2021-09-11T04:04:13.152216Z,3.1.0,Detects whether a terminal supports rendering hyperlinks.,https://github.com/zkat/supports-hyperlinks
gix-validate,12415102,2728062,2025-04-04T02:00:34.551833Z,2023-02-17T09:43:07.789329Z,0.9.4,Validation functions for various kinds of names in git,https://github.com/GitoxideLabs/gitoxide
async-graphql-value,12411212,2525336,2025-03-20T04:49:03.097591Z,2020-10-11T12:43:49.026262Z,7.0.16,GraphQL value for async-graphql,https://github.com/async-graphql/async-graphql
x11rb-protocol,12408656,3315412,2024-05-01T08:04:56.295291Z,2022-06-12T09:12:24.503153Z,0.13.1,Rust bindings to X11,https://github.com/psychon/x11rb
inherent,12384582,3385161,2025-03-03T23:33:47.240169Z,2019-07-14T18:30:27.901953Z,1.0.12,Make trait methods callable without the trait in scope,https://github.com/dtolnay/inherent
rust-embed,12384063,2467455,2025-04-10T17:36:53.131943Z,2017-03-16T05:44:53.702634Z,8.7.0,Rust Custom Derive Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev,https://github.com/pyros2097/rust-embed
tiny-bip39,12356529,1035156,2024-10-07T19:39:45.215326Z,2019-02-20T12:27:42.939064Z,2.0.0,A fork of the bip39 crate with fixes to v0.6. Rust implementation of BIP-0039,https://github.com/maciejhirsz/tiny-bip39/
aws-endpoint,12348897,292968,2024-01-22T20:07:59.946713Z,2021-10-20T23:54:42.376417Z,0.60.3,This crate is no longer used by the AWS SDK and is deprecated.,https://github.com/smithy-lang/smithy-rs
indoc-impl,12344242,391146,2022-12-17T19:12:29.350677Z,2017-09-17T17:45:50.745836Z,0.3.7,Indented document literals,https://github.com/dtolnay/indoc
ucd-util,12331202,483770,2024-09-29T12:18:15.032073Z,2018-03-06T02:30:28.587323Z,0.2.2,"A small utility library for working with the Unicode character database.
",https://github.com/BurntSushi/ucd-generate
tokio-tls,12326739,204703,2020-05-06T20:15:22.808926Z,2016-12-21T17:22:41.519410Z,0.3.1,"Deprecated in favor of `tokio-naitve-tls`.

An implementation of TLS/SSL streams for Tokio giving an implementation of TLS
for nonblocking I/O streams.
",https://github.com/tokio-rs/tokio
core_affinity,12299911,2623177,2025-03-01T19:32:44.154532Z,2017-09-15T14:33:07.098921Z,0.8.3,Manages CPU affinities,https://github.com/Elzair/core_affinity_rs
graphql_query_derive,12287907,2410603,2024-03-26T13:28:35.216513Z,2018-06-18T20:08:55.138248Z,0.14.0,Utility crate for graphql_client,https://github.com/graphql-rust/graphql-client
graphql_client,12283941,2411324,2024-03-26T13:28:52.143591Z,2018-06-18T20:11:48.310828Z,0.14.0,Typed GraphQL requests and responses,https://github.com/graphql-rust/graphql-client
graphql_client_codegen,12269306,2410471,2024-03-26T13:28:00.467422Z,2018-09-09T05:45:18.803918Z,0.14.0,Utility crate for graphql_client,https://github.com/graphql-rust/graphql-client
wasmtime-environ,12266490,1581265,2025-03-20T14:51:30.616825Z,2018-08-03T22:45:21.397006Z,31.0.0,Standalone environment support for WebAssembly code in Cranelift,https://github.com/bytecodealliance/wasmtime
actix-tls,12263505,1205854,2024-05-18T17:15:57.165488Z,2019-12-02T17:23:36.378641Z,3.4.0,TLS acceptor and connector services for Actix ecosystem,https://github.com/actix/actix-net.git
rust-embed-impl,12260505,2454283,2025-04-10T17:36:11.187803Z,2018-10-24T05:01:28.539342Z,8.7.0,Rust Custom Derive Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev,https://github.com/pyros2097/rust-embed
encoding,12257747,601602,2016-08-28T16:54:28.588718Z,2014-11-14T16:58:32.629479Z,0.2.33,Character encoding support for Rust,https://github.com/lifthrasiir/rust-encoding
impl-rlp,12238186,1714502,2024-09-11T09:48:36.595498Z,2018-12-02T14:04:25.117507Z,0.4.0,RLP serialization support for uint and fixed hash.,
value-bag-serde1,12196750,3083598,2025-03-26T05:08:18.425247Z,2023-03-29T01:26:37.957057Z,1.11.1,Implementation detail for value-bag,
tokio-codec,12189613,348157,2020-02-05T00:26:24.605202Z,2017-03-14T05:55:59.813168Z,0.2.0-alpha.6,"Utilities for encoding and decoding frames.
",https://github.com/tokio-rs/tokio
ab_glyph_rasterizer,12184537,2375159,2023-01-13T09:17:23.566939Z,2020-04-10T11:56:18.041723Z,0.1.8,"Coverage rasterization for lines, quadratic & cubic beziers",https://github.com/alexheretic/ab-glyph
cranelift-isle,12178080,2075164,2025-03-20T14:48:09.106852Z,2021-12-13T19:49:21.780826Z,0.118.0,ISLE: Instruction Selection and Lowering Expressions. A domain-specific language for instruction selection in Cranelift.,https://github.com/bytecodealliance/wasmtime/tree/main/cranelift/isle
ndk-sys,12153836,3467923,2024-04-26T15:14:59.325509Z,2020-04-22T21:39:01.106532Z,0.6.0+11769913,FFI bindings for the Android NDK,https://github.com/rust-mobile/ndk
console_log,12150990,4547350,2023-03-10T04:23:52.901965Z,2019-01-01T05:10:54.595689Z,1.0.0,A logging facility that routes Rust log messages to the browser's console.,https://github.com/iamcodemaker/console_log
encoding-index-japanese,12145076,592414,2015-12-16T00:01:49.263868Z,2014-11-14T16:56:56.447532Z,1.20141219.5,Index tables for Japanese character encodings,
encoding-index-korean,12143004,592188,2015-12-16T00:01:49.263868Z,2014-11-14T16:56:31.474187Z,1.20141219.5,Index tables for Korean character encodings,
encoding-index-simpchinese,12142824,592167,2015-12-16T00:01:49.263868Z,2014-11-14T16:57:19.594597Z,1.20141219.5,Index tables for simplified Chinese character encodings,
encoding-index-tradchinese,12141209,592134,2015-12-16T00:01:49.263868Z,2014-11-14T16:57:30.197092Z,1.20141219.5,Index tables for traditional Chinese character encodings,
encoding-index-singlebyte,12135838,591856,2015-12-16T00:01:49.263868Z,2014-11-14T16:57:10.353653Z,1.20141219.5,Index tables for various single-byte character encodings,
wasmtime,12113669,1573122,2025-03-20T14:51:56.368360Z,2018-10-30T20:47:48.952444Z,31.0.0,High-level API to expose the Wasmtime runtime,https://github.com/bytecodealliance/wasmtime
encoding_index_tests,12100794,590984,2015-12-16T00:01:49.263868Z,2014-11-14T15:06:13.938932Z,0.1.4,Helper macros used to test index tables for character encodings,
kube-derive,12087902,3733801,2025-03-12T15:11:18.943824Z,2020-03-05T09:46:45.831427Z,0.99.0,Custom derives for the kube kubernetes crates,https://github.com/kube-rs/kube
attohttpc,12081165,1764108,2025-03-12T02:23:24.941204Z,2019-03-23T01:45:31.172639Z,0.29.2,Small and lightweight HTTP client,https://github.com/sbstp/attohttpc
serde-xml-rs,12068090,1240221,2022-08-31T18:35:59.526629Z,2017-02-17T17:40:07.847608Z,0.6.0,xml-rs based deserializer for Serde (compatible with 0.9+),https://github.com/RReverser/serde-xml-rs
rust-embed-utils,12044502,2448053,2025-04-10T17:35:41.214814Z,2019-07-05T04:57:11.066858Z,8.7.0,Utilities for rust-embed,https://github.com/pyros2097/rust-embed
askama_derive,12024749,1841598,2025-03-27T16:51:08.160146Z,2017-02-15T19:42:14.703577Z,0.13.0,Procedural macro package for Askama,https://github.com/askama-rs/askama
error-code,11995825,2653675,2024-09-10T00:08:02.432376Z,2020-01-11T22:13:56.731346Z,3.3.1,Error code,https://github.com/DoumanAsh/error-code
slog-json,11983498,1246579,2022-03-21T18:11:23.119992Z,2016-07-11T07:06:42.600533Z,2.6.1,JSON drain for slog-rs,https://github.com/slog-rs/json
libfuzzer-sys,11976568,3913332,2025-01-28T17:32:43.805700Z,2019-09-10T21:47:52.433899Z,0.4.9,A wrapper around LLVM's libFuzzer runtime.,https://github.com/rust-fuzz/libfuzzer
core-graphics-types,11975336,2678232,2024-08-11T11:18:55.772965Z,2020-07-20T16:57:57.396676Z,0.2.0,Bindings for some fundamental Core Graphics types,https://github.com/servo/core-foundation-rs
supports-unicode,11974183,1863446,2024-02-04T03:00:37.144466Z,2021-09-11T07:00:55.892340Z,3.0.0,Detects whether a terminal supports unicode.,https://github.com/zkat/supports-unicode
askama,11970336,1832034,2025-03-27T16:51:33.905916Z,2017-02-15T19:34:56.689248Z,0.13.0,"Type-safe, compiled Jinja-like templates for Rust",https://github.com/askama-rs/askama
byteorder-lite,11964919,7016596,2024-04-07T19:09:06.481843Z,2024-04-07T19:09:06.481843Z,0.1.0,Library for reading/writing numbers in big-endian and little-endian.,https://github.com/image-rs/byteorder-lite
foreign-types-macros,11959111,2984291,2023-03-26T17:42:18.846336Z,2019-03-04T17:47:22.329574Z,0.2.3,An internal crate used by foreign-types,https://github.com/sfackler/foreign-types
sval_json,11949657,2967203,2025-03-24T08:32:54.650023Z,2018-12-03T01:08:40.144106Z,2.14.1,JSON support for sval,https://github.com/sval-rs/sval
gix-utils,11940641,2727709,2025-04-04T01:59:15.642546Z,2023-04-19T07:37:08.499031Z,0.2.0,A crate with `gitoxide` utilities that don't need feature toggles,https://github.com/GitoxideLabs/gitoxide
tokio-uds,11927010,376209,2020-07-01T20:40:33.134556Z,2016-09-10T01:04:19.834404Z,0.3.0-alpha.1,"Unix Domain sockets for Tokio
",https://github.com/tokio-rs/tokio
embedded-io,11897703,4436555,2023-10-22T19:47:21.617118Z,2022-05-06T23:37:03.839202Z,0.6.1,Embedded IO traits,https://github.com/rust-embedded/embedded-hal
sval_fmt,11895799,2960530,2025-03-24T08:30:15.045223Z,2023-03-24T04:44:54.933005Z,2.14.1,Integration between std::fmt::Debug and sval::Value,https://github.com/sval-rs/sval
sval_dynamic,11894647,2960545,2025-03-24T08:30:36.709217Z,2023-03-24T04:43:53.094180Z,2.14.1,Object-safe versions of sval::Stream and sval::Value,https://github.com/sval-rs/sval
sval_buffer,11887125,2960080,2025-03-24T08:31:44.393903Z,2023-03-24T05:21:50.885272Z,2.14.1,Value buffering for sval,https://github.com/sval-rs/sval
wayland-cursor,11885403,3085906,2025-01-31T18:39:23.585324Z,2019-09-14T09:01:06.634283Z,0.31.8,Bindings to libwayland-cursor.,https://github.com/smithay/wayland-rs
sval_serde,11882227,2959493,2025-03-24T08:33:41.136605Z,2023-03-24T05:23:24.937848Z,2.14.1,Integration between serde::Serialize and sval::Value,https://github.com/sval-rs/sval
prettytable-rs,11878855,1273484,2022-12-27T10:39:23.283494Z,2015-06-17T21:43:24.553194Z,0.10.0,A library for printing pretty formatted tables in terminal,https://github.com/phsym/prettytable-rs
plist,11878052,1874517,2025-03-24T21:58:54.571809Z,2015-08-04T14:48:05.134399Z,1.7.1,A rusty plist parser. Supports Serde serialization.,https://github.com/ebarnard/rust-plist/
stdweb,11861632,440672,2019-10-10T19:27:40.574687Z,2017-03-12T20:09:31.453976Z,0.4.20,A standard library for the client-side Web,https://github.com/koute/stdweb
sval_ref,11861487,2959651,2025-03-24T08:31:21.915537Z,2023-04-10T04:20:07.093409Z,2.14.1,A variant of sval::Value for types with internal references,https://github.com/sval-rs/sval
value-bag-sval2,11838029,2945996,2025-03-26T05:07:52.900959Z,2023-03-29T01:26:08.141711Z,1.11.1,Implementation detail for value-bag,
str_stack,11828003,3963281,2015-12-11T23:56:18.321051Z,2015-11-14T21:27:53.971288Z,0.1.0,"A string allocator for allocating many write-once strings.

This library is primarily useful for parsing where you need to repeatedly build
many strings, use them, and then throw them away. Instead of allocating many independent strings, this library will put them all in the same buffer.
",https://github.com/Stebalien/str_stack
synom,11794344,498617,2017-03-01T23:55:10.132740Z,2017-02-19T19:51:29.241742Z,0.11.3,Stripped-down Nom parser used by Syn,https://github.com/dtolnay/syn
derive-where,11751850,4065375,2023-12-14T15:44:59.757904Z,2021-12-08T20:11:17.268105Z,1.2.7,Deriving with custom trait bounds,https://github.com/ModProg/derive-where
bb8,11727758,4769470,2024-12-09T08:26:04.788751Z,2019-03-17T22:11:09.774032Z,0.9.0,Full-featured async (tokio-based) connection pool (like r2d2),https://github.com/djc/bb8
tokio-udp,11723783,331877,2020-02-04T23:49:54.847209Z,2018-02-01T17:45:37.036442Z,0.2.0-alpha.1,"UDP bindings for tokio.
",https://github.com/tokio-rs/tokio
prometheus-client,11709509,2215332,2025-01-15T18:03:22.641632Z,2022-01-13T20:06:26.302252Z,0.23.1,Open Metrics client library allowing users to natively instrument applications.,https://github.com/prometheus/client_rust
glib-macros,11703801,1903952,2024-12-16T21:14:32.455346Z,2020-07-04T12:19:07.524986Z,0.20.7,"Rust bindings for the GLib library, proc macros crate",https://github.com/gtk-rs/gtk-rs-core
axum-extra,11692824,2789127,2025-03-28T16:29:38.777666Z,2021-12-02T19:09:53.031841Z,0.10.1,Extra utilities for axum,https://github.com/tokio-rs/axum
faster-hex,11651074,2875261,2024-09-14T06:29:11.794302Z,2018-10-30T07:29:48.231363Z,0.10.0,Fast hex encoding.,https://github.com/NervosFoundation/faster-hex
graphql-introspection-query,11634918,2385935,2021-07-04T08:09:23.753066Z,2020-03-13T08:32:30.142955Z,0.2.0,GraphQL introspection query and response types.,https://github.com/graphql-rust/graphql-client
zune-jpeg,11626447,6068669,2024-12-12T13:58:43.744669Z,2022-05-09T16:17:56.849281Z,0.5.0-rc2,"A fast, correct and safe jpeg decoder",https://github.com/etemesi254/zune-image/tree/dev/crates/zune-jpeg
task-local-extensions,11605241,2194902,2023-03-09T10:29:51.516244Z,2021-08-31T10:46:13.263848Z,0.1.4,Task-local container for arbitrary data.,https://github.com/TrueLayer/task-local-extensions
cargo-lock,11561959,1516323,2025-01-19T03:03:33.212355Z,2019-09-21T04:19:18.783164Z,10.1.0,Self-contained Cargo.lock parser with optional dependency graph analysis,https://github.com/rustsec/rustsec
tokio-fs,11540346,340495,2020-02-05T00:25:24.864276Z,2018-02-01T17:42:57.822969Z,0.2.0-alpha.6,"Filesystem API for Tokio.
",https://github.com/tokio-rs/tokio
test-case-core,11528614,5178349,2023-11-17T20:16:23.910151Z,2023-02-13T08:39:52.817918Z,3.3.1,Provides core functionality for parsing #[test_case(...)] procedural macro attribute for generating parametrized test cases easily,https://github.com/frondeus/test-case
byte-unit,11506815,1224894,2024-11-02T14:24:10.363939Z,2018-07-29T16:02:36.504424Z,5.1.6,A library for interacting with units of bytes.,https://github.com/magiclen/byte-unit
proc-macro-error2,11501919,8367961,2024-09-06T20:04:43.796942Z,2023-08-26T11:26:40.981990Z,2.0.1,Almost drop-in replacement to panics in proc-macros,https://github.com/GnomedDev/proc-macro-error-2
enumn,11499445,2448470,2024-07-30T05:57:57.757718Z,2018-12-06T09:51:19.819047Z,0.1.14,Convert number to enum,https://github.com/dtolnay/enumn
proc-macro-error-attr2,11497440,8366892,2024-09-05T11:14:52.301350Z,2024-09-01T22:11:25.963845Z,2.0.0,Attribute macro for the proc-macro-error2 crate,https://github.com/GnomedDev/proc-macro-error-2
zune-core,11444578,5978283,2024-07-21T13:46:35.861088Z,2023-02-25T20:32:13.382386Z,0.5.0-rc2,Core utilities for image processing in the zune family of crates,https://github.com/etemesi254/zune-image
lsp-types,11426751,1483246,2024-06-04T12:38:56.735619Z,2019-01-11T20:05:25.140469Z,0.97.0,"Types for interaction with a language server, using VSCode's Language Server Protocol",https://github.com/gluon-lang/lsp-types
subprocess,11419107,1279140,2022-05-15T11:48:55.304215Z,2017-01-14T23:04:56.217060Z,0.2.9,"Execution of child processes and pipelines, inspired by Python's subprocess
module, with Rust-specific extensions.
",https://github.com/hniksic/rust-subprocess
profiling,11417894,2660546,2024-10-14T03:42:55.634865Z,2020-11-25T19:32:39.066195Z,1.0.16,This crate provides a very thin abstraction over other profiler crates.,https://github.com/aclysma/profiling
string,11411772,191273,2024-09-13T16:14:11.884955Z,2017-07-25T19:44:21.614062Z,0.3.1,A UTF-8 encoded string with configurable byte storage.,https://github.com/carllerche/string
typeid,11399218,5999556,2025-03-04T00:22:40.440718Z,2024-05-13T10:52:11.529794Z,1.0.3,Const TypeId and non-'static TypeId,https://github.com/dtolnay/typeid
yada,11389960,1072840,2024-02-25T06:48:14.095349Z,2020-09-20T13:04:46.431404Z,0.5.1,Yada is a yet another double-array trie library aiming for fast search and compact data representation.,https://github.com/takuyaa/yada
string-interner,11380590,2952471,2025-02-11T15:41:34.649494Z,2017-02-06T00:10:54.307279Z,0.19.0,"Efficient string interner with minimal memory footprint
and fast access to the underlying strings.
",https://github.com/robbepop/string-interner
wit-bindgen-rt,11374974,10383938,2025-03-13T02:06:21.671810Z,2024-03-01T21:41:06.168372Z,0.41.0,"Internal runtime support for the `wit-bindgen` crate.
",https://github.com/bytecodealliance/wit-bindgen
pkcs5,11343085,3273984,2025-02-15T00:34:23.372766Z,2020-06-12T14:01:10.523029Z,0.8.0-rc.3,"Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #5:
Password-Based Cryptography Specification Version 2.1 (RFC 8018)
",https://github.com/RustCrypto/formats
embedded-hal,11326696,3007546,2024-01-09T21:39:43.662055Z,2018-01-16T22:46:10.990824Z,1.0.0, A Hardware Abstraction Layer (HAL) for embedded systems ,https://github.com/rust-embedded/embedded-hal
parity-wasm,11305812,842144,2022-05-26T11:28:32.718825Z,2017-04-12T19:39:41.562712Z,0.45.0,WebAssembly low-level format library,https://github.com/paritytech/parity-wasm
ndk,11292362,3047329,2024-04-26T15:15:21.991128Z,2020-04-22T21:40:19.676971Z,0.9.0,Safe Rust bindings to the Android NDK,https://github.com/rust-mobile/ndk
jsonrpc-core,11275037,811356,2021-07-20T15:53:06.950767Z,2016-01-18T15:30:55.704995Z,18.0.0,Transport agnostic rust implementation of JSON-RPC 2.0 Specification.,https://github.com/paritytech/jsonrpc
gl_generator,11271427,2182284,2019-10-03T10:44:28.795911Z,2014-11-12T18:21:59.033880Z,0.14.0,Code generators for creating bindings to the Khronos OpenGL APIs.,https://github.com/brendanzab/gl-rs/
sealed,11245396,3219290,2024-10-06T16:19:07.451936Z,2020-12-17T14:15:07.906176Z,0.6.0,Macro for sealing traits and structures,https://github.com/jmg-duarte/sealed-rs
ascii_utils,11224902,2292389,2017-01-31T11:02:59.368219Z,2016-12-07T16:09:02.005042Z,0.9.3,Utilities to handle ASCII characters,https://github.com/tredoe/ascii_utils
cpu-time,11198798,2654902,2019-10-27T22:41:49.171117Z,2018-08-23T14:55:17.769217Z,1.0.0,"    Small crate that provides CPU time measurement.
",
wasmtime-cranelift,11183330,1529701,2025-03-20T14:51:38.916458Z,2020-09-23T18:55:05.358247Z,31.0.0,Integration between Cranelift and Wasmtime,https://github.com/bytecodealliance/wasmtime
gio-sys,11170096,1660775,2025-02-16T11:11:54.754666Z,2015-09-09T19:30:51.513917Z,0.20.9,FFI bindings to libgio-2.0,https://github.com/gtk-rs/gtk-rs-core
fast_chemail,11154954,2291388,2019-02-15T12:02:40.474144Z,2016-12-07T16:21:01.652704Z,0.9.6,Check email address,https://gitlab.com/fast_chemail/fast_chemail-rs
ab_glyph,11132991,2416011,2024-10-05T11:10:58.488121Z,2020-04-10T12:02:46.276833Z,0.2.29,"API for loading, scaling, positioning and rasterizing OpenType font glyphs.",https://github.com/alexheretic/ab-glyph
actix,11125012,984699,2024-06-09T18:41:11.428390Z,2017-09-25T16:26:55.871980Z,0.13.5,Actor framework for Rust,https://github.com/actix/actix
prodash,11106479,2733948,2025-03-11T07:32:13.742147Z,2020-02-16T13:35:25.721070Z,29.0.1,A dashboard for visualizing progress of asynchronous and possibly blocking tasks,https://github.com/Byron/prodash
regress,11071396,2906046,2025-01-21T00:17:48.773728Z,2020-05-25T00:17:36.572850Z,0.10.3,A regular expression engine targeting EcmaScript syntax,https://github.com/ridiculousfish/regress
rust-argon2,11065220,763067,2024-01-08T19:35:56.330971Z,2017-03-02T19:20:48.506261Z,2.1.0,Rust implementation of the Argon2 password hashing function.,https://github.com/sru-systems/rust-argon2
cranelift-wasm,11050621,1001375,2024-11-05T19:22:55.441350Z,2018-07-13T16:30:52.036660Z,0.112.3,Translator from WebAssembly to Cranelift IR,https://github.com/bytecodealliance/wasmtime
sentry-tracing,11041404,2242174,2025-04-01T11:45:19.548729Z,2021-07-08T08:01:27.341712Z,0.37.0,"Sentry integration for tracing and tracing-subscriber crates.
",https://github.com/getsentry/sentry-rust
onig,11026403,1826175,2022-08-09T06:34:55.753625Z,2016-01-13T07:56:36.245715Z,6.4.0,"Rust-Onig is a set of Rust bindings for the
Oniguruma regular expression library. Oniguruma
is a modern regex library with support for
multiple character encodings and regex syntaxes.
",http://github.com/iwillspeak/rust-onig
cocoa,11005696,2371174,2024-08-11T11:26:26.370971Z,2015-02-12T11:46:36.178772Z,0.26.0,Bindings to Cocoa for macOS,https://github.com/servo/core-foundation-rs
traitobject,11005084,266948,2025-02-13T09:47:18.773006Z,2015-04-02T20:05:28.709587Z,0.1.1,Unsafe helpers for working with raw trait objects.,https://github.com/reem/rust-traitobject.git
opentelemetry-jaeger,10982720,725546,2024-05-15T17:19:37.026720Z,2020-02-08T01:47:13.896285Z,0.22.0,Jaeger exporter for OpenTelemetry,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-jaeger
sea-query-binder,10975604,3077908,2024-10-17T07:12:27.637746Z,2022-07-01T12:05:07.440900Z,0.7.0,Driver library for using SeaQuery with SQLx,https://github.com/SeaQL/sea-query
android_log-sys,10972873,1426321,2025-03-04T09:36:10.495130Z,2016-02-23T21:09:33.745370Z,0.3.2,"FFI bindings to Android log Library.
",https://github.com/rust-mobile/android_log-sys-rs
normpath,10970075,2033800,2024-08-03T14:12:24.003948Z,2020-11-09T04:33:15.406609Z,1.3.0,"More reliable path manipulation
",https://github.com/dylni/normpath
term_size,10969385,379056,2020-05-03T02:34:43.778544Z,2016-06-30T02:37:02.665770Z,1.0.0-beta1,functions for determining terminal sizes and dimensions,https://github.com/kbknapp/term_size-rs.git
netlink-sys,10956828,1727178,2024-12-10T10:23:31.446942Z,2018-07-11T00:07:39.938490Z,0.8.7,"netlink sockets, with optional integration with tokio",https://github.com/rust-netlink/netlink-sys
netlink-packet-core,10921890,1715419,2023-07-09T07:21:18.624330Z,2019-12-20T08:05:19.720300Z,0.7.0,netlink packet types,https://github.com/rust-netlink/netlink-packet-core
ct-logs,10909169,446156,2021-04-10T17:22:10.470887Z,2017-07-14T21:30:48.686251Z,0.9.0,Google's list of Certificate Transparency logs for use with sct crate,https://github.com/ctz/ct-logs
yamux,10909010,1912232,2024-11-18T14:40:53.378275Z,2018-11-09T11:28:27.821828Z,0.13.4,"Multiplexer over reliable, ordered connections",https://github.com/paritytech/yamux
napi-build,10907365,958709,2025-03-22T05:24:41.143519Z,2020-03-16T06:34:29.735710Z,2.1.6,N-API build support,https://github.com/napi-rs/napi-rs
onig_sys,10889045,1825843,2022-08-09T06:34:18.229355Z,2016-01-13T19:01:01.399076Z,69.8.1,"The `onig_sys` crate contains raw rust bindings to the
oniguruma library. This crate exposes a set of unsafe
functions which can then be used by other crates to
create safe wrappers around Oniguruma.

You probably don't want to link to this crate directly;
instead check out the `onig` crate.
",http://github.com/iwillspeak/rust-onig
annotate-snippets,10884780,1719678,2024-12-09T18:20:38.578848Z,2018-04-25T08:08:25.933764Z,0.11.5,Library for building code annotations,https://github.com/rust-lang/annotate-snippets-rs
typetag,10876820,2713919,2025-02-28T07:41:51.705427Z,2019-01-23T08:13:35.009542Z,0.2.20,Serde serializable and deserializable trait objects,https://github.com/dtolnay/typetag
similar-asserts,10875979,2732811,2025-02-24T22:43:25.540891Z,2021-02-25T22:48:21.164161Z,1.7.0,provides assert_eq! like macros with colorized diff output,https://github.com/mitsuhiko/similar-asserts
typetag-impl,10871580,2713592,2025-02-28T07:41:28.276487Z,2019-01-23T17:44:02.413169Z,0.2.20,Implementation detail of the typetag crate,https://github.com/dtolnay/typetag
discard,10869440,309686,2018-09-17T14:52:43.098542Z,2018-02-25T04:29:22.641164Z,1.0.4,Discard trait which allows for intentionally leaking memory,https://github.com/Pauan/rust-discard
netlink-packet-utils,10838179,1691110,2025-04-02T05:35:06.768491Z,2019-12-20T08:04:39.561566Z,0.6.0,macros and helpers for parsing netlink messages,https://github.com/rust-netlink/netlink-packet-utils
cassowary,10824983,1596158,2017-09-13T20:04:34.589162Z,2016-04-30T17:13:30.674561Z,0.3.0,"A Rust implementation of the Cassowary linear constraint solving algorithm.

The Cassowary algorithm is designed for naturally laying out user interfaces using linear constraints,
like 'this button must line up with this text box'.
",https://github.com/dylanede/cassowary-rs
uriparse,10779601,3005033,2022-03-18T21:29:43.314139Z,2018-07-14T10:17:58.079362Z,0.6.4,A URI parser including relative references,https://github.com/sgodwincs/uriparse-rs
libmimalloc-sys,10779305,2198670,2025-04-07T19:30:29.239215Z,2019-06-24T19:56:56.407804Z,0.1.42,Sys crate wrapping the mimalloc allocator,https://github.com/purpleprotocol/mimalloc_rust/tree/master/libmimalloc-sys
oauth2,10776317,2973614,2025-01-21T00:40:54.118712Z,2014-12-16T19:55:49.350269Z,5.0.0,"An extensible, strongly-typed implementation of OAuth2",https://github.com/ramosbugs/oauth2-rs
mimalloc,10750326,2202978,2025-04-07T19:30:52.783451Z,2019-06-24T19:57:57.202544Z,0.1.46,Performance and security oriented drop-in allocator,https://github.com/purpleprotocol/mimalloc_rust
netlink-packet-route,10749406,1722581,2025-03-17T06:07:58.173342Z,2019-12-20T08:09:04.995119Z,0.22.0,netlink packet types,https://github.com/rust-netlink/netlink-packet-route
hmac-sha512,10713593,4384546,2024-12-09T11:32:20.290210Z,2020-05-01T09:47:22.163746Z,1.1.6,"A small, self-contained SHA512, HMAC-SHA512, SHA384 and HMAC-SHA384 implementation",https://github.com/jedisct1/rust-hmac-sha512
treeline,10700712,3786811,2017-08-03T02:56:40.231102Z,2017-08-03T02:56:40.231102Z,0.1.0,a library for visualizing tree structured data,https://github.com/softprops/treeline
dbus,10690114,1543202,2023-01-06T19:53:09.784609Z,2015-02-14T23:02:59.878555Z,0.9.7,"Bindings to D-Bus, which is a bus commonly used on Linux for inter-process communication.",https://github.com/diwic/dbus-rs
glow,10689531,1821465,2024-11-19T15:18:29.048184Z,2019-03-20T18:27:03.121785Z,0.16.0,"GL on Whatever: a set of bindings to run GL (Open GL, OpenGL ES, and WebGL) anywhere, and avoid target-specific code.",https://github.com/grovesNL/glow
region,10659833,887424,2024-03-25T08:23:23.185308Z,2016-11-06T15:09:42.831638Z,3.0.2,Cross-platform virtual memory API,https://github.com/darfink/region-rs
path-clean,10646237,2037557,2023-02-24T03:24:24.388366Z,2018-11-06T01:13:18.641954Z,1.0.1,A Rust implementation of cleanname or path.Clean,https://github.com/danreeves/path-clean
gix-trace,10642032,2783246,2025-01-18T15:46:58.416899Z,2023-06-16T20:06:53.259588Z,0.1.12,A crate to provide minimal `tracing` support that can be turned off to zero cost,https://github.com/GitoxideLabs/gitoxide
valico,10638530,2329898,2023-05-13T20:11:02.198943Z,2014-11-23T07:37:57.012828Z,4.0.0,JSON Schema validator and JSON coercer,
custom_derive,10635670,4789227,2016-11-21T05:04:37.771915Z,2015-08-07T09:32:22.174344Z,0.1.7,(Note: superseded by `macro-attr`) This crate provides a macro that enables the use of custom derive attributes.,https://github.com/DanielKeep/rust-custom-derive/tree/custom_derive-master
serde_tokenstream,10601064,2976590,2024-08-14T19:10:55.538517Z,2020-05-15T07:25:29.971924Z,0.2.2,A serde deserializer for proc_macro::TokenStreams,https://github.com/oxidecomputer/serde_tokenstream
jsonway,10591687,2322649,2018-03-07T02:54:13.611589Z,2014-11-23T07:59:07.686291Z,2.0.0,JSON building DSL and configurable serializers for Rust,https://github.com/rustless/jsonway
protobuf-support,10588090,2897910,2025-03-10T14:06:51.228752Z,2022-04-29T05:22:24.147542Z,3.7.2,"Code supporting protobuf implementation. None of code in this crate is public API.
",https://github.com/stepancheg/rust-protobuf/
stdweb-internal-macros,10581283,273389,2019-10-10T19:26:38.628223Z,2018-02-21T19:25:02.068503Z,0.2.9,Internal procedural macros for the `stdweb` crate,https://github.com/koute/stdweb
wasmtime-runtime,10530972,819140,2024-05-07T19:21:21.498292Z,2019-08-21T00:01:13.091999Z,20.0.2,Runtime library support for Wasmtime,https://github.com/bytecodealliance/wasmtime
stdweb-derive,10522061,267376,2019-10-10T19:25:58.504030Z,2018-02-21T19:30:48.627760Z,0.5.3,Derive macros for the `stdweb` crate,https://github.com/koute/stdweb
stdweb-internal-runtime,10520609,268069,2019-09-29T20:21:34.654210Z,2018-08-27T19:02:01.333183Z,0.1.5,Internal runtime for the `stdweb` crate,https://github.com/koute/stdweb
json-pointer,10505039,2393041,2020-09-05T21:38:04.609228Z,2017-05-26T21:12:00.829287Z,0.3.4,"A crate for parsing and using JSON pointers, as specified in RFC 6901.",https://github.com/jmap-rs/json-pointer
state,10493577,711584,2023-05-25T18:43:23.030769Z,2017-01-04T15:54:12.131089Z,0.6.0,"A library for safe and effortless global and thread-local state management.
",https://github.com/SergioBenitez/state
test-log-macros,10493482,5451217,2025-01-18T18:39:57.509542Z,2023-12-06T16:51:43.596538Z,0.2.17,"Supporting procedural macro crate for test-log.
",https://github.com/d-e-s-o/test-log.git
built,10487165,2344338,2025-02-16T21:43:31.231288Z,2017-02-20T21:35:49.486681Z,0.7.7,Provides a crate with information from the time it was built.,https://github.com/lukaslueg/built
xdg-home,10480328,3188139,2024-08-09T16:07:03.131017Z,2023-03-28T22:24:11.505242Z,1.3.0,The user's home directory as per XDG Specification,https://github.com/zeenix/xdg-home
jsonrpsee-types,10472244,1583809,2025-03-17T18:11:44.486925Z,2021-03-04T11:55:48.732766Z,0.24.9,JSON-RPC v2 specific types,https://github.com/paritytech/jsonrpsee
objc2,10471332,4552893,2025-01-22T23:40:36.106608Z,2021-11-19T13:58:11.786614Z,0.6.0,Objective-C interface and runtime bindings,https://github.com/madsmtm/objc2
bitfield,10397249,1428577,2025-02-23T19:04:43.543247Z,2014-11-20T23:02:42.881881Z,0.19.0,This crate provides macros to generate bitfield-like struct.,https://github.com/dzamlo/rust-bitfield
metrics-exporter-prometheus,10389904,1822184,2025-01-31T13:40:42.549520Z,2020-06-17T02:12:26.098844Z,0.16.2,A metrics-compatible exporter for sending metrics to Prometheus.,https://github.com/metrics-rs/metrics
